{"version":3,"sources":["screens/about/AboutScreen.tsx","state/utils/isBusy.ts","state/utils/formatAddress.ts","state/utils/useCountryDropdownSource.ts","state/utils/useTimezoneDropdownSource.ts","state/courses/COURSE_FRAGMENT.ts","state/courses/useCourseSearch.ts","state/courses/useGetCourse.ts","state/courses/useCreateCourse.ts","state/courses/useUpdateCourse.ts","state/courses/useRemoveCourse.ts","services/logging/info.ts","services/logging/error.ts","services/auth/AuthContext.ts","services/auth/AuthProvider.tsx","services/auth/useAuthContext.ts","services/config/ConfigProvider.tsx","services/config/useConfig.ts","state/courses/useIsUnique.ts","components/forms/getFormData.ts","components/forms/isSet.ts","components/forms/getFieldValue.ts","components/forms/validation/isValid.ts","components/forms/useForm.ts","services/api/generated.tsx","components/forms/text-field/TextField.tsx","components/forms/place-field/getPlace.ts","components/forms/place-field/PlaceField.tsx","components/forms/text-area-field/TextAreaField.tsx","components/forms/form-section/FormSection.tsx","components/forms/form/Form.tsx","components/forms/dropdown-field/DEFAULT_FILTER.ts","components/forms/dropdown-field/DropdownField.tsx","components/forms/validation/isEmailAddress.ts","components/forms/validation/isNumber.ts","components/forms/validation/notNullOrEmpty.ts","components/forms/validation/isFormValid.ts","components/forms/converters/numberConverter.ts","screens/add-course/AddCourseScreen.tsx","components/body/Body.tsx","screens/edit-course/EditCourseScreen.tsx","services/maps/MapsProvider.tsx","components/protected-route/ProtectedRoute.tsx","state/media/useGetImageSource.ts","state/IMAGE_REF_FRAGMENT.ts","state/players/SELF_FRAGMENT.ts","state/players/useGetSelf.ts","components/remove-course-button/RemoveCourseButton.tsx","screens/admin/AdminScreen.tsx","services/api/utils/paginationPolicy.ts","services/api/utils/replacePolicy.ts","services/api/utils/mergePolicy.ts","services/api/utils/paginatedGamesPolicy.ts","services/api/createClient.ts","services/api/useApiVersion.ts","services/api/ApiProvider.tsx","services/api/MIN_SUPPORTED_API_VERSION.ts","components/screen-shot/ScreenShot.tsx","components/top-menu/TopMenu.tsx","assets/apple.svg","assets/google.png","assets/screenshot-1.png","screens/landing/LandingScreen.tsx","screens/login/LoginScreen.tsx","App.tsx","services/firebase/firebaseConfig.ts","services/firebase/registerFirebaseApp.ts","reportWebVitals.ts","index.tsx"],"names":["AboutScreen","isBusy","currentStatus","busy","NetworkStatus","loading","refetch","indexOf","getCountryName","memoize","countryCode","countries","filter","c","iso","map","name","formatAddress","street","streetNumber","suburb","province","maxLength","truncate","term","join","length","useCountryDropdownSource","useMemo","country","key","value","timezones","useTimezoneDropdownSource","timezone","COURSE_FRAGMENT","gql","SEARCH_COURSES","defaultArgs","limit","sortBy","useCourseSearch","args","useQuery","notifyOnNetworkStatusChange","variables","data","networkStatus","fetchMore","courses","continuationToken","GET_COURSE","useGetCourse","courseId","course","CREATE_COURSE","useCreateCourse","useMutation","update","cache","modify","fields","createCourse","execute","input","a","result","id","useUpdateCourse","updateCourse","REMOVE_COURSE","useRemoveCourse","readField","ref","from","fieldName","removeCourse","info","message","console","log","error","React","createContext","authenticating","authenticated","logout","Promise","resolve","getToken","AuthProvider","children","auth","getAuth","userRef","useRef","useState","state","setState","tryLogout","signOut","handleLogin","useCallback","user","current","handleLogout","useEffect","onAuthStateChanged","AuthContext","Provider","getIdToken","useAuthContext","useContext","ConfigProvider","ready","setReady","remoteConfig","getRemoteConfig","fetchAndActivate","init","useConfig","getString","getNumber","getBoolean","getValue","useIsUnique","url","isUnique","verify","debounce","token","fetch","headers","Authorization","response","status","getFormData","form","Object","keys","reduce","field","converter","toData","getFieldValue","isValid","validators","validator","createForm","toField","touched","createField","useForm","onChange","setValue","touch","Array","isArray","aggregate","setValues","values","assign","entries","previousValue","clear","defaultValue","CommunicationMethod","GamePlayerStatus","GameType","Holes","Permission","PlayerType","ReactionType","TextField","label","containerClassName","props","hasError","className","classNames","type","e","target","DIALING_CODE_REGEX","findAddressComponent","find","getTelephoneNumber","international_phone_number","replace","getDialingCode","first","match","getCountryCode","shortName","getPostCode","getProvince","longName","getStreet","getStreetNumber","getSuburb","getCity","getPlace","addressComponents","address_components","item","types","short_name","long_name","getAddressComponents","telephoneNumber","dialingCode","postCode","city","lat","geometry","location","lon","lng","website","description","PlacesField","onPlaceChanged","setTerm","autoComplete","onSetAutoComplete","onSelect","onLoad","FormSection","title","index","Form","onSubmit","preventDefault","DEFAULT_FILTER","toLowerCase","includes","DropdownField","source","open","setOpen","hasFocus","setHasFocus","select","items","onFocus","onBlur","onMouseOver","onMouseOut","onClick","isEmailAddressRegex","isEmailAddress","test","isNumber","undefined","isNaN","notNullOrEmpty","isFormValid","fieldNames","affectedFields","numberConverter","toString","AddCourseScreen","history","useHistory","emailAddress","timezoneId","checkingUniqueness","submit","number","physicalAddress","coordinates","place","PlaceField","placeholder","TextAreaField","goBack","Body","style","EditCourseScreen","useParams","MapsProvider","useJsApiLoader","googleMapsApiKey","process","libraries","isLoaded","memo","ProtectedRoute","to","useGetImageSource","imageRef","width","config","setSource","baseUrl","load","IMAGE_REF_FRAGMENT","GET_SELF","SELF_FRAGMENT","useGetSelf","RemoveCourse","onRemoveClicked","NavBar","self","profileImageRef","tabIndex","src","alt","icon","faSignOutAlt","CourseList","push","faPlus","RemoveCourseButton","DashboardScreen","AdminScreen","path","policy","keyArgs","read","cachedItem","merge","prev","incoming","stableArgs","omit","isEqual","uniqBy","_","existing","createClient","httpLink","BatchHttpLink","uri","authLink","setContext","authorization","errorLink","onError","graphQLErrors","networkError","forEach","ApolloClient","link","concat","InMemoryCache","typePolicies","PostCommentOfPlayer","replies","paginationPolicy","reactions","replacePolicy","PostOfPlayer","comments","Player","playerTypes","preferredGameTypes","preferredPlayerTypes","preferredCourses","communities","gameInvitations","games","paginatedGamesPolicy","posts","PostCommentOfCommunity","PostOfCommunity","Community","admins","Game","players","invitations","PaginatedResultsOfGame","mergePolicy","Course","PhysicalAddress","keyFields","Query","chat","feed","agenda","useApiVersion","version","setVersion","then","json","err","ApiProvider","authContext","clientRef","currentVersion","clearStore","ApolloProvider","client","ScreenShot","TopMenu","href","Section","Break","inverse","viewBox","points","LandingScreen","google","apple","screenshot1","provider","GoogleAuthProvider","LoginScreen","setBusy","getRedirectResult","catch","signInWithRedirect","faGoogle","App","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","registerFirebaseApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.569994a2.chunk.js","sourcesContent":["import React from 'react'\n\nconst AboutScreen = () => {\n  return <div>About</div>\n}\n\nexport default AboutScreen\n","import {NetworkStatus} from '@apollo/client'\n\nconst isBusy = (\n  currentStatus: NetworkStatus,\n  busy: NetworkStatus[] = [NetworkStatus.loading, NetworkStatus.refetch]\n) => {\n  return busy.indexOf(currentStatus) !== -1\n}\n\nexport default isBusy\n","import {memoize, truncate} from 'lodash'\n\nimport {PhysicalAddress} from 'services/api'\nimport {countries} from 'typed-countries'\n\nconst getCountryName = memoize(\n  (countryCode: string) =>\n    countries.filter(c => c.iso === countryCode).map(c => c.name)[0]\n)\n\nconst formatAddress = (\n  {street, streetNumber, suburb, province, countryCode}: PhysicalAddress,\n  maxLength: number = 60\n) => {\n  return truncate(\n    [streetNumber, street, suburb, province, getCountryName(countryCode)]\n      .filter(term => term)\n      .join(', '),\n    {\n      length: maxLength\n    }\n  )\n}\n\nexport default formatAddress\n","import {countries} from 'typed-countries'\nimport {useMemo} from 'react'\n\nconst useCountryDropdownSource = () => {\n  const source = useMemo(\n    () =>\n      countries.map(country => ({\n        key: country.iso,\n        value: country.name\n      })),\n    []\n  )\n\n  return source\n}\n\nexport default useCountryDropdownSource\n","import {useMemo} from 'react'\n\nconst timezones = [\n  // 'Pacific/Niue',\n  // 'Pacific/Midway',\n  // 'Pacific/Pago_Pago',\n  // 'Pacific/Rarotonga',\n  // 'Pacific/Honolulu',\n  // 'America/Adak',\n  // 'Pacific/Tahiti',\n  // 'Pacific/Marquesas',\n  // 'America/Nome',\n  // 'America/Anchorage',\n  // 'America/Juneau',\n  // 'America/Metlakatla',\n  // 'America/Yakutat',\n  // 'America/Sitka',\n  // 'Pacific/Gambier',\n  // 'America/Vancouver',\n  // 'America/Los_Angeles',\n  // 'America/Tijuana',\n  // 'Pacific/Pitcairn',\n  // 'America/Hermosillo',\n  // 'America/Chihuahua',\n  // 'America/Mazatlan',\n  // 'America/Boise',\n  // 'America/Denver',\n  // 'America/Dawson_Creek',\n  // 'America/Phoenix',\n  // 'America/Fort_Nelson',\n  // 'America/Ojinaga',\n  // 'America/Yellowknife',\n  // 'America/Creston',\n  // 'America/Inuvik',\n  // 'America/Edmonton',\n  // 'America/Cambridge_Bay',\n  // 'America/Dawson',\n  // 'America/Whitehorse',\n  // 'America/Indiana/Tell_City',\n  // 'America/Guatemala',\n  // 'America/Regina',\n  // 'America/Indiana/Knox',\n  // 'America/Mexico_City',\n  // 'America/Belize',\n  // 'America/El_Salvador',\n  // 'America/Chicago',\n  // 'America/Tegucigalpa',\n  // 'America/North_Dakota/New_Salem',\n  // 'America/North_Dakota/Center',\n  // 'America/Rankin_Inlet',\n  // 'America/North_Dakota/Beulah',\n  // 'America/Merida',\n  // 'America/Monterrey',\n  // 'America/Matamoros',\n  // 'America/Bahia_Banderas',\n  // 'America/Winnipeg',\n  // 'America/Managua',\n  // 'America/Rainy_River',\n  // 'America/Swift_Current',\n  // 'America/Resolute',\n  // 'America/Menominee',\n  // 'America/Costa_Rica',\n  // 'Pacific/Easter',\n  // 'Pacific/Galapagos',\n  // 'America/Rio_Branco',\n  // 'America/Eirunepe',\n  // 'America/Bogota',\n  // 'America/Havana',\n  // 'America/Indiana/Winamac',\n  // 'America/Detroit',\n  // 'America/Kentucky/Louisville',\n  // 'America/Toronto',\n  // 'America/Nipigon',\n  // 'America/Thunder_Bay',\n  // 'America/Iqaluit',\n  // 'America/Pangnirtung',\n  // 'America/Atikokan',\n  // 'America/Port-au-Prince',\n  // 'America/Jamaica',\n  // 'America/Panama',\n  // 'America/Cayman',\n  // 'America/Cancun',\n  // 'America/Indiana/Marengo',\n  // 'America/Kentucky/Monticello',\n  // 'America/Indiana/Petersburg',\n  // 'America/Indiana/Vincennes',\n  // 'America/Indiana/Indianapolis',\n  // 'America/New_York',\n  // 'America/Grand_Turk',\n  // 'America/Indiana/Vevay',\n  // 'America/Nassau',\n  // 'America/Guayaquil',\n  // 'America/Lima',\n  // 'America/Porto_Velho',\n  // 'America/Manaus',\n  // 'America/Cuiaba',\n  // 'America/Campo_Grande',\n  // 'America/Boa_Vista',\n  // 'America/Montserrat',\n  // 'America/Marigot',\n  // 'America/St_Lucia',\n  // 'America/Santo_Domingo',\n  // 'America/St_Kitts',\n  // 'America/Puerto_Rico',\n  // 'America/Port_of_Spain',\n  // 'America/Curacao',\n  // 'America/Lower_Princes',\n  // 'America/Guadeloupe',\n  // 'America/Thule',\n  // 'America/Dominica',\n  // 'America/Grenada',\n  // 'America/Martinique',\n  // 'America/Goose_Bay',\n  // 'America/Kralendijk',\n  // 'Atlantic/Bermuda',\n  // 'America/St_Barthelemy',\n  // 'America/Aruba',\n  // 'America/St_Vincent',\n  // 'America/Barbados',\n  // 'America/Blanc-Sablon',\n  // 'America/Antigua',\n  // 'America/Tortola',\n  // 'America/Moncton',\n  // 'America/Halifax',\n  // 'America/Anguilla',\n  // 'America/Glace_Bay',\n  // 'America/St_Thomas',\n  // 'America/La_Paz',\n  // 'America/Santiago',\n  // 'America/Guyana',\n  // 'America/Asuncion',\n  // 'America/Caracas',\n  // 'America/St_Johns',\n  // 'America/Argentina/Ushuaia',\n  // 'America/Argentina/Mendoza',\n  // 'America/Argentina/Rio_Gallegos',\n  // 'America/Argentina/La_Rioja',\n  // 'America/Argentina/San_Juan',\n  // 'America/Argentina/Catamarca',\n  // 'America/Argentina/Salta',\n  // 'America/Argentina/Jujuy',\n  // 'America/Argentina/Cordoba',\n  // 'America/Argentina/Buenos_Aires',\n  // 'America/Argentina/Tucuman',\n  // 'America/Belem',\n  // 'America/Santarem',\n  // 'America/Sao_Paulo',\n  // 'America/Fortaleza',\n  // 'America/Recife',\n  // 'America/Bahia',\n  // 'America/Maceio',\n  // 'America/Araguaina',\n  // 'Atlantic/Stanley',\n  // 'America/Cayenne',\n  // 'America/Nuuk',\n  // 'Antarctica/Palmer',\n  // 'America/Punta_Arenas',\n  // 'Antarctica/Rothera',\n  // 'America/Miquelon',\n  // 'America/Paramaribo',\n  // 'America/Montevideo',\n  // 'America/Argentina/San_Luis',\n  // 'America/Noronha',\n  // 'Atlantic/South_Georgia',\n  // 'Atlantic/Azores',\n  // 'Atlantic/Cape_Verde',\n  // 'America/Scoresbysund',\n  // 'UTC',\n  // 'Africa/Bamako',\n  // 'Africa/Monrovia',\n  // 'Antarctica/Troll',\n  // 'Africa/Lome',\n  // 'Africa/Freetown',\n  'Europe/London',\n  // 'Europe/Jersey',\n  // 'Atlantic/Reykjavik',\n  // 'Africa/Sao_Tome',\n  // 'Europe/Isle_of_Man',\n  // 'Africa/Nouakchott',\n  // 'Africa/Dakar',\n  // 'Africa/Abidjan',\n  // 'Africa/Bissau',\n  // 'Africa/Ouagadougou',\n  // 'Atlantic/St_Helena',\n  // 'America/Danmarkshavn',\n  // 'Africa/Banjul',\n  // 'Africa/Conakry',\n  // 'Europe/Guernsey',\n  // 'Africa/Accra',\n  // 'Atlantic/Madeira',\n  // 'Atlantic/Canary',\n  // 'Atlantic/Faroe',\n  // 'Europe/Lisbon',\n  // 'Europe/Prague',\n  // 'Europe/Paris',\n  // 'Africa/Tunis',\n  // 'Europe/Gibraltar',\n  // 'Europe/Vatican',\n  // 'Europe/Sarajevo',\n  // 'Europe/Vaduz',\n  // 'Europe/Tirane',\n  // 'Europe/Zurich',\n  // 'Europe/Luxembourg',\n  // 'Europe/Monaco',\n  // 'Europe/Podgorica',\n  // 'Europe/Malta',\n  // 'Europe/Andorra',\n  // 'Arctic/Longyearbyen',\n  // 'Europe/Skopje',\n  // 'Europe/Berlin',\n  // 'Europe/Oslo',\n  // 'Europe/Amsterdam',\n  // 'Europe/Warsaw',\n  // 'Europe/Copenhagen',\n  // 'Africa/Algiers',\n  // 'Europe/Stockholm',\n  // 'Europe/San_Marino',\n  // 'Europe/Zagreb',\n  // 'Europe/Vienna',\n  // 'Europe/Budapest',\n  // 'Europe/Belgrade',\n  // 'Europe/Brussels',\n  // 'Europe/Madrid',\n  // 'Africa/Ceuta',\n  // 'Europe/Bratislava',\n  // 'Europe/Rome',\n  // 'Europe/Busingen',\n  // 'Europe/Ljubljana',\n  // 'Europe/Dublin',\n  // 'Africa/Malabo',\n  // 'Africa/Lagos',\n  // 'Africa/Porto-Novo',\n  // 'Africa/Niamey',\n  // 'Africa/Kinshasa',\n  // 'Africa/Luanda',\n  // 'Africa/Ndjamena',\n  // 'Africa/Brazzaville',\n  // 'Africa/Douala',\n  // 'Africa/Libreville',\n  // 'Africa/Bangui',\n  // 'Africa/Casablanca',\n  // 'Africa/El_Aaiun',\n  // 'Africa/Blantyre',\n  // 'Africa/Windhoek',\n  // 'Africa/Kigali',\n  // 'Africa/Maputo',\n  // 'Africa/Khartoum',\n  // 'Africa/Harare',\n  // 'Africa/Bujumbura',\n  // 'Africa/Lusaka',\n  // 'Africa/Gaborone',\n  // 'Africa/Lubumbashi',\n  // 'Africa/Juba',\n  // 'Asia/Gaza',\n  // 'Asia/Hebron',\n  // 'Europe/Bucharest',\n  // 'Europe/Mariehamn',\n  // 'Europe/Sofia',\n  // 'Europe/Athens',\n  // 'Europe/Helsinki',\n  // 'Asia/Amman',\n  // 'Africa/Cairo',\n  // 'Asia/Damascus',\n  // 'Asia/Beirut',\n  // 'Europe/Kaliningrad',\n  // 'Europe/Vilnius',\n  // 'Europe/Kiev',\n  // 'Europe/Riga',\n  // 'Africa/Tripoli',\n  // 'Europe/Uzhgorod',\n  // 'Europe/Chisinau',\n  // 'Europe/Tallinn',\n  // 'Asia/Nicosia',\n  // 'Europe/Zaporozhye',\n  // 'Asia/Famagusta',\n  // 'Asia/Jerusalem',\n  // 'Africa/Maseru',\n  // 'Africa/Johannesburg',\n  // 'Africa/Mbabane',\n  // 'Asia/Baghdad',\n  // 'Asia/Qatar',\n  // 'Asia/Kuwait',\n  // 'Asia/Aden',\n  // 'Asia/Riyadh',\n  // 'Asia/Bahrain',\n  // 'Africa/Djibouti',\n  // 'Africa/Kampala',\n  // 'Africa/Mogadishu',\n  // 'Africa/Addis_Ababa',\n  // 'Africa/Asmara',\n  // 'Africa/Nairobi',\n  // 'Africa/Dar_es_Salaam',\n  // 'Indian/Comoro',\n  // 'Indian/Mayotte',\n  // 'Indian/Antananarivo',\n  // 'Europe/Istanbul',\n  // 'Europe/Kirov',\n  // 'Europe/Minsk',\n  // 'Europe/Volgograd',\n  // 'Europe/Simferopol',\n  // 'Europe/Moscow',\n  // 'Antarctica/Syowa',\n  // 'Asia/Tehran',\n  // 'Asia/Yerevan',\n  // 'Asia/Baku',\n  // 'Europe/Ulyanovsk',\n  // 'Europe/Saratov',\n  // 'Europe/Astrakhan',\n  // 'Asia/Tbilisi',\n  // 'Asia/Dubai',\n  // 'Asia/Muscat',\n  // 'Indian/Mauritius',\n  // 'Indian/Reunion',\n  // 'Europe/Samara',\n  // 'Indian/Mahe',\n  // 'Asia/Kabul',\n  // 'Asia/Qyzylorda',\n  // 'Indian/Kerguelen',\n  // 'Indian/Maldives',\n  // 'Antarctica/Mawson',\n  // 'Asia/Karachi',\n  // 'Asia/Dushanbe',\n  // 'Asia/Ashgabat',\n  // 'Asia/Tashkent',\n  // 'Asia/Samarkand',\n  // 'Asia/Aqtau',\n  // 'Asia/Atyrau',\n  // 'Asia/Oral',\n  // 'Asia/Aqtobe',\n  // 'Asia/Yekaterinburg',\n  // 'Asia/Colombo',\n  // 'Asia/Kolkata',\n  // 'Asia/Kathmandu',\n  // 'Asia/Dhaka',\n  // 'Asia/Thimphu',\n  // 'Asia/Almaty',\n  // 'Asia/Qostanay',\n  // 'Asia/Urumqi',\n  // 'Indian/Chagos',\n  // 'Asia/Bishkek',\n  // 'Asia/Omsk',\n  // 'Antarctica/Vostok',\n  // 'Indian/Cocos',\n  // 'Asia/Yangon',\n  // 'Indian/Christmas',\n  // 'Antarctica/Davis',\n  // 'Asia/Barnaul',\n  // 'Asia/Tomsk',\n  // 'Asia/Hovd',\n  // 'Asia/Phnom_Penh',\n  'Asia/Bangkok',\n  // 'Asia/Vientiane',\n  'Asia/Ho_Chi_Minh',\n  // 'Asia/Novokuznetsk',\n  // 'Asia/Krasnoyarsk',\n  // 'Asia/Novosibirsk',\n  // 'Asia/Jakarta',\n  // 'Asia/Pontianak',\n  // 'Australia/Perth',\n  // 'Asia/Brunei',\n  // 'Asia/Makassar',\n  // 'Asia/Shanghai',\n  // 'Asia/Macau',\n  // 'Asia/Choibalsan',\n  // 'Asia/Hong_Kong',\n  // 'Asia/Irkutsk',\n  // 'Asia/Kuala_Lumpur',\n  // 'Asia/Kuching',\n  // 'Asia/Manila',\n  'Asia/Singapore',\n  // 'Asia/Taipei',\n  // 'Asia/Ulaanbaatar',\n  // 'Australia/Eucla',\n  // 'Asia/Dili',\n  // 'Asia/Jayapura',\n  // 'Asia/Tokyo',\n  // 'Asia/Seoul',\n  // 'Pacific/Palau',\n  // 'Asia/Pyongyang',\n  // 'Asia/Yakutsk',\n  // 'Asia/Chita',\n  // 'Asia/Khandyga',\n  // 'Australia/Broken_Hill',\n  // 'Australia/Adelaide',\n  // 'Australia/Darwin',\n  // 'Australia/Hobart',\n  // 'Australia/Melbourne',\n  // 'Australia/Brisbane',\n  // 'Australia/Lindeman',\n  // 'Australia/Sydney',\n  // 'Pacific/Saipan',\n  // 'Pacific/Guam',\n  // 'Pacific/Chuuk',\n  // 'Antarctica/DumontDUrville',\n  // 'Antarctica/Macquarie',\n  // 'Pacific/Port_Moresby',\n  // 'Asia/Ust-Nera',\n  // 'Asia/Vladivostok',\n  // 'Australia/Lord_Howe',\n  // 'Antarctica/Casey',\n  // 'Asia/Srednekolymsk',\n  // 'Pacific/Bougainville',\n  // 'Pacific/Kosrae',\n  // 'Asia/Magadan',\n  // 'Pacific/Noumea',\n  // 'Pacific/Norfolk',\n  // 'Pacific/Pohnpei',\n  // 'Asia/Sakhalin',\n  // 'Pacific/Guadalcanal',\n  // 'Pacific/Efate',\n  // 'Asia/Anadyr',\n  // 'Pacific/Fiji',\n  // 'Pacific/Tarawa',\n  // 'Pacific/Kwajalein',\n  // 'Pacific/Majuro',\n  // 'Pacific/Nauru',\n  // 'Pacific/Auckland',\n  // 'Antarctica/McMurdo',\n  // 'Asia/Kamchatka',\n  // 'Pacific/Funafuti',\n  // 'Pacific/Wake',\n  // 'Pacific/Wallis',\n  // 'Pacific/Chatham',\n  // 'Pacific/Apia',\n  // 'Pacific/Enderbury',\n  // 'Pacific/Fakaofo',\n  // 'Pacific/Tongatapu',\n  // 'Pacific/Kiritimati'\n]\n\nconst useTimezoneDropdownSource = () => {\n  const source = useMemo(\n    () => timezones.map(timezone => ({key: timezone, value: timezone})),\n    []\n  )\n  return source\n}\n\nexport default useTimezoneDropdownSource\n","import {gql} from '@apollo/client'\n\nexport const COURSE_FRAGMENT = gql`\n  fragment CourseFragment on Course {\n    __typename\n    id\n    name\n    description\n    emailAddress\n    telephoneNumber {\n      number\n      dialingCode\n    }\n    timezone {\n      id\n      name\n      utcOffset\n    }\n    physicalAddress {\n      __typename\n      streetNumber\n      street\n      suburb\n      city\n      province\n      countryCode\n      postCode\n      coordinates {\n        lat\n        lon\n      }\n    }\n  }\n`\n","import {Maybe, PaginatedResultsOfCourse} from 'services/api'\nimport {gql, useQuery} from '@apollo/client'\n\nimport {COURSE_FRAGMENT} from './COURSE_FRAGMENT'\n\nconst SEARCH_COURSES = gql`\n  query searchCourses($limit: Int!, $continuationToken: String, $term: String, $sortBy: String) {\n    courses(limit: $limit, continuationToken: $continuationToken, term: $term, sortBy: $sortBy) {\n      data {\n        ...CourseFragment\n      }\n      continuationToken\n    }\n  }\n  ${COURSE_FRAGMENT}\n`\n\nconst defaultArgs = {\n  limit: 50,\n  sortBy: 'Alphabetically'\n}\n\nconst useCourseSearch = (args: {limit?: number; term?: string}) => {\n\n  const {data, networkStatus, refetch, fetchMore} = useQuery<{\n    courses: Maybe<PaginatedResultsOfCourse>\n  }>(SEARCH_COURSES, {\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      ...defaultArgs,\n      ...args\n    }\n  })\n\n  const fetchMoreIfMoreExist = () => {\n    // No continuation token indicates no more results to load\n    if (!data?.courses?.continuationToken) return\n\n    fetchMore({\n      variables: {\n        continuationToken: data?.courses?.continuationToken\n      }\n    })\n  }\n\n  return {\n    data: data?.courses?.data ?? [],\n    networkStatus,\n    refetch,\n    fetchMore: fetchMoreIfMoreExist\n  }\n}\n\nexport default useCourseSearch\n","import {Course, Maybe} from 'services/api'\nimport {NetworkStatus, gql, useQuery} from '@apollo/client'\n\nimport {COURSE_FRAGMENT} from './COURSE_FRAGMENT'\n\nconst GET_COURSE = gql`\n  query GetCourse($courseId: Uuid!) {\n    course(courseId: $courseId) {\n      ...CourseFragment\n    }\n  }\n  ${COURSE_FRAGMENT}\n`\n\nconst useGetCourse = (courseId: string) => {\n  const {data, networkStatus, refetch} = useQuery<{\n    course: Maybe<Course>\n  }>(GET_COURSE, {\n    variables: {\n      courseId\n    }\n  })\n\n  const loading = networkStatus === NetworkStatus.loading\n  return {loading, data: data?.course, networkStatus, refetch}\n}\n\nexport default useGetCourse\n","import {Course, CreateCourseInput, MutationCreateCourseArgs} from 'services/api'\nimport {gql, useMutation} from '@apollo/client'\n\nimport {COURSE_FRAGMENT} from './COURSE_FRAGMENT'\n\nconst CREATE_COURSE = gql`\n  mutation CreateCourse($input: CreateCourseInput!) {\n    createCourse(input: $input) {\n      ...CourseFragment\n    }\n  }\n  ${COURSE_FRAGMENT}\n`\n\ntype Response = {\n  createCourse: Course\n}\n\nconst useCreateCourse = (): [\n  (input: CreateCourseInput) => Promise<string>,\n  {loading: boolean}\n] => {\n  const [execute, {loading}] = useMutation<Response, MutationCreateCourseArgs>(CREATE_COURSE, {\n    update (cache, {data}) {\n      cache.modify({\n        fields: {\n          courses: (courses = []) => {\n            return {\n              ...courses,\n              data: [...courses.data, data?.createCourse]\n            }\n          }\n        }\n      })\n    }\n  })\n\n  const createCourse = async (input: CreateCourseInput) => {\n    const result = await execute({\n      variables: {\n        input\n      }\n    })\n    return result.data?.createCourse.id\n  }\n\n  return [createCourse, {loading}]\n}\n\nexport default useCreateCourse\n","import {Course, MutationUpdateCourseArgs, UpdateCourseInput} from 'services/api'\nimport {gql, useMutation} from '@apollo/client'\n\nimport {COURSE_FRAGMENT} from './COURSE_FRAGMENT'\n\nconst CREATE_COURSE = gql`\n  mutation UpdateCourse($input: UpdateCourseInput!) {\n    updateCourse(input: $input) {\n      ...CourseFragment\n    }\n  }\n  ${COURSE_FRAGMENT}\n`\nconst useUpdateCourse = (): [\n  (input: UpdateCourseInput) => Promise<string>,\n  {loading: boolean}\n] => {\n  const [execute, {loading}] = useMutation<\n    {\n      updateCourse: Course\n    },\n    MutationUpdateCourseArgs\n  >(CREATE_COURSE)\n\n  const updateCourse = async (input: UpdateCourseInput) => {\n    const result = await execute({\n      variables: {\n        input\n      }\n    })\n    return result.data?.updateCourse.id\n  }\n\n  return [updateCourse, {loading}]\n}\n\nexport default useUpdateCourse\n","import {Course, MutationRemoveCourseArgs, RemoveCourseInput} from 'services/api'\nimport {gql, useMutation} from '@apollo/client'\n\nimport {COURSE_FRAGMENT} from './COURSE_FRAGMENT'\n\nconst REMOVE_COURSE = gql`\n  mutation RemoveCourse($input: RemoveCourseInput!) {\n    removeCourse(input: $input) {\n      ...CourseFragment\n    }\n  }\n  ${COURSE_FRAGMENT}\n`\n\ntype Response = \n{\n    removeCourse: Course\n}\n\nconst useRemoveCourse = (): [\n  (input: RemoveCourseInput) => Promise<string>,\n  {loading: boolean}\n] => {\n  const [execute, {loading}] = useMutation<Response, MutationRemoveCourseArgs>(REMOVE_COURSE, {\n    update (cache, {data}) {\n      cache.modify({\n        fields: {\n          courses: (courses = [], {\n            readField\n          }) => {\n            return {\n              ...courses,\n              data: courses.data.filter((ref: any) => readField({\n                from: ref,\n                fieldName: 'id'\n              }) !== data?.removeCourse.id)\n            }\n          }\n        }\n      })\n    }\n  })\n\n  const removeCourse = async (input: RemoveCourseInput) => {\n    const result = await execute({\n      variables: {\n        input\n      }\n    })\n    return result.data?.removeCourse.id\n  }\n\n  return [removeCourse, {loading}]\n}\n\nexport default useRemoveCourse\n","const info = (message: string) => {\n  console.log(message)\n}\n\nexport default info\n","const error = (error: any) => {\n  console.error(error)\n}\n\nexport default error\n","import {AuthContextProps} from './AuthContextProps'\nimport React from 'react'\n\nexport default React.createContext<AuthContextProps>({\n  authenticating: true,\n  authenticated: false,\n  logout: () => Promise.resolve(),\n  getToken: () => Promise.resolve('')\n})\n","import React, {useCallback, useEffect, useRef, useState} from 'react'\nimport {User, getAuth, signOut} from 'firebase/auth'\nimport {error, info} from 'services/logging'\n\nimport AuthContext from './AuthContext'\nimport {AuthProviderProps} from './AuthProviderProps'\n\nconst AuthProvider = ({children}: AuthProviderProps) => {\n  const auth = getAuth()\n  const userRef = useRef<User | null>(null)\n\n  const [state, setState] = useState<{\n    authenticated: boolean\n    authenticating: boolean\n  }>({\n    authenticated: false,\n    authenticating: true\n  })\n\n  const tryLogout = async () => {\n    await signOut(auth)\n\n    setState({authenticated: true, authenticating: true})\n\n    setState({\n      authenticating: false,\n      authenticated: false\n    })\n  }\n\n  const handleLogin = useCallback(async (user: User) => {\n    info('User logged in')\n\n    userRef.current = user\n\n    setState({\n      authenticating: false,\n      authenticated: true\n    })\n  }, [])\n\n  const handleLogout = useCallback(() => {\n    info('User logged out')\n    setState({\n      authenticating: false,\n      authenticated: false\n    })\n  }, [])\n\n  useEffect(() => {\n    const subscriber = auth.onAuthStateChanged(async user => {\n      try {\n        if (user) {\n          await handleLogin(user)\n        } else {\n          handleLogout()\n        }\n      } catch (e) {\n        error(e)\n      }\n    })\n    return subscriber\n  }, [auth, handleLogin, handleLogout])\n\n  return (\n    <AuthContext.Provider\n      value={{\n        ...state,\n        logout: tryLogout,\n        getToken: async () => userRef.current?.getIdToken()\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthProvider\n","import AuthContext from './AuthContext'\nimport {useContext} from 'react'\n\nconst useAuthContext = () => {\n  return useContext(AuthContext)\n}\n\nexport default useAuthContext\n","import React, {useEffect, useState} from 'react'\nimport {fetchAndActivate, getRemoteConfig} from 'firebase/remote-config'\n\nimport {ConfigProviderProps} from './ConfigProviderProps'\n\nconst ConfigProvider = ({children}: ConfigProviderProps) => {\n  const [ready, setReady] = useState(false)\n\n  useEffect(() => {\n    const remoteConfig = getRemoteConfig()\n\n    const init = async () => {\n      await fetchAndActivate(remoteConfig)\n      setReady(true)\n    }\n\n    init()\n  }, [])\n\n  return <>{ready && children}</>\n}\n\nexport default ConfigProvider\n","import {\n  getBoolean,\n  getNumber,\n  getRemoteConfig,\n  getString,\n  getValue\n} from 'firebase/remote-config'\n\nimport {ConfigKeys} from './ConfigKeys'\n\nconst useConfig = () => {\n  const remoteConfig = getRemoteConfig()\n  return {\n    getString: (key: ConfigKeys) => getString(remoteConfig, key),\n    getNumber: (key: ConfigKeys) => getNumber(remoteConfig, key),\n    getBoolean: (key: ConfigKeys) => getBoolean(remoteConfig, key),\n    getValue: (key: ConfigKeys) => getValue(remoteConfig, key)\n  }\n}\n\nexport default useConfig\n","import { debounce } from 'lodash'\nimport { useCallback, useEffect, useState } from 'react'\nimport {useAuthContext} from 'services/auth'\nimport {useConfig} from 'services/config'\n\nconst useIsUnique = (name: string) => {\n\n    const config = useConfig()\n    const url = config.getString('ApiUrl')\n    const auth = useAuthContext()\n    const [state, setState] = useState({\n        loading: false,\n        isUnique: true\n    })\n    const [loading, setLoading] = useState(false)\n\n    const verify = useCallback(debounce(async (name) => {\n        if(!name) return\n        \n        setState({\n            loading: true,\n            isUnique: true\n        })\n\n        const token = await auth.getToken()\n        const response = await fetch(`${url}api/v1/courses/uniqueness?name=${name}`, {\n            headers: {\n            Authorization: `Bearer ${token}`\n            }\n        })\n        \n        setState({\n            loading: false,\n            isUnique: response.status === 200\n        })\n    }, 200), []);\n\n    useEffect(() => {\n        verify(name)\n    }, [name])\n\n    return state\n}\n\nexport default useIsUnique","import {Dictionary} from './Dictionary'\nimport Form from './FormDefinition'\nimport FormField from './FormField'\n\nexport default function getFormData<T>(\n  form: Form<Dictionary<FormField<any>>>\n): T {\n  return Object.keys(form[0]).reduce((data, fieldName) => {\n    const field = form[0][fieldName]\n    return {\n      ...data,\n      [fieldName]: field.converter\n        ? field.converter.toData(field.value)\n        : field.value\n    }\n  }, {}) as T\n}\n","import {FormDefinition} from '.'\n\nconst isSet = (form: FormDefinition<any>, fieldName: string) => {\n  const [state] = form\n  const field = state[fieldName]\n  return !!field.value\n}\n\nexport default isSet\n","import {FormDefinition} from '.'\n\nconst getFieldValue = <T>(form: FormDefinition<any>, fieldName: string) => {\n  const [state] = form\n  const field = state[fieldName]\n  const value = field.converter\n    ? field.converter.toData(field.value)\n    : field.value\n  return value as T\n}\n\nexport default getFieldValue\n","import FormFieldValidator from '../FormFieldValidator'\n\nconst isValid = (\n  value: any,\n  validators: FormFieldValidator<any>[] | undefined\n): boolean => {\n  if (!validators) {\n    return true\n  }\n\n  return (\n    validators.filter(validator => (validator ? !validator(value) : false))\n      .length === 0\n  )\n}\n\nexport default isValid\n","import {useCallback, useEffect, useState} from 'react'\n\nimport {Dictionary} from './Dictionary'\nimport FormDefinition from './FormDefinition'\nimport FormField from './FormField'\nimport isValid from './validation/isValid'\n\nconst createForm = <TFields extends Dictionary<FormField<any>>>(\n  fields: TFields\n): TFields => {\n  return Object.keys(fields).reduce((form, key) => {\n    const field = fields[key]\n    return {\n      ...form,\n      [key]: {\n        isValid: isValid(field.value, field.validators),\n        value: field.converter\n          ? field.converter.toField(field.value)\n          : field.value,\n        touched: false,\n        converter: field.converter\n      }\n    }\n  }, {}) as TFields\n}\n\nconst createField = (field: FormField<any>, value: any, touched: boolean) => {\n  return {\n    ...field,\n    isValid: isValid(value, field.validators),\n    value: value,\n    touched: touched\n  }\n}\n\nexport default function useForm<TFields extends Dictionary<FormField<any>>>(\n  fields: TFields,\n  onChange?: (form: FormDefinition<TFields>) => void\n): FormDefinition<TFields> {\n  const [state, setState] = useState<TFields>(createForm(fields))\n\n  const setValue = useCallback(\n    (key: string, value: any) => {\n      const field = fields[key]\n      setState({\n        ...state,\n        [key]: createField(field, value, true)\n      })\n    },\n    [fields, state]\n  )\n\n  const touch = useCallback(\n    (key: string | string[]) => {\n      if (Array.isArray(key)) {\n        setState({\n          ...state,\n          ...key.reduce((aggregate, fieldName) => {\n            return {\n              ...aggregate,\n              [fieldName]: {\n                ...state[fieldName],\n                touched: true\n              }\n            }\n          }, {})\n        })\n      } else {\n        setState({\n          ...state,\n          [key]: {\n            ...state[key],\n            touched: true\n          }\n        })\n      }\n    },\n    [state]\n  )\n\n  const setValues = useCallback(\n    (values: {[key: string]: any}, touched = false) => {\n      setState(\n        Object.assign({}, state, {\n          ...Object.entries(values).reduce((previousValue, [key, value]) => {\n            const field = fields[key]\n            return {\n              ...previousValue,\n              [key]: createField(field, value, touched)\n            }\n          }, {})\n        })\n      )\n    },\n    [fields, state]\n  )\n\n  const clear = useCallback(() => {\n    setState(\n      Object.assign({}, state, {\n        ...Object.keys(state).reduce((previousValue, key) => {\n          const field = fields[key]\n          return {\n            ...previousValue,\n            [key]: createField(field, field.defaultValue, false)\n          }\n        }, {})\n      })\n    )\n  }, [fields, state])\n\n  useEffect(() => {\n    onChange && onChange([state, {setValue, touch, setValues, clear}])\n  }, [state, setValue, touch, setValues, clear, onChange])\n\n  useEffect(() => {\n    setState(() => createForm(fields))\n  }, [fields])\n\n  return [state, {setValue, touch, setValues, clear}]\n}\n","import { gql } from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `DateTime` scalar represents an ISO-8601 compliant date time type. */\n  DateTime: any;\n  /** The built-in `Decimal` scalar type. */\n  Decimal: any;\n  /** The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1. */\n  Long: any;\n  TimeSpan: any;\n  Uuid: any;\n};\n\nexport type AcceptGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type AgendaInput = {\n  communityIds?: Maybe<Array<Scalars['Uuid']>>;\n  courseIds?: Maybe<Array<Scalars['Uuid']>>;\n  month: Scalars['Int'];\n  year: Scalars['Int'];\n};\n\nexport type CancelGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type CancelGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type CancelGameTeeTimeInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type ChangeGameHostInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type Chat = {\n  __typename?: 'Chat';\n  token: Scalars['String'];\n};\n\nexport enum CommunicationMethod {\n  Email = 'EMAIL',\n  Pushnotifications = 'PUSHNOTIFICATIONS'\n}\n\nexport type Community = {\n  __typename?: 'Community';\n  admins?: Maybe<Array<Maybe<Player>>>;\n  canCreateGames: Scalars['Boolean'];\n  id: Scalars['Uuid'];\n  initials?: Maybe<Scalars['String']>;\n  isAdmin: Scalars['Boolean'];\n  isAutoAssigned: Scalars['Boolean'];\n  isMember: Scalars['Boolean'];\n  memberCount: Scalars['Long'];\n  members?: Maybe<PaginatedResultsOfCommunityMember>;\n  name: Scalars['String'];\n  postCount: Scalars['Int'];\n  posts?: Maybe<PaginatedResultsOfPostOfCommunity>;\n  profileImageRef?: Maybe<ImageRef>;\n};\n\n\nexport type CommunityMembersArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type CommunityPostsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type CommunityMember = {\n  __typename?: 'CommunityMember';\n  id: Scalars['Uuid'];\n  isAdmin: Scalars['Boolean'];\n  joinedOn: Scalars['DateTime'];\n  player?: Maybe<Player>;\n};\n\nexport type CommunityPostCommentReactionFeedEntry = IFeedEntry & {\n  __typename?: 'CommunityPostCommentReactionFeedEntry';\n  comment?: Maybe<PostCommentOfCommunity>;\n  community?: Maybe<Community>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type CommunityPostFeedEntry = IFeedEntry & {\n  __typename?: 'CommunityPostFeedEntry';\n  community?: Maybe<Community>;\n  id: Scalars['Uuid'];\n  post?: Maybe<PostOfCommunity>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type CommunityPostReactionFeedEntry = IFeedEntry & {\n  __typename?: 'CommunityPostReactionFeedEntry';\n  community?: Maybe<Community>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  post?: Maybe<PostOfCommunity>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type ConfirmGamePlayerInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type ConfirmGameTeeTimeInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type Coordinates = {\n  __typename?: 'Coordinates';\n  lat: Scalars['Decimal'];\n  lon: Scalars['Decimal'];\n};\n\nexport type CoordinatesInput = {\n  lat: Scalars['Decimal'];\n  lon: Scalars['Decimal'];\n};\n\nexport type Course = {\n  __typename?: 'Course';\n  description: Scalars['String'];\n  emailAddress?: Maybe<Scalars['String']>;\n  id: Scalars['Uuid'];\n  name: Scalars['String'];\n  physicalAddress: PhysicalAddress;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  telephoneNumber?: Maybe<TelephoneNumber>;\n  timezone?: Maybe<Timezone>;\n  website?: Maybe<Scalars['String']>;\n};\n\nexport type CreateCommunityCommentReactionInput = {\n  commentId: Scalars['Uuid'];\n  communityId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreateCommunityInput = {\n  name: Scalars['String'];\n};\n\nexport type CreateCommunityPostCommentInput = {\n  body?: Maybe<Scalars['String']>;\n  communityId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n  postId: Scalars['Uuid'];\n};\n\nexport type CreateCommunityPostCommentReplyInput = {\n  body?: Maybe<Scalars['String']>;\n  commentId: Scalars['Uuid'];\n  communityId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n};\n\nexport type CreateCommunityPostInput = {\n  body?: Maybe<Scalars['String']>;\n  communityId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n};\n\nexport type CreateCommunityPostReactionInput = {\n  communityId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreateCourseInput = {\n  description: Scalars['String'];\n  emailAddress?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  physicalAddress: PhysicalAddressInput;\n  telephoneNumber?: Maybe<TelephoneNumberInput>;\n  timezoneId: Scalars['String'];\n  website?: Maybe<Scalars['String']>;\n};\n\nexport type CreateCourseReactionInput = {\n  courseId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreateGameInput = {\n  automaticallyConfirmTeeTime?: Maybe<Scalars['Boolean']>;\n  communityIds: Array<Scalars['Uuid']>;\n  courseId: Scalars['Uuid'];\n  gameType?: Maybe<GameType>;\n  holes: Holes;\n  isHostPlaying?: Maybe<Scalars['Boolean']>;\n  numberOfPlayers: Scalars['Int'];\n  teeTime: DateTimeInfoInput;\n};\n\nexport type CreateGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type CreateGameReactionInput = {\n  gameId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreatePlayerCommentReactionInput = {\n  commentId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreatePlayerPostCommentInput = {\n  body?: Maybe<Scalars['String']>;\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n  playerId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n};\n\nexport type CreatePlayerPostCommentReplyInput = {\n  body?: Maybe<Scalars['String']>;\n  commentId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n  playerId: Scalars['Uuid'];\n};\n\nexport type CreatePlayerPostInput = {\n  body?: Maybe<Scalars['String']>;\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n};\n\nexport type CreatePlayerPostReactionInput = {\n  playerId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type DateRangeInput = {\n  from?: Maybe<Scalars['DateTime']>;\n  to?: Maybe<Scalars['DateTime']>;\n};\n\nexport type DateTimeInfo = {\n  __typename?: 'DateTimeInfo';\n  day: Scalars['Int'];\n  hour: Scalars['Int'];\n  minute: Scalars['Int'];\n  month: Scalars['Int'];\n  toDateTimeOffset: Scalars['DateTime'];\n  year: Scalars['Int'];\n};\n\n\nexport type DateTimeInfoToDateTimeOffsetArgs = {\n  timeZoneId?: Maybe<TimeZoneIdInput>;\n};\n\nexport type DateTimeInfoInput = {\n  day: Scalars['Int'];\n  hour: Scalars['Int'];\n  minute: Scalars['Int'];\n  month: Scalars['Int'];\n  year: Scalars['Int'];\n};\n\nexport type DeclineGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type DeclineGamePlayerInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type DeleteCommunityPostInput = {\n  communityId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n};\n\nexport type DeletePlayerPostInput = {\n  postId: Scalars['Uuid'];\n};\n\nexport type DiscardPlayerGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type FollowPlayerInput = {\n  playerId: Scalars['Uuid'];\n};\n\nexport type Game = {\n  __typename?: 'Game';\n  communities?: Maybe<Array<Maybe<Community>>>;\n  course?: Maybe<Course>;\n  gameType?: Maybe<GameType>;\n  holes: Holes;\n  host?: Maybe<Player>;\n  id: Scalars['Uuid'];\n  invitations?: Maybe<Array<Maybe<GameInvitation>>>;\n  isCancelled: Scalars['Boolean'];\n  isHost: Scalars['Boolean'];\n  isPlaying: Scalars['Boolean'];\n  myStatus?: Maybe<GamePlayerStatus>;\n  numberOfPlayers: Scalars['Int'];\n  playerCount: Scalars['Int'];\n  players?: Maybe<Array<Maybe<GamePlayer>>>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  teeTime?: Maybe<TeeTime>;\n};\n\nexport type GameFeedEntry = IFeedEntry & {\n  __typename?: 'GameFeedEntry';\n  game?: Maybe<Game>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type GameInvitation = {\n  __typename?: 'GameInvitation';\n  createdOn: Scalars['DateTime'];\n  player?: Maybe<Player>;\n};\n\nexport type GamePlayer = {\n  __typename?: 'GamePlayer';\n  id: Scalars['Uuid'];\n  isHost: Scalars['Boolean'];\n  joinedOn: Scalars['DateTime'];\n  player?: Maybe<Player>;\n  status: GamePlayerStatus;\n};\n\nexport type GamePlayerSetup = {\n  __typename?: 'GamePlayerSetup';\n  displayText?: Maybe<Scalars['String']>;\n  value: Scalars['Int'];\n};\n\nexport enum GamePlayerStatus {\n  Confirmed = 'CONFIRMED',\n  Declined = 'DECLINED',\n  Pendingconfirmation = 'PENDINGCONFIRMATION',\n  Standby = 'STANDBY'\n}\n\nexport type GameSetup = {\n  __typename?: 'GameSetup';\n  players?: Maybe<Array<Maybe<GamePlayerSetup>>>;\n};\n\nexport enum GameType {\n  Competitivesingle = 'COMPETITIVESINGLE',\n  Competitiveteam = 'COMPETITIVETEAM',\n  Moneygame = 'MONEYGAME',\n  Social = 'SOCIAL',\n  Tournament = 'TOURNAMENT'\n}\n\nexport type GamesSearchInput = {\n  communityIds?: Maybe<Array<Scalars['Uuid']>>;\n  coordinates?: Maybe<CoordinatesInput>;\n  courseIds?: Maybe<Array<Scalars['Uuid']>>;\n  isAscending?: Maybe<Scalars['Boolean']>;\n  teeTime?: Maybe<DateRangeInput>;\n  term?: Maybe<Scalars['String']>;\n};\n\nexport enum Holes {\n  Eighteenholes = 'EIGHTEENHOLES',\n  Nineholes = 'NINEHOLES'\n}\n\nexport type IFeedEntry = {\n  id: Scalars['Uuid'];\n  timestamp: Scalars['DateTime'];\n};\n\nexport type ImageRef = {\n  __typename?: 'ImageRef';\n  height: Scalars['Int'];\n  ref?: Maybe<Scalars['String']>;\n  width: Scalars['Int'];\n};\n\nexport type ImageRefInput = {\n  filename?: Maybe<Scalars['String']>;\n  height: Scalars['Int'];\n  width: Scalars['Int'];\n};\n\nexport type JoinCommunityInput = {\n  communityId: Scalars['Uuid'];\n};\n\nexport type JoinGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type LeaveCommunityInput = {\n  communityId: Scalars['Uuid'];\n};\n\nexport type LeaveGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  acceptGameInvitation?: Maybe<Player>;\n  cancelGame?: Maybe<Game>;\n  cancelGameInvitation?: Maybe<Game>;\n  cancelGameTeeTime?: Maybe<Game>;\n  changeGameHost?: Maybe<Game>;\n  confirmGamePlayer?: Maybe<Game>;\n  confirmGameTeeTime?: Maybe<Game>;\n  createCommunity?: Maybe<Community>;\n  createCommunityCommentReaction?: Maybe<PostCommentOfCommunity>;\n  createCommunityPost?: Maybe<PostOfCommunity>;\n  createCommunityPostComment?: Maybe<PostOfCommunity>;\n  createCommunityPostCommentReply?: Maybe<PostCommentOfCommunity>;\n  createCommunityPostReaction?: Maybe<PostOfCommunity>;\n  createCourse?: Maybe<Course>;\n  createCourseReaction?: Maybe<Course>;\n  createGame?: Maybe<Game>;\n  createGameInvitation?: Maybe<Game>;\n  createGameReaction?: Maybe<Game>;\n  createPlayerCommentReaction?: Maybe<PostCommentOfPlayer>;\n  createPlayerPost?: Maybe<PostOfPlayer>;\n  createPlayerPostComment?: Maybe<PostOfPlayer>;\n  createPlayerPostCommentReply?: Maybe<PostCommentOfPlayer>;\n  createPlayerPostReaction?: Maybe<PostOfPlayer>;\n  declineGameInvitation?: Maybe<Player>;\n  declineGamePlayer?: Maybe<Game>;\n  deleteCommunityPost?: Maybe<PostOfCommunity>;\n  deletePlayerPost?: Maybe<PostOfPlayer>;\n  discardPlayerGame?: Maybe<Player>;\n  followPlayer?: Maybe<Player>;\n  joinCommunity?: Maybe<Player>;\n  joinGame?: Maybe<Game>;\n  leaveCommunity?: Maybe<Player>;\n  leaveGame?: Maybe<Game>;\n  registerPlayer?: Maybe<Player>;\n  registerPlayerFcmToken?: Maybe<Player>;\n  removeCourse?: Maybe<Course>;\n  removeCourseReaction?: Maybe<Course>;\n  removeGameReaction?: Maybe<Game>;\n  reportAbuse?: Maybe<Player>;\n  setCommunityAdmins?: Maybe<Community>;\n  setCommunityProfileImageRef?: Maybe<Community>;\n  setNotificationPreferences?: Maybe<Player>;\n  setPlayerProfileImageRef?: Maybe<Player>;\n  unfollowPlayer?: Maybe<Player>;\n  updateCommunity?: Maybe<Community>;\n  updateCommunityPost?: Maybe<PostOfCommunity>;\n  updateCourse?: Maybe<Course>;\n  updateGame?: Maybe<Game>;\n  updatePlayer?: Maybe<Player>;\n  updatePlayerCoursePreferences?: Maybe<Player>;\n  updatePlayerGamePreferences?: Maybe<Player>;\n  updatePlayerHandicap?: Maybe<Player>;\n  updatePlayerPost?: Maybe<PostOfPlayer>;\n  updatePlayerPreferences?: Maybe<Player>;\n};\n\n\nexport type MutationAcceptGameInvitationArgs = {\n  input?: Maybe<AcceptGameInvitationInput>;\n};\n\n\nexport type MutationCancelGameArgs = {\n  input?: Maybe<CancelGameInput>;\n};\n\n\nexport type MutationCancelGameInvitationArgs = {\n  input?: Maybe<CancelGameInvitationInput>;\n};\n\n\nexport type MutationCancelGameTeeTimeArgs = {\n  input?: Maybe<CancelGameTeeTimeInput>;\n};\n\n\nexport type MutationChangeGameHostArgs = {\n  input?: Maybe<ChangeGameHostInput>;\n};\n\n\nexport type MutationConfirmGamePlayerArgs = {\n  input?: Maybe<ConfirmGamePlayerInput>;\n};\n\n\nexport type MutationConfirmGameTeeTimeArgs = {\n  input?: Maybe<ConfirmGameTeeTimeInput>;\n};\n\n\nexport type MutationCreateCommunityArgs = {\n  input?: Maybe<CreateCommunityInput>;\n};\n\n\nexport type MutationCreateCommunityCommentReactionArgs = {\n  input?: Maybe<CreateCommunityCommentReactionInput>;\n};\n\n\nexport type MutationCreateCommunityPostArgs = {\n  input?: Maybe<CreateCommunityPostInput>;\n};\n\n\nexport type MutationCreateCommunityPostCommentArgs = {\n  input?: Maybe<CreateCommunityPostCommentInput>;\n};\n\n\nexport type MutationCreateCommunityPostCommentReplyArgs = {\n  input?: Maybe<CreateCommunityPostCommentReplyInput>;\n};\n\n\nexport type MutationCreateCommunityPostReactionArgs = {\n  input?: Maybe<CreateCommunityPostReactionInput>;\n};\n\n\nexport type MutationCreateCourseArgs = {\n  input?: Maybe<CreateCourseInput>;\n};\n\n\nexport type MutationCreateCourseReactionArgs = {\n  input?: Maybe<CreateCourseReactionInput>;\n};\n\n\nexport type MutationCreateGameArgs = {\n  input?: Maybe<CreateGameInput>;\n};\n\n\nexport type MutationCreateGameInvitationArgs = {\n  input?: Maybe<CreateGameInvitationInput>;\n};\n\n\nexport type MutationCreateGameReactionArgs = {\n  input?: Maybe<CreateGameReactionInput>;\n};\n\n\nexport type MutationCreatePlayerCommentReactionArgs = {\n  input?: Maybe<CreatePlayerCommentReactionInput>;\n};\n\n\nexport type MutationCreatePlayerPostArgs = {\n  input?: Maybe<CreatePlayerPostInput>;\n};\n\n\nexport type MutationCreatePlayerPostCommentArgs = {\n  input?: Maybe<CreatePlayerPostCommentInput>;\n};\n\n\nexport type MutationCreatePlayerPostCommentReplyArgs = {\n  input?: Maybe<CreatePlayerPostCommentReplyInput>;\n};\n\n\nexport type MutationCreatePlayerPostReactionArgs = {\n  input?: Maybe<CreatePlayerPostReactionInput>;\n};\n\n\nexport type MutationDeclineGameInvitationArgs = {\n  input?: Maybe<DeclineGameInvitationInput>;\n};\n\n\nexport type MutationDeclineGamePlayerArgs = {\n  input?: Maybe<DeclineGamePlayerInput>;\n};\n\n\nexport type MutationDeleteCommunityPostArgs = {\n  input?: Maybe<DeleteCommunityPostInput>;\n};\n\n\nexport type MutationDeletePlayerPostArgs = {\n  input?: Maybe<DeletePlayerPostInput>;\n};\n\n\nexport type MutationDiscardPlayerGameArgs = {\n  input?: Maybe<DiscardPlayerGameInput>;\n};\n\n\nexport type MutationFollowPlayerArgs = {\n  input?: Maybe<FollowPlayerInput>;\n};\n\n\nexport type MutationJoinCommunityArgs = {\n  input?: Maybe<JoinCommunityInput>;\n};\n\n\nexport type MutationJoinGameArgs = {\n  input?: Maybe<JoinGameInput>;\n};\n\n\nexport type MutationLeaveCommunityArgs = {\n  input?: Maybe<LeaveCommunityInput>;\n};\n\n\nexport type MutationLeaveGameArgs = {\n  input?: Maybe<LeaveGameInput>;\n};\n\n\nexport type MutationRegisterPlayerArgs = {\n  input?: Maybe<RegisterPlayerInput>;\n};\n\n\nexport type MutationRegisterPlayerFcmTokenArgs = {\n  input?: Maybe<RegisterPlayerFcmTokenInput>;\n};\n\n\nexport type MutationRemoveCourseArgs = {\n  input?: Maybe<RemoveCourseInput>;\n};\n\n\nexport type MutationRemoveCourseReactionArgs = {\n  input?: Maybe<RemoveReactionInput>;\n};\n\n\nexport type MutationRemoveGameReactionArgs = {\n  input?: Maybe<RemoveReactionInput>;\n};\n\n\nexport type MutationReportAbuseArgs = {\n  input?: Maybe<ReportAbuseInput>;\n};\n\n\nexport type MutationSetCommunityAdminsArgs = {\n  input?: Maybe<SetCommunityAdminsInput>;\n};\n\n\nexport type MutationSetCommunityProfileImageRefArgs = {\n  input?: Maybe<SetCommunityProfileImageRefInput>;\n};\n\n\nexport type MutationSetNotificationPreferencesArgs = {\n  input?: Maybe<SetNotificationPreferencesInput>;\n};\n\n\nexport type MutationSetPlayerProfileImageRefArgs = {\n  input?: Maybe<ImageRefInput>;\n};\n\n\nexport type MutationUnfollowPlayerArgs = {\n  input?: Maybe<UnfollowPlayerInput>;\n};\n\n\nexport type MutationUpdateCommunityArgs = {\n  input?: Maybe<UpdateCommunityInput>;\n};\n\n\nexport type MutationUpdateCommunityPostArgs = {\n  input?: Maybe<UpdateCommunityPostInput>;\n};\n\n\nexport type MutationUpdateCourseArgs = {\n  input?: Maybe<UpdateCourseInput>;\n};\n\n\nexport type MutationUpdateGameArgs = {\n  input?: Maybe<UpdateGameInput>;\n};\n\n\nexport type MutationUpdatePlayerArgs = {\n  input?: Maybe<UpdatePlayerInput>;\n};\n\n\nexport type MutationUpdatePlayerCoursePreferencesArgs = {\n  input?: Maybe<UpdatePlayerCoursePreferencesInput>;\n};\n\n\nexport type MutationUpdatePlayerGamePreferencesArgs = {\n  input?: Maybe<UpdatePlayerGamePreferencesInput>;\n};\n\n\nexport type MutationUpdatePlayerHandicapArgs = {\n  input?: Maybe<UpdatePlayerHandicapInput>;\n};\n\n\nexport type MutationUpdatePlayerPostArgs = {\n  input?: Maybe<UpdatePlayerPostInput>;\n};\n\n\nexport type MutationUpdatePlayerPreferencesArgs = {\n  input?: Maybe<UpdatePlayerPreferencesInput>;\n};\n\nexport type NotificationPreference = {\n  __typename?: 'NotificationPreference';\n  communicationMethods: Array<CommunicationMethod>;\n  eventType: Scalars['String'];\n};\n\nexport type NotificationPreferenceInput = {\n  communicationMethods: Array<CommunicationMethod>;\n  eventType: Scalars['String'];\n};\n\nexport type PaginatedResultsOfCommunity = {\n  __typename?: 'PaginatedResultsOfCommunity';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Community>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfCommunityMember = {\n  __typename?: 'PaginatedResultsOfCommunityMember';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<CommunityMember>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfCourse = {\n  __typename?: 'PaginatedResultsOfCourse';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Course>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfGame = {\n  __typename?: 'PaginatedResultsOfGame';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Game>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfIFeedEntry = {\n  __typename?: 'PaginatedResultsOfIFeedEntry';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<IFeedEntry>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPlayer = {\n  __typename?: 'PaginatedResultsOfPlayer';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Player>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostCommentOfCommunity = {\n  __typename?: 'PaginatedResultsOfPostCommentOfCommunity';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostCommentOfCommunity>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostCommentOfPlayer = {\n  __typename?: 'PaginatedResultsOfPostCommentOfPlayer';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostCommentOfPlayer>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostOfCommunity = {\n  __typename?: 'PaginatedResultsOfPostOfCommunity';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostOfCommunity>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostOfPlayer = {\n  __typename?: 'PaginatedResultsOfPostOfPlayer';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostOfPlayer>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfReactionDetail = {\n  __typename?: 'PaginatedResultsOfReactionDetail';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<ReactionDetail>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport enum Permission {\n  Createcommunity = 'CREATECOMMUNITY',\n  Creategame = 'CREATEGAME',\n  Createpost = 'CREATEPOST',\n  Createpostcomment = 'CREATEPOSTCOMMENT',\n  Manageautoassignedcommunities = 'MANAGEAUTOASSIGNEDCOMMUNITIES',\n  Upsertcourse = 'UPSERTCOURSE'\n}\n\nexport type PhysicalAddress = {\n  __typename?: 'PhysicalAddress';\n  city: Scalars['String'];\n  coordinates: Coordinates;\n  countryCode: Scalars['String'];\n  postCode: Scalars['String'];\n  province: Scalars['String'];\n  street?: Maybe<Scalars['String']>;\n  streetNumber?: Maybe<Scalars['String']>;\n  suburb: Scalars['String'];\n};\n\nexport type PhysicalAddressInput = {\n  city: Scalars['String'];\n  coordinates: CoordinatesInput;\n  countryCode: Scalars['String'];\n  postCode: Scalars['String'];\n  province: Scalars['String'];\n  street?: Maybe<Scalars['String']>;\n  streetNumber?: Maybe<Scalars['String']>;\n  suburb: Scalars['String'];\n};\n\nexport type Player = {\n  __typename?: 'Player';\n  communities?: Maybe<Array<Maybe<Community>>>;\n  countryCode?: Maybe<Scalars['String']>;\n  emailAddress?: Maybe<Scalars['String']>;\n  followers?: Maybe<PaginatedResultsOfPlayer>;\n  followersCount: Scalars['Int'];\n  following?: Maybe<PaginatedResultsOfPlayer>;\n  followingCount: Scalars['Int'];\n  gameInvitations?: Maybe<Array<Maybe<PlayerGameInvitation>>>;\n  games?: Maybe<PaginatedResultsOfGame>;\n  handicap?: Maybe<Scalars['Int']>;\n  id: Scalars['Uuid'];\n  initials?: Maybe<Scalars['String']>;\n  isFollower: Scalars['Boolean'];\n  isFollowing: Scalars['Boolean'];\n  isRegistered: Scalars['Boolean'];\n  isSelf: Scalars['Boolean'];\n  name?: Maybe<Scalars['String']>;\n  notificationPreferences?: Maybe<Array<Maybe<NotificationPreference>>>;\n  permissions?: Maybe<Array<Permission>>;\n  playerTypes: Array<PlayerType>;\n  postCount: Scalars['Int'];\n  posts?: Maybe<PaginatedResultsOfPostOfPlayer>;\n  preferredCourses?: Maybe<Array<Maybe<Course>>>;\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n  profileImageRef?: Maybe<ImageRef>;\n};\n\n\nexport type PlayerFollowersArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PlayerFollowingArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PlayerGamesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  input?: Maybe<GamesSearchInput>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PlayerPostsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PlayerGameInvitation = {\n  __typename?: 'PlayerGameInvitation';\n  createdBy?: Maybe<Player>;\n  createdOn: Scalars['DateTime'];\n  game?: Maybe<Game>;\n};\n\nexport type PlayerPostCommentReactionFeedEntry = IFeedEntry & {\n  __typename?: 'PlayerPostCommentReactionFeedEntry';\n  comment?: Maybe<PostCommentOfPlayer>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type PlayerPostFeedEntry = IFeedEntry & {\n  __typename?: 'PlayerPostFeedEntry';\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  post?: Maybe<PostOfPlayer>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type PlayerPostReactionFeedEntry = IFeedEntry & {\n  __typename?: 'PlayerPostReactionFeedEntry';\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  post?: Maybe<PostOfPlayer>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport enum PlayerType {\n  Beginner = 'BEGINNER',\n  Chill = 'CHILL',\n  Competitive = 'COMPETITIVE',\n  Matchplay = 'MATCHPLAY',\n  Relaxed = 'RELAXED',\n  Social = 'SOCIAL'\n}\n\nexport type PlayersSearchInput = {\n  term?: Maybe<Scalars['String']>;\n};\n\nexport type PostCommentOfCommunity = {\n  __typename?: 'PostCommentOfCommunity';\n  author?: Maybe<Player>;\n  body?: Maybe<Scalars['String']>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  replies?: Maybe<PaginatedResultsOfPostCommentOfCommunity>;\n  replyCount: Scalars['Int'];\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostCommentOfCommunityReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostCommentOfCommunityRepliesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PostCommentOfPlayer = {\n  __typename?: 'PostCommentOfPlayer';\n  author?: Maybe<Player>;\n  body?: Maybe<Scalars['String']>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  replies?: Maybe<PaginatedResultsOfPostCommentOfPlayer>;\n  replyCount: Scalars['Int'];\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostCommentOfPlayerReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostCommentOfPlayerRepliesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PostOfCommunity = {\n  __typename?: 'PostOfCommunity';\n  author?: Maybe<Community>;\n  body?: Maybe<Scalars['String']>;\n  commentCount: Scalars['Int'];\n  comments?: Maybe<PaginatedResultsOfPostCommentOfCommunity>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostOfCommunityCommentsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostOfCommunityReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PostOfPlayer = {\n  __typename?: 'PostOfPlayer';\n  author?: Maybe<Player>;\n  body?: Maybe<Scalars['String']>;\n  commentCount: Scalars['Int'];\n  comments?: Maybe<PaginatedResultsOfPostCommentOfPlayer>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostOfPlayerCommentsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostOfPlayerReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  agenda?: Maybe<Array<Maybe<Game>>>;\n  chat?: Maybe<Chat>;\n  communities?: Maybe<PaginatedResultsOfCommunity>;\n  community?: Maybe<Community>;\n  communityPost?: Maybe<PostOfCommunity>;\n  communityPostComment?: Maybe<PostCommentOfCommunity>;\n  course?: Maybe<Course>;\n  courses?: Maybe<PaginatedResultsOfCourse>;\n  feed?: Maybe<PaginatedResultsOfIFeedEntry>;\n  game?: Maybe<Game>;\n  gameSetup?: Maybe<GameSetup>;\n  games?: Maybe<PaginatedResultsOfGame>;\n  player?: Maybe<Player>;\n  playerPost?: Maybe<PostOfPlayer>;\n  playerPostComment?: Maybe<PostCommentOfPlayer>;\n  players?: Maybe<PaginatedResultsOfPlayer>;\n};\n\n\nexport type QueryAgendaArgs = {\n  input?: Maybe<AgendaInput>;\n};\n\n\nexport type QueryChatArgs = {\n  platform?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCommunitiesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n  term?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCommunityArgs = {\n  communityId: Scalars['Uuid'];\n};\n\n\nexport type QueryCommunityPostArgs = {\n  communityId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n};\n\n\nexport type QueryCommunityPostCommentArgs = {\n  commentId: Scalars['Uuid'];\n  communityId: Scalars['Uuid'];\n};\n\n\nexport type QueryCourseArgs = {\n  courseId: Scalars['Uuid'];\n};\n\n\nexport type QueryCoursesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  coordinates?: Maybe<CoordinatesInput>;\n  limit?: Scalars['Int'];\n  sortBy?: Maybe<Scalars['String']>;\n  term?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeedArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type QueryGameArgs = {\n  gameId: Scalars['Uuid'];\n};\n\n\nexport type QueryGamesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  input?: Maybe<GamesSearchInput>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type QueryPlayerArgs = {\n  id?: Maybe<Scalars['Uuid']>;\n};\n\n\nexport type QueryPlayerPostArgs = {\n  playerId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n};\n\n\nexport type QueryPlayerPostCommentArgs = {\n  commentId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\n\nexport type QueryPlayersArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  input?: Maybe<PlayersSearchInput>;\n  limit?: Scalars['Int'];\n};\n\nexport type Reaction = {\n  __typename?: 'Reaction';\n  count: Scalars['Int'];\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionType: ReactionType;\n};\n\nexport type ReactionDetail = {\n  __typename?: 'ReactionDetail';\n  id?: Maybe<Scalars['String']>;\n  player?: Maybe<Player>;\n  reactionType: ReactionType;\n  timestamp: Scalars['DateTime'];\n};\n\nexport enum ReactionType {\n  Angry = 'ANGRY',\n  Happy = 'HAPPY',\n  Like = 'LIKE',\n  Love = 'LOVE',\n  Sad = 'SAD',\n  Surprised = 'SURPRISED'\n}\n\nexport type RegisterPlayerFcmTokenInput = {\n  token: Scalars['String'];\n};\n\nexport type RegisterPlayerInput = {\n  communityIds?: Maybe<Array<Scalars['Uuid']>>;\n  countryCode?: Maybe<Scalars['String']>;\n  emailAddress?: Maybe<Scalars['String']>;\n  handicap?: Maybe<Scalars['Int']>;\n  name: Scalars['String'];\n  playerTypes: Array<PlayerType>;\n  preferredCourseIds: Array<Scalars['Uuid']>;\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n};\n\nexport type RemoveCourseInput = {\n  courseId: Scalars['Uuid'];\n};\n\nexport type RemoveReactionInput = {\n  id: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type ReportAbuseInput = {\n  description: Scalars['String'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type SetCommunityAdminsInput = {\n  communityId: Scalars['Uuid'];\n  playerIds: Array<Scalars['Uuid']>;\n};\n\nexport type SetCommunityProfileImageRefInput = {\n  communityId: Scalars['Uuid'];\n  filename?: Maybe<Scalars['String']>;\n  height: Scalars['Int'];\n  width: Scalars['Int'];\n};\n\nexport type SetNotificationPreferencesInput = {\n  options: Array<NotificationPreferenceInput>;\n};\n\nexport type TeeTime = {\n  __typename?: 'TeeTime';\n  dateAndTime: Scalars['DateTime'];\n  dateTimeInfo: DateTimeInfo;\n  isConfirmed: Scalars['Boolean'];\n};\n\nexport type TelephoneNumber = {\n  __typename?: 'TelephoneNumber';\n  dialingCode: Scalars['String'];\n  number: Scalars['String'];\n};\n\nexport type TelephoneNumberInput = {\n  dialingCode: Scalars['String'];\n  number: Scalars['String'];\n};\n\nexport type TimeZoneIdInput = {\n  value?: Maybe<Scalars['String']>;\n};\n\nexport type Timezone = {\n  __typename?: 'Timezone';\n  id?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  utcOffset: Scalars['TimeSpan'];\n  utcOffsetInMinutes: Scalars['Float'];\n};\n\nexport type UnfollowPlayerInput = {\n  playerId: Scalars['Uuid'];\n};\n\nexport type UpdateCommunityInput = {\n  communityId: Scalars['Uuid'];\n  name: Scalars['String'];\n};\n\nexport type UpdateCommunityPostInput = {\n  body?: Maybe<Scalars['String']>;\n  communityId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n  postId: Scalars['Uuid'];\n};\n\nexport type UpdateCourseInput = {\n  courseId: Scalars['Uuid'];\n  description: Scalars['String'];\n  emailAddress?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  physicalAddress: PhysicalAddressInput;\n  telephoneNumber?: Maybe<TelephoneNumberInput>;\n  timezoneId: Scalars['String'];\n  website?: Maybe<Scalars['String']>;\n};\n\nexport type UpdateGameInput = {\n  communityIds: Array<Scalars['Uuid']>;\n  courseId: Scalars['Uuid'];\n  gameId: Scalars['Uuid'];\n  gameType?: Maybe<GameType>;\n  holes: Holes;\n  numberOfPlayers: Scalars['Int'];\n  teeTime: DateTimeInfoInput;\n};\n\nexport type UpdatePlayerCoursePreferencesInput = {\n  preferredCourseIds: Array<Scalars['Uuid']>;\n};\n\nexport type UpdatePlayerGamePreferencesInput = {\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n};\n\nexport type UpdatePlayerHandicapInput = {\n  handicap: Scalars['Int'];\n};\n\nexport type UpdatePlayerInput = {\n  countryCode: Scalars['String'];\n  emailAddress?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  playerTypes: Array<PlayerType>;\n  preferredCourseIds: Array<Scalars['Uuid']>;\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n};\n\nexport type UpdatePlayerPostInput = {\n  body?: Maybe<Scalars['String']>;\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n  postId: Scalars['Uuid'];\n};\n\nexport type UpdatePlayerPreferencesInput = {\n  countryCode: Scalars['String'];\n  emailAddress?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  playerTypes: Array<PlayerType>;\n};\n","import {ChangeEvent} from 'react'\nimport {TextFieldProps} from './TextFieldProps'\nimport classNames from 'classnames'\n\nconst TextField = ({\n  label,\n  form,\n  fieldName,\n  containerClassName,\n  ...props\n}: TextFieldProps) => {\n  const [state, {setValue}] = form\n  const field = state[fieldName]\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setValue(fieldName, e.target.value)\n  const hasError = field.touched && !field.isValid\n\n  return (\n    <div\n      className={classNames(\n        'form-control',\n        'w-full',\n        'md:w-1/2',\n        containerClassName\n      )}\n    >\n      {label && (\n        <label className=\"label\">\n          <span className=\"label-text\">{label}</span>\n        </label>\n      )}\n      <input\n        {...props}\n        type=\"text\"\n        className={classNames('input', 'input-bordered', {\n          'input-error': hasError\n        })}\n        value={field.value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default TextField\n","import {PlaceProps} from './PlaceProps'\nimport {first} from 'lodash'\n\ntype AddressCommponent = {\n  key: string\n  longName: string\n  shortName: string\n}\n\nconst DIALING_CODE_REGEX = /^\\+?(\\d+)/\n\nconst getAddressComponents = (result: google.maps.places.PlaceResult) => {\n  return (\n    result.address_components?.reduce<AddressCommponent[]>((result, item) => {\n      return [\n        ...result,\n        ...item.types.map(type => ({\n          key: type,\n          shortName: item.short_name,\n          longName: item.long_name\n        }))\n      ]\n    }, []) ?? []\n  )\n}\n\nconst findAddressComponent = (result: AddressCommponent[], type: string) =>\n  result.find(({key}) => key === type)\n\nconst getTelephoneNumber = (result: google.maps.places.PlaceResult) =>\n  result.international_phone_number?.replace(DIALING_CODE_REGEX, '')\n\nconst getDialingCode = (result: google.maps.places.PlaceResult) =>\n  first(result.international_phone_number?.match(DIALING_CODE_REGEX) ?? [])\n\nconst getCountryCode = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'country')?.shortName ?? ''\n\nconst getPostCode = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'postal_code')?.shortName ?? ''\n\nconst getProvince = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'administrative_area_level_1')?.longName ?? ''\n\nconst getStreet = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'route')?.longName ?? ''\n\nconst getStreetNumber = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'street_number')?.shortName ?? ''\n\nconst getSuburb = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'locality')?.longName ?? ''\n\nconst getCity = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'administrative_area_level_2')?.longName ?? ''\n\nconst getPlace = (result: google.maps.places.PlaceResult): PlaceProps => {\n  const addressComponents = getAddressComponents(result)\n\n  return {\n    telephoneNumber: getTelephoneNumber(result),\n    dialingCode: getDialingCode(result),\n    countryCode: getCountryCode(addressComponents),\n    postCode: getPostCode(addressComponents),\n    province: getProvince(addressComponents),\n    street: getStreet(addressComponents),\n    streetNumber: getStreetNumber(addressComponents),\n    suburb: getSuburb(addressComponents),\n    city: getCity(addressComponents),\n    lat: result.geometry?.location?.lat(),\n    lon: result.geometry?.location?.lng(),\n    website: result.website,\n    description: result.name,\n    name: result.name\n  }\n}\n\nexport default getPlace\n","import {ChangeEvent, useCallback, useEffect, useRef, useState} from 'react'\n\nimport {Autocomplete} from '@react-google-maps/api'\nimport {PlaceFieldProps} from './PlaceFieldProps'\nimport classNames from 'classnames'\nimport getPlace from './getPlace'\n\nconst PlacesField = ({\n  label,\n  form,\n  fieldName,\n  containerClassName,\n  onPlaceChanged,\n  ...props\n}: PlaceFieldProps) => {\n  const [state, {setValue}] = form\n  const field = state[fieldName]\n  const [term, setTerm] = useState(field.value)\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setTerm(e.target.value)\n    setValue(fieldName, e.target.value)\n  }\n  const hasError = field.touched && !field.isValid\n  const autoComplete = useRef<google.maps.places.Autocomplete | undefined>()\n\n  const onSetAutoComplete = useCallback(\n    (e: google.maps.places.Autocomplete) => {\n      autoComplete.current = e\n    },\n    []\n  )\n\n  const onSelect = useCallback(() => {\n    if (!autoComplete.current) return\n    const result = autoComplete.current.getPlace()\n    setValue(fieldName, result.name)\n    onPlaceChanged && onPlaceChanged(getPlace(result))\n  }, [onPlaceChanged, setValue, fieldName])\n\n  useEffect(() => {\n    setTerm(field.value)\n  }, [field])\n\n  return (\n    <Autocomplete onLoad={onSetAutoComplete} onPlaceChanged={onSelect}>\n      <div\n        className={classNames(\n          'form-control',\n          'w-full',\n          'md:w-1/2',\n          containerClassName\n        )}>\n        {label && (\n          <label className=\"label\">\n            <span className=\"label-text\">{label}</span>\n          </label>\n        )}\n        <input\n          {...props}\n          type=\"text\"\n          className={classNames('input', 'input-bordered', {\n            'input-error': hasError\n          })}\n          value={term}\n          onChange={onChange}\n        />\n      </div>\n    </Autocomplete>\n  )\n}\n\nexport default PlacesField\n","import {ChangeEvent} from 'react'\nimport {TextAreaFieldProps} from './TextAreaFieldProps'\nimport classNames from 'classnames'\n\nconst TextField = ({label, form, fieldName, ...props}: TextAreaFieldProps) => {\n  const [state, {setValue}] = form\n  const field = state[fieldName]\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setValue(fieldName, e.target.value)\n  const hasError = field.touched && !field.isValid\n\n  return (\n    <div className={classNames('form-control', 'w-full', 'md:w-1/2')}>\n      {label && (\n        <label className=\"label\">\n          <span className=\"label-text\">{label}</span>\n        </label>\n      )}\n      <input\n        {...props}\n        type=\"text\"\n        className={classNames('textarea', 'textarea-bordered', 'h-24', {\n          'textarea-error': hasError\n        })}\n        value={field.value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default TextField\n","import {FormSectionProps} from './FormSectionProps'\nimport classNames from 'classnames'\n\nconst FormSection = ({children, title, index = '-'}: FormSectionProps) => {\n  return (\n    <div className={classNames('mt-5')}>\n      <h2 className={classNames('p-2', 'flex', 'flex-row', 'items-center')}>\n        <div\n          className={classNames(\n            'border',\n            'rounded-full',\n            'h-10',\n            'w-10',\n            'text-center',\n            'justify-center',\n            'items-center',\n            'flex',\n            'mr-4'\n          )}\n        >\n          {index}\n        </div>\n        <span>{title}</span>\n      </h2>\n      <div className={classNames('border-t', 'ml-16')}>{children}</div>\n    </div>\n  )\n}\n\nexport default FormSection\n","import {FormProps} from './FormProps'\nimport classNames from 'classnames'\n\nconst Form = ({children}: FormProps) => {\n  return (\n    <form\n      onSubmit={e => e.preventDefault()}\n      className={classNames(\n        'bg-white',\n        'rounded-md',\n        'm-2',\n        'p-6',\n        'w-full',\n        'lg:w-1/2',\n        'md:w-3/4'\n      )}>\n      {children}\n    </form>\n  )\n}\n\nexport default Form\n","const DEFAULT_FILTER = (term: string, {value}: {value: string}) =>\n  term === '' || (!!value && !!term && value.toLowerCase().includes(term.toLowerCase()))\n\nexport default DEFAULT_FILTER\n","import {ChangeEvent, useEffect, useState} from 'react'\nimport {DropdownFieldItem, DropdownFieldProps} from './DropdownFieldProps'\n\nimport DEFAULT_FILTER from './DEFAULT_FILTER'\nimport classNames from 'classnames'\n\nconst DropdownField = ({\n  label,\n  form,\n  fieldName,\n  source,\n  containerClassName,\n  filter = DEFAULT_FILTER,\n  ...props\n}: DropdownFieldProps) => {\n  const [open, setOpen] = useState(false)\n  const [hasFocus, setHasFocus] = useState(false)\n  const [state, {setValue}] = form\n  const field = state[fieldName]\n  const hasError = field.touched && !field.isValid\n  const [term, setTerm] = useState(field.value)\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => setTerm(e.target.value)\n  const focus = () => setOpen(true)\n  const blur = () => !hasFocus && setOpen(false)\n  const over = () => setHasFocus(true)\n  const out = () => setHasFocus(false)\n  const select =\n    ({key, value}: DropdownFieldItem) =>\n    () => {\n      setValue(fieldName, key)\n      setTerm(value)\n      setOpen(false)\n    }\n  const items = source.filter(item => filter(term, item))\n\n  useEffect(() => {\n    const item = source.find(item => item.key === field.value)\n    item && setTerm(item.value)\n  }, [source, field.value])\n\n  return (\n    <div\n      className={classNames(\n        'form-control',\n        'w-full',\n        'md:w-1/2',\n        containerClassName\n      )}\n    >\n      {label && (\n        <label className=\"label\">\n          <span className=\"label-text\">{label}</span>\n        </label>\n      )}\n      <input type=\"hidden\" value=\"autocomplete hack\" />\n      <input\n        {...props}\n        type=\"text\"\n        className={classNames('input', 'input-bordered', {\n          'input-error': hasError\n        })}\n        value={term}\n        autoComplete={'off'}\n        onChange={onChange}\n        onFocus={focus}\n        onBlur={blur}\n      />\n      {open && items.length > 0 && (\n        <div className={classNames('relative')}>\n          <ul\n            onMouseOver={over}\n            onMouseOut={out}\n            className={classNames(\n              'p-2',\n              'shadow',\n              'menu',\n              'dropdown-content',\n              'bg-base-100',\n              'rounded-box',\n              'absolute',\n              'mh-64',\n              'overflow-y-auto',\n              'box-content'\n            )}\n          >\n            {items.map(item => (\n              <li key={item.key}>\n                <a onClick={select(item)}>{item.value}</a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default DropdownField\n","const isEmailAddressRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nconst isEmailAddress = (value: string) => {\n  if (!value) return true\n  return isEmailAddressRegex.test(value.toLowerCase())\n}\n\nexport default isEmailAddress\n","const isNumber = (value: string) => {\n  return value !== undefined && !isNaN(+value)\n}\n\nexport default isNumber\n","const notNullOrEmpty = (value: string) => {\n  return value !== undefined && value !== ''\n}\n\nexport default notNullOrEmpty\n","import FormDefinition from '../FormDefinition'\n\nconst isFormValid = (form: FormDefinition<any>, fieldNames?: string[]) => {\n  const {touch} = form[1]\n  const affectedFields = Object.keys(form[0]).filter(key => {\n    const field = form[0][key]\n\n    if (!fieldNames) {\n      return !field.isValid\n    }\n\n    if (fieldNames.indexOf(key) !== -1) {\n      return !field.isValid\n    }\n\n    return false\n  })\n  touch(affectedFields)\n  return affectedFields.length === 0\n}\n\nexport default isFormValid\n","const numberConverter = {\n  toField: (value: number | undefined) => (value ? value.toString() : ''),\n  toData: (value: string) => +value\n}\n\nexport default numberConverter\n","import {CourseForm, useCreateCourse, useIsUnique} from 'state/courses'\nimport {\n  DropdownField,\n  Form,\n  FormSection,\n  PlaceField,\n  PlaceProps,\n  TextAreaField,\n  TextField,\n  getFormData,\n  isEmailAddress,\n  isFormValid,\n  isNumber,\n  notNullOrEmpty,\n  numberConverter,\n  useForm,\n  getFieldValue\n} from 'components/forms'\nimport {useCallback, useMemo} from 'react'\nimport {useCountryDropdownSource, useTimezoneDropdownSource} from 'state'\n\nimport classNames from 'classnames'\nimport {useHistory} from 'react-router-dom'\n\nconst AddCourseScreen = () => {\n  const history = useHistory()\n  const fields = useMemo(\n    () => ({\n      name: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      description: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      website: {\n        value: '',\n        validators: []\n      },\n      emailAddress: {\n        value: '',\n        validators: [isEmailAddress]\n      },\n      dialingCode: {\n        value: '',\n        validators: []\n      },\n      telephoneNumber: {\n        value: '',\n        validators: []\n      },\n      streetNumber: {\n        value: '',\n        validators: []\n      },\n      street: {\n        value: '',\n        validators: []\n      },\n      suburb: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      city: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      province: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      postCode: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      countryCode: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      lat: {\n        value: '',\n        validators: [notNullOrEmpty, isNumber],\n        converter: numberConverter\n      },\n      lon: {\n        value: '',\n        validators: [notNullOrEmpty, isNumber],\n        converter: numberConverter\n      },\n      timezoneId: {\n        value: '',\n        validators: [notNullOrEmpty]\n      }\n    }),\n    []\n  )\n  const form = useForm(fields)\n  const [, {setValues}] = form\n  const discard = () => history.goBack()\n  const [execute, {loading}] = useCreateCourse()\n  const countries = useCountryDropdownSource()\n  const timezones = useTimezoneDropdownSource()\n  const name = getFieldValue<string>(form, 'name')\n  const {isUnique, loading: checkingUniqueness} = useIsUnique(name)\n\n  const submit = async () => {\n    if (isFormValid(form) && !checkingUniqueness && isUnique) {\n      const data = getFormData<CourseForm>(form)\n      await execute({\n        name: data.name,\n        description: data.description,\n        website: data.website,\n        emailAddress: data.emailAddress,\n        timezoneId: data.timezoneId,\n        telephoneNumber:\n          data.telephoneNumber && data.dialingCode\n            ? {\n                number: data.telephoneNumber,\n                dialingCode: data.dialingCode\n              }\n            : null,\n        physicalAddress: {\n          city: data.city,\n          countryCode: data.countryCode,\n          postCode: data.postCode,\n          province: data.province,\n          street: data.street,\n          streetNumber: data.streetNumber,\n          suburb: data.suburb,\n          coordinates: {\n            lat: data.lat,\n            lon: data.lon\n          }\n        }\n      })\n      history.replace('/admin')\n    }\n  }\n\n  const onPlaceChanged = useCallback(\n    (place: PlaceProps) => setValues(place),\n    [setValues]\n  )\n\n  return (\n    <div className={classNames('flex justify-center')}>\n      <Form>\n        <FormSection title={'Course info'} index={'1'}>\n          <PlaceField\n            placeholder={'Acme Country Club'}\n            form={form}\n            fieldName={'name'}\n            label={'Name'}\n            onPlaceChanged={onPlaceChanged}\n          />\n          {!isUnique && !checkingUniqueness && (\n            <label className={'alert alert-error mt-3'}>\n              The course name you have chosen already exists\n            </label>\n          )}\n          {isUnique && !checkingUniqueness && name && (\n            <label className={'alert alert-success mt-3'}>\n              The course name is valid\n            </label>\n          )}\n          {checkingUniqueness && (\n            <label className={'alert alert-info mt-3'}>\n              Checking course name, please wait\n            </label>\n          )}\n          <TextAreaField\n            placeholder={'Supply the course description'}\n            form={form}\n            fieldName={'description'}\n            label={'Description'}\n          />\n        </FormSection>\n        <FormSection title={'Contact'} index={'2'}>\n          <TextField\n            placeholder={'https://www.course.com'}\n            form={form}\n            fieldName={'website'}\n            label={'Website'}\n          />\n          <TextField\n            placeholder={'info@course.com'}\n            form={form}\n            fieldName={'emailAddress'}\n            label={'Email Address'}\n          />\n          <TextField\n            placeholder={'+27'}\n            form={form}\n            fieldName={'dialingCode'}\n            label={'Telephone Number Dialing Code'}\n          />\n          <TextField\n            placeholder={'000000000'}\n            form={form}\n            fieldName={'telephoneNumber'}\n            label={'Telephone Number'}\n          />\n        </FormSection>\n        <FormSection title={'Physical Address'} index={'3'}>\n          <TextField\n            placeholder={'1'}\n            form={form}\n            fieldName={'streetNumber'}\n            label={'Street number'}\n          />\n          <TextField\n            placeholder={'Acme St'}\n            form={form}\n            fieldName={'street'}\n            label={'Street'}\n          />\n          <TextField\n            placeholder={'Acme Hills'}\n            form={form}\n            fieldName={'suburb'}\n            label={'Suburb'}\n          />\n          <TextField\n            placeholder={'Acme City'}\n            form={form}\n            fieldName={'city'}\n            label={'City'}\n          />\n          <TextField\n            placeholder={'West Acme'}\n            form={form}\n            fieldName={'province'}\n            label={'Province'}\n          />\n          <TextField\n            placeholder={'0000'}\n            form={form}\n            fieldName={'postCode'}\n            label={'Post Code'}\n          />\n          <DropdownField\n            source={countries}\n            placeholder={'Thailand'}\n            form={form}\n            fieldName={'countryCode'}\n            label={'Country'}\n          />\n          <DropdownField\n            source={timezones}\n            placeholder={'SE Asia Standard Time'}\n            form={form}\n            fieldName={'timezoneId'}\n            label={'Timezone'}\n          />\n          <TextField\n            placeholder={'10.487812'}\n            form={form}\n            fieldName={'lat'}\n            label={'Latitude'}\n          />\n          <TextField\n            placeholder={'78.340848'}\n            form={form}\n            fieldName={'lon'}\n            label={'Longitude'}\n          />\n        </FormSection>\n        <div className={classNames('flex', 'justify-end', 'mt-2', 'p-2')}>\n          <button className={classNames('link', 'mr-4')} onClick={discard}>\n            discard\n          </button>\n          <button\n            className={classNames('btn', {loading: loading})}\n            onClick={submit}>\n            Save\n          </button>\n        </div>\n      </Form>\n    </div>\n  )\n}\n\nexport default AddCourseScreen\n","import {CSSProperties} from 'react'\nimport classNames from 'classnames'\n\nconst Body = ({\n  children,\n  className,\n  style = {}\n}: {\n  children: React.ReactNode | React.ReactNodeArray\n  className?: string\n  style?: CSSProperties\n}) => {\n  return (\n    <div\n      className={classNames(\n        'h-screen',\n        'overflow-x-auto',\n        'bg-center',\n        'bg-cover',\n        'bg-gradient-to-r from-gray-300 via-gray-100 to-gray-300',\n        className\n      )}\n      style={style}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Body\n","import {CourseForm, useGetCourse, useUpdateCourse} from 'state/courses'\nimport {\n  DropdownField,\n  Form,\n  FormSection,\n  PlaceField,\n  PlaceProps,\n  TextAreaField,\n  TextField,\n  getFormData,\n  isEmailAddress,\n  isFormValid,\n  isNumber,\n  notNullOrEmpty,\n  numberConverter,\n  useForm\n} from 'components/forms'\nimport {useCallback, useMemo} from 'react'\nimport {useCountryDropdownSource, useTimezoneDropdownSource} from 'state'\nimport {useHistory, useParams} from 'react-router-dom'\n\nimport classNames from 'classnames'\n\nconst EditCourseScreen = () => {\n  const history = useHistory()\n  let {courseId} = useParams<{courseId: string}>()\n  const {data} = useGetCourse(courseId)\n  const countries = useCountryDropdownSource()\n  const timezones = useTimezoneDropdownSource()\n\n  const fields = useMemo(\n    () => ({\n      name: {\n        value: data?.name ?? '',\n        validators: [notNullOrEmpty]\n      },\n      description: {\n        value: data?.description ?? '',\n        validators: [notNullOrEmpty]\n      },\n      website: {\n        value: '',\n        validators: []\n      },\n      emailAddress: {\n        value: data?.emailAddress ?? '',\n        validators: [isEmailAddress]\n      },\n      dialingCode: {\n        value: data?.telephoneNumber?.dialingCode ?? '',\n        validators: []\n      },\n      telephoneNumber: {\n        value: data?.telephoneNumber?.number ?? '',\n        validators: []\n      },\n      streetNumber: {\n        value: data?.physicalAddress?.streetNumber ?? '',\n        validators: []\n      },\n      street: {\n        value: data?.physicalAddress?.street ?? '',\n        validators: []\n      },\n      suburb: {\n        value: data?.physicalAddress?.suburb ?? '',\n        validators: [notNullOrEmpty]\n      },\n      city: {\n        value: data?.physicalAddress?.city ?? '',\n        validators: [notNullOrEmpty]\n      },\n      province: {\n        value: data?.physicalAddress?.province ?? '',\n        validators: [notNullOrEmpty]\n      },\n      postCode: {\n        value: data?.physicalAddress?.postCode ?? '',\n        validators: [notNullOrEmpty]\n      },\n      countryCode: {\n        value: data?.physicalAddress?.countryCode ?? '',\n        validators: [notNullOrEmpty]\n      },\n      lat: {\n        value: data?.physicalAddress?.coordinates?.lat ?? 0,\n        validators: [notNullOrEmpty, isNumber],\n        converter: numberConverter\n      },\n      lon: {\n        value: data?.physicalAddress?.coordinates?.lon ?? 0,\n        validators: [notNullOrEmpty, isNumber],\n        converter: numberConverter\n      },\n      timezoneId: {\n        value: data?.timezone?.id,\n        validators: [notNullOrEmpty]\n      }\n    }),\n    [data]\n  )\n\n  const form = useForm(fields)\n  const [, {setValues}] = form\n\n  const [execute, {loading}] = useUpdateCourse()\n  const discard = () => history.replace('/admin')\n  const submit = async () => {\n    if (isFormValid(form)) {\n      const data = getFormData<CourseForm>(form)\n      await execute({\n        courseId,\n        name: data.name,\n        description: data.description,\n        emailAddress: data.emailAddress,\n        website: data.website,\n        timezoneId: data.timezoneId,\n        telephoneNumber:\n          data.telephoneNumber && data.dialingCode\n            ? {\n                number: data.telephoneNumber,\n                dialingCode: data.dialingCode\n              }\n            : null,\n        physicalAddress: {\n          city: data.city,\n          countryCode: data.countryCode,\n          postCode: data.postCode,\n          province: data.province,\n          street: data.street,\n          streetNumber: data.streetNumber,\n          suburb: data.suburb,\n          coordinates: {\n            lat: data.lat,\n            lon: data.lon\n          }\n        }\n      })\n      history.replace('/admin')\n    }\n  }\n\n  const onPlaceChanged = useCallback(\n    (place: PlaceProps) => setValues(place),\n    [setValues]\n  )\n\n  return (\n    <div className={classNames('flex justify-center')}>\n      <Form>\n        <FormSection title={'Course info'} index={'1'}>\n          <PlaceField\n            placeholder={'Acme Country Club'}\n            form={form}\n            fieldName={'name'}\n            label={'Name'}\n            onPlaceChanged={onPlaceChanged}\n          />\n          <TextAreaField\n            placeholder={'Supply the course description'}\n            form={form}\n            fieldName={'description'}\n            label={'Description'}\n          />\n        </FormSection>\n        <FormSection title={'Contact'} index={'2'}>\n          <TextField\n            placeholder={'https://www.course.com'}\n            form={form}\n            fieldName={'website'}\n            label={'Website'}\n          />\n          <TextField\n            placeholder={'info@course.com'}\n            form={form}\n            fieldName={'emailAddress'}\n            label={'Email Address'}\n          />\n          <TextField\n            placeholder={'+27'}\n            form={form}\n            fieldName={'dialingCode'}\n            label={'Telephone Number Dialing Code'}\n          />\n          <TextField\n            placeholder={'000000000'}\n            form={form}\n            fieldName={'telephoneNumber'}\n            label={'Telephone Number'}\n          />\n        </FormSection>\n        <FormSection title={'Physical Address'} index={'3'}>\n          <TextField\n            placeholder={'1'}\n            form={form}\n            fieldName={'streetNumber'}\n            label={'Street number'}\n          />\n          <TextField\n            placeholder={'Acme St'}\n            form={form}\n            fieldName={'street'}\n            label={'Street'}\n          />\n          <TextField\n            placeholder={'Acme Hills'}\n            form={form}\n            fieldName={'suburb'}\n            label={'Suburb'}\n          />\n          <TextField\n            placeholder={'Acme City'}\n            form={form}\n            fieldName={'city'}\n            label={'City'}\n          />\n          <TextField\n            placeholder={'West Acme'}\n            form={form}\n            fieldName={'province'}\n            label={'Province'}\n          />\n          <TextField\n            placeholder={'0000'}\n            form={form}\n            fieldName={'postCode'}\n            label={'Post Code'}\n          />\n          <DropdownField\n            source={countries}\n            placeholder={'Thailand'}\n            form={form}\n            fieldName={'countryCode'}\n            label={'Country'}\n          />\n          <DropdownField\n            source={timezones}\n            placeholder={'SE Asia Standard Time'}\n            form={form}\n            fieldName={'timezoneId'}\n            label={'Timezone'}\n          />\n          <TextField\n            placeholder={'10.487812'}\n            form={form}\n            fieldName={'lat'}\n            label={'Latitude'}\n          />\n          <TextField\n            placeholder={'78.340848'}\n            form={form}\n            fieldName={'lon'}\n            label={'Longitude'}\n          />\n        </FormSection>\n        <div className={classNames('flex', 'justify-end', 'mt-2', 'p-2')}>\n          <button className={classNames('link', 'mr-4')} onClick={discard}>\n            discard\n          </button>\n          <button\n            className={classNames('btn', {loading: loading})}\n            onClick={submit}>\n            Save\n          </button>\n        </div>\n      </Form>\n    </div>\n  )\n}\n\nexport default EditCourseScreen\n","import {MapsProviderProps} from './MapsProviderProps'\nimport {memo} from 'react'\nimport {useJsApiLoader} from '@react-google-maps/api'\n\nconst MapsProvider = ({children}: MapsProviderProps) => {\n  const {isLoaded} = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY!,\n    libraries: ['places']\n  })\n\n  return isLoaded ? <>{children}</> : <></>\n}\n\nexport default memo(MapsProvider)\n","import {Redirect, Route} from 'react-router-dom'\n\nimport {ProtectedRouteProps} from './ProtectedRouteProps'\nimport {useAuthContext} from 'services/auth'\n\nconst ProtectedRoute = ({children, ...props}: ProtectedRouteProps) => {\n  const {authenticated} = useAuthContext()\n\n  return (\n    <Route {...props}>\n      {authenticated ? <>{children}</> : <Redirect to={'/login'} />}\n    </Route>\n  )\n}\n\nexport default ProtectedRoute\n","import {useEffect, useState} from 'react'\n\nimport {ImageRef} from 'services/api'\nimport {Maybe} from 'graphql/jsutils/Maybe'\nimport {useAuthContext} from 'services/auth'\nimport {useConfig} from 'services/config'\n\nconst useGetImageSource = (imageRef: Maybe<ImageRef>, width: number = 256) => {\n  const auth = useAuthContext()\n  const config = useConfig()\n  const [source, setSource] = useState<string>('')\n\n  useEffect(() => {\n    const baseUrl = config.getString('ApiUrl')\n    const load = async () => {\n      const token = await auth.getToken()\n      const source = `${baseUrl}${\n        imageRef!.ref\n      }?width=${width}&format=jpg&access_token=${token}`\n      setSource(source)\n    }\n    imageRef && load()\n  }, [imageRef, config, auth, width])\n\n  return source\n}\n\nexport default useGetImageSource\n","import {gql} from '@apollo/client'\n\nexport default gql`\n  fragment ImageRefFragment on ImageRef {\n    ref\n    width\n    height\n  }\n`\n","import IMAGE_REF_FRAGMENT from 'state/IMAGE_REF_FRAGMENT'\nimport {gql} from '@apollo/client'\n\nexport default gql`\n  fragment SelfFragment on Player {\n    __typename\n    id\n    initials\n    name\n    profileImageRef {\n      ...ImageRefFragment\n    }\n  }\n  ${IMAGE_REF_FRAGMENT}\n`\n","import {Maybe, Player} from 'services/api'\nimport {NetworkStatus, gql, useQuery} from '@apollo/client'\n\nimport SELF_FRAGMENT from './SELF_FRAGMENT'\n\nconst GET_SELF = gql`\n  query GetSelf {\n    self: player {\n      ...SelfFragment\n    }\n  }\n  ${SELF_FRAGMENT}\n`\n\nconst useGetSelf = () => {\n  const {data, networkStatus, refetch} = useQuery<{\n    self: Maybe<Player>\n  }>(GET_SELF, {\n    notifyOnNetworkStatusChange: true\n  })\n\n  const loading = networkStatus === NetworkStatus.loading\n  return {loading, data, networkStatus, refetch}\n}\n\nexport default useGetSelf\n","import classNames from 'classnames'\nimport React, {useState} from 'react'\nimport {useRemoveCourse} from 'state/courses'\nimport {RemoveCourseButtonProps} from './RemoveCourseButtonProps'\n\nconst RemoveCourse = ({courseId}: RemoveCourseButtonProps) => {\n  const [open, setOpen] = useState(false)\n  const [removeCourse, {loading}] = useRemoveCourse()\n\n  const onCancelClicked = () => setOpen(false)\n\n  const onRemoveClicked = async () => {\n    await removeCourse({courseId})\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <div className={classNames('modal', {'modal-open': open})}>\n        <div className=\"modal-box\">\n          <h3 className=\"font-bold text-lg\">\n            Are you sure you want to remove the course?\n          </h3>\n          <div className=\"modal-action\">\n            <label onClick={onCancelClicked} className=\"btn\">\n              Cancel\n            </label>\n            <label\n              onClick={onRemoveClicked}\n              className={classNames('btn btn-success', {loading: loading})}>\n              Yes\n            </label>\n          </div>\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        className={classNames('btn btn-xs btn-warning modal-button')}\n        onClick={() => setOpen(true)}>\n        Remove\n      </button>\n    </>\n  )\n}\n\nexport default RemoveCourse\n","import React, {useState} from 'react'\nimport {Switch, useHistory} from 'react-router-dom'\nimport {faPlus, faSignOutAlt} from '@fortawesome/free-solid-svg-icons'\nimport {formatAddress, isBusy} from 'state'\n\nimport {AddCourseScreen} from 'screens/add-course'\nimport {Body} from 'components/body'\nimport {EditCourseScreen} from 'screens/edit-course'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {MapsProvider} from 'services/maps'\nimport {ProtectedRoute} from 'components/protected-route'\nimport classNames from 'classnames'\nimport {useAuthContext} from 'services/auth'\nimport {useCourseSearch} from 'state/courses'\nimport {useGetImageSource} from 'state/media'\nimport {useGetSelf} from 'state/players'\nimport {RemoveCourseButton} from 'components/remove-course-button'\n\nconst NavBar = () => {\n  const {logout} = useAuthContext()\n  const {data} = useGetSelf()\n  const source = useGetImageSource(data?.self?.profileImageRef)\n  return (\n    <div className=\"m-2 navbar mb-2 shadow-lg bg-neutral text-neutral-content rounded-box\">\n      <div className=\"flex-1 hidden px-2 mx-2 lg:flex divide-x-2\">\n        <span className=\"text-md px-2\">GSK Admin Console</span>\n        <span className=\"text-lg font-bold px-2\">\n          {data?.self && data.self.name}\n        </span>\n      </div>\n      <div className=\"flex-none\">\n        <div className=\"dropdown dropdown-end text-black\">\n          <div tabIndex={0} className=\"avatar\">\n            <div className=\"rounded-full w-10 h-10 m-1\">\n              {source && <img src={source} alt={'Profile'} />}\n            </div>\n          </div>\n          <ul\n            tabIndex={0}\n            className=\"p-2 shadow menu dropdown-content bg-base-100 rounded-box w-52\">\n            <li>\n              <button\n                className={'btn btn-ghost flex flex-row justify-start gap-x-2'}\n                onClick={logout}>\n                <FontAwesomeIcon icon={faSignOutAlt} />\n                Logout\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst CourseList = () => {\n  const [term, setTerm] = useState('')\n  const {data, networkStatus} = useCourseSearch({limit: 10000, term})\n  const history = useHistory()\n  const addCourse = () => history.push('/admin/add-course')\n  const editCourse = (courseId: string) => () =>\n    history.push(`/admin/edit-course/${courseId}`)\n  const onFilter = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setTerm(e.target.value)\n\n  return (\n    <div\n      className={classNames('bg-white', 'rounded-md', 'm-2', 'p-6', 'shadow')}>\n      <div\n        className={classNames(\n          'flex',\n          'flex-row',\n          'justify-between',\n          'border-b-2',\n          'mb-3'\n        )}>\n        <h2 className={classNames('text-lg', 'text-bold', 'p-3')}>\n          Course list\n        </h2>\n        <div\n          className={classNames(\n            'flex',\n            'flex-row',\n            'items-center',\n            'space-x-3'\n          )}>\n          <div className=\"form-control\">\n            <input\n              type=\"text\"\n              placeholder=\"Filter\"\n              className=\"input input-bordered input-sm\"\n              onChange={onFilter}\n              value={term}\n            />\n          </div>\n          <button\n            onClick={addCourse}\n            className={classNames(\n              'btn',\n              'btn-sm',\n              'flex',\n              'flex-row',\n              'justify-start',\n              'gap-x-2'\n            )}>\n            Add course\n            <FontAwesomeIcon icon={faPlus} />\n          </button>\n        </div>\n      </div>\n      {!isBusy(networkStatus) && (\n        <div className={'overflow-x-auto'}>\n          <table className={'table w-full'}>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th className={'hidden xl:table-cell'}>Description</th>\n                <th className={'hidden lg:table-cell'}>Address</th>\n                <th className={'hidden xl:table-cell'}>Timezone</th>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map(course => (\n                <tr key={course.id}>\n                  <td>{course.name}</td>\n                  <td className={'hidden xl:table-cell'}>\n                    {course.description}\n                  </td>\n                  <td className={'hidden lg:table-cell'}>\n                    {formatAddress(course.physicalAddress)}\n                  </td>\n                  <td className={'hidden xl:table-cell'}>\n                    {course.timezone?.name}\n                  </td>\n                  <td>\n                    <button\n                      className={classNames('btn btn-xs')}\n                      onClick={editCourse(course.id)}>\n                      Edit\n                    </button>\n                  </td>\n                  <td>\n                    <RemoveCourseButton courseId={course.id} />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst DashboardScreen = () => {\n  return <CourseList />\n}\n\nconst AdminScreen = () => {\n  return (\n    <MapsProvider>\n      <Body>\n        <NavBar />\n        <Switch>\n          <ProtectedRoute path={'/admin/add-course'}>\n            <AddCourseScreen />\n          </ProtectedRoute>\n          <ProtectedRoute path={'/admin/edit-course/:courseId'}>\n            <EditCourseScreen />\n          </ProtectedRoute>\n          <ProtectedRoute path={'/'}>\n            <DashboardScreen />\n          </ProtectedRoute>\n        </Switch>\n      </Body>\n    </MapsProvider>\n  )\n}\n\nexport default AdminScreen\n","import {isEqual, omit, uniqBy} from 'lodash'\n\nimport {FieldPolicy} from '@apollo/client'\n\nconst policy: FieldPolicy<any, any, any> = {\n  keyArgs: false,\n  read: ({cachedItem} = {}) => {\n    return cachedItem\n  },\n  merge: (prev = {}, incoming, {args}) => {\n    const stableArgs = omit(args, ['continuationToken'])\n\n    if (!args?.continuationToken || !isEqual(prev.args, stableArgs)) {\n      return {args: stableArgs, cachedItem: incoming}\n    }\n\n    return {\n      args: stableArgs,\n      cachedItem: {\n        ...incoming,\n        data: uniqBy(\n          [...(prev?.cachedItem?.data ?? []), ...incoming.data],\n          '__ref'\n        )\n      }\n    }\n  }\n}\n\nexport default policy\n","import {FieldPolicy} from '@apollo/client'\n\nconst policy: FieldPolicy<any, any, any> = {\n  merge(_, incoming) {\n    return incoming\n  }\n}\n\nexport default policy\n","import {FieldPolicy} from '@apollo/client'\nimport {uniqBy} from 'lodash'\n\nconst policy: FieldPolicy<any, any, any> = {\n  merge(existing = [], incoming) {\n    return uniqBy([...existing, ...incoming], '__ref')\n  }\n}\n\nexport default policy\n","import {FieldPolicy} from '@apollo/client'\n\nconst policy: FieldPolicy<any, any, any> = {\n  keyArgs: [\n    'input',\n    [\n      'term',\n      'courseIds',\n      'isAscending',\n      'teeTime',\n      ['from', 'to'],\n      'communityIds'\n    ]\n  ]\n}\n\nexport default policy\n","import {ApolloClient, InMemoryCache} from '@apollo/client'\nimport {\n  mergePolicy,\n  paginatedGamesPolicy,\n  paginationPolicy,\n  replacePolicy\n} from './utils'\n\nimport {BatchHttpLink} from '@apollo/client/link/batch-http'\nimport {error} from 'services/logging'\nimport {onError} from '@apollo/client/link/error'\nimport {setContext} from '@apollo/client/link/context'\nimport {uniqBy} from 'lodash'\n\nconst createClient = (\n  url: string,\n  getToken: () => Promise<string | undefined>\n) => {\n  const httpLink = new BatchHttpLink({\n    uri: url\n  })\n\n  const authLink = setContext(async (_, {headers}) => {\n    const token = await getToken()\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    }\n  })\n\n  const errorLink = onError(({graphQLErrors, networkError}) => {\n    if (graphQLErrors) graphQLErrors.forEach(e => error(e))\n    if (networkError) error(networkError)\n  })\n\n  const client = new ApolloClient({\n    link: errorLink.concat(authLink).concat(httpLink),\n    cache: new InMemoryCache({\n      typePolicies: {\n        PostCommentOfPlayer: {\n          fields: {\n            replies: paginationPolicy,\n            reactions: replacePolicy\n          }\n        },\n        PostOfPlayer: {\n          fields: {\n            comments: paginationPolicy,\n            reactions: replacePolicy\n          }\n        },\n        Player: {\n          fields: {\n            playerTypes: replacePolicy,\n            preferredGameTypes: replacePolicy,\n            preferredPlayerTypes: replacePolicy,\n            preferredCourses: replacePolicy,\n            communities: replacePolicy,\n            gameInvitations: replacePolicy,\n            games: paginatedGamesPolicy,\n            posts: paginationPolicy\n          }\n        },\n        PostCommentOfCommunity: {\n          fields: {\n            replies: paginationPolicy,\n            reactions: replacePolicy\n          }\n        },\n        PostOfCommunity: {\n          fields: {\n            comments: paginationPolicy,\n            reactions: replacePolicy\n          }\n        },\n        Community: {\n          fields: {\n            posts: paginationPolicy,\n            admins: replacePolicy\n          }\n        },\n        Game: {\n          fields: {\n            players: replacePolicy,\n            invitations: replacePolicy\n          }\n        },\n        PaginatedResultsOfGame: {\n          fields: {\n            data: mergePolicy\n          }\n        },\n        Course: {\n          fields: {\n            physicalAddress: replacePolicy\n          }\n        },\n        PhysicalAddress: {\n          keyFields: [\n            'countryCode',\n            'postCode',\n            'province',\n            'street',\n            'streetNumber',\n            'suburb'\n          ]\n        },\n        Query: {\n          fields: {\n            communities: paginationPolicy,\n            games: paginatedGamesPolicy,\n            courses: replacePolicy,\n            chat: replacePolicy,\n            feed: paginationPolicy,\n            // Ensures that all agenda items are merged into one big array\n            // i.e. We never overwrite records\n            agenda: {\n              keyArgs: false,\n              merge(existing = [], incoming) {\n                return uniqBy([...existing, ...incoming], '__ref')\n              }\n            }\n          }\n        }\n      }\n    })\n  })\n  return client\n}\n\nexport default createClient\n","import {useEffect, useState} from 'react'\n\nimport {useConfig} from 'services/config'\n\nconst useApiVersion = () => {\n  const config = useConfig()\n  const [version, setVersion] = useState<number | undefined>()\n\n  useEffect(() => {\n    fetch(`${config.getString('ApiUrl')}health`)\n      .then(\n        response => response.json(),\n        err => {\n          console.error(err)\n        }\n      )\n      .then(data => setVersion(data.version))\n  }, [config])\n  return version\n}\n\nexport default useApiVersion\n","import {\n  ApolloClient,\n  ApolloProvider,\n  NormalizedCacheObject\n} from '@apollo/client'\nimport {useEffect, useRef, useState} from 'react'\n\nimport {ApiProviderProps} from './ApiProviderProps'\nimport MIN_SUPPORTED_API_VERSION from './MIN_SUPPORTED_API_VERSION'\nimport createClient from './createClient'\nimport useApiVersion from './useApiVersion'\nimport {useAuthContext} from 'services/auth'\nimport {useConfig} from 'services/config'\n\nconst ApiProvider = ({children}: ApiProviderProps) => {\n  const authContext = useAuthContext()\n  const clientRef = useRef<ApolloClient<NormalizedCacheObject>>()\n  const [ready, setReady] = useState(false)\n  const config = useConfig()\n  const currentVersion = useApiVersion()\n\n  useEffect(() => {\n    setReady(false)\n    if (authContext.authenticated) {\n      clientRef.current = createClient(\n        config.getString('ApiUrl'),\n        authContext.getToken\n      )\n      setReady(true)\n    } else if (clientRef.current) {\n      clientRef.current.clearStore()\n    }\n  }, [authContext, currentVersion, clientRef, config])\n\n  if (currentVersion && MIN_SUPPORTED_API_VERSION < currentVersion) {\n    return <></>\n  } else if (ready) {\n    return (\n      <ApolloProvider client={clientRef.current!}>{children}</ApolloProvider>\n    )\n  } else {\n    return <></>\n  }\n}\n\nexport default ApiProvider\n","const MIN_SUPPORTED_API_VERSION = 1\nexport default MIN_SUPPORTED_API_VERSION\n","import React from 'react'\nimport {ScreenShotProps} from './ScreenShotProps'\n\nconst ScreenShot = ({src}: ScreenShotProps) => {\n  return (\n    <img\n      className={'object-fill bg-center bg-contain bg-clip-content'}\n      src={src}\n      alt={'Screenshot'}\n    />\n  )\n}\n\nexport default ScreenShot\n","const TopMenu = () => {\n  return (\n    <div className={'flex w-full h-20 items-center text-white'}>\n      <div className={'container mx-auto flex justify-end items-center'}>\n        <ul className={'mr-9 divide-x'}>\n          <li className={'float-left px-4'}>\n            <a href={'https://golfsidekick.com/'}>About</a>\n          </li>\n          <li className={'float-left px-4'}>\n            <a href={'https://golfsidekick.com/'}>Contact</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default TopMenu\n","export default __webpack_public_path__ + \"static/media/apple.8c4986ee.svg\";","export default __webpack_public_path__ + \"static/media/google.f902960a.png\";","export default __webpack_public_path__ + \"static/media/screenshot-1.80287c61.png\";","import {Body} from 'components/body'\nimport React from 'react'\nimport {ScreenShot} from 'components/screen-shot'\nimport {TopMenu} from 'components/top-menu'\nimport apple from 'assets/apple.svg'\nimport classNames from 'classnames'\nimport google from 'assets/google.png'\nimport screenshot1 from 'assets/screenshot-1.png'\n\nconst googleLink =\n  'https://play.google.com/store/apps/details?id=com.golfsidekick'\nconst appleLink = 'https://apps.apple.com/us/app/keynote/id1524843710'\n\nconst Section = ({\n  children,\n  className\n}: {\n  children: React.ReactNode | React.ReactNodeArray\n  className?: string\n}) => {\n  return (\n    <div\n      className={classNames(\n        'flex',\n        'flex-col',\n        'md:flex-row',\n        'flex-wrap',\n        'justify-center',\n        'items-center',\n        'py-9',\n        className\n      )}>\n      {children}\n    </div>\n  )\n}\n\nconst Break = ({inverse = false}: {inverse?: boolean}) => {\n  return (\n    <svg className={'fill-current text-white'} viewBox={'0 0 100 5'}>\n      {inverse ? (\n        <polygon points=\"100,0 0,0 0,5\" />\n      ) : (\n        <polygon points=\"100,0 100,5 0,5\" />\n      )}\n    </svg>\n  )\n}\n\nconst LandingScreen = () => {\n  return (\n    <Body>\n      <TopMenu />\n      <Section>\n        <div className={'flex flex-col items-center text-white'}>\n          <div className={'w-7/12 text-center'}>\n            <h1 className={'text-6xl lg:text-8xl font-black mb-6 text-shadow'}>\n              Welcome Playa!\n            </h1>\n            <h2 className={'text-lg font-normal mb-12 text-shadow'}>\n              Plan golf games with like minded strangers to build a community of\n              new friends.\n            </h2>\n            <div className={'flex flex-row justify-center items-endmt-4'}>\n              <a href={googleLink}>\n                <img\n                  className={'object-contain max-h-16'}\n                  src={google}\n                  alt={'Google Play Store'}\n                />\n              </a>\n              <a href={appleLink}>\n                <img\n                  className={'object-contain max-h-16 p-3'}\n                  src={apple}\n                  alt={'Apple App Store'}\n                />\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className={'pt-9 lg:pt-0 flex items-center justify-center'}>\n          <div className={'max-w-xs'}>\n            <ScreenShot src={screenshot1} />\n          </div>\n        </div>\n      </Section>\n      <Break />\n      <footer className=\"p-10 footer footer-center bg-white\">\n        <div>\n          <span className=\"footer-title\">Company</span>\n          <a className=\"link link-hover\" href={'https://golfsidekick.com/'}>\n            About us\n          </a>\n          <a className=\"link link-hover\" href={'https://golfsidekick.com/'}>\n            Contact\n          </a>\n        </div>\n        <div>\n          <span className=\"footer-title\">Legal</span>\n          <a className=\"link link-hover\" href={'eula.html'}>\n            End-User License Agreement\n          </a>\n          <a className=\"link link-hover\" href={'privacy-policy.html'}>\n            Privacy policy\n          </a>\n        </div>\n      </footer>\n    </Body>\n  )\n}\n\nexport default LandingScreen\n","import {\n  GoogleAuthProvider,\n  getAuth,\n  getRedirectResult,\n  signInWithRedirect\n} from 'firebase/auth'\nimport React, {useEffect, useState} from 'react'\n\nimport {Body} from 'components/body'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport classNames from 'classnames'\nimport {error} from 'services/logging'\nimport {faGoogle} from '@fortawesome/free-brands-svg-icons'\nimport {useAuthContext} from 'services/auth'\nimport {useHistory} from 'react-router'\n\nconst provider = new GoogleAuthProvider()\n\nconst LoginScreen = () => {\n  const auth = getAuth()\n  const history = useHistory()\n  const [busy, setBusy] = useState(true)\n  const {authenticated} = useAuthContext()\n  const login = () => !busy && signInWithRedirect(auth, provider)\n\n  useEffect(() => {\n    getRedirectResult(auth)\n      .then(() => {\n        setBusy(false)\n\n        if (authenticated) {\n          history.push('/admin')\n        }\n      })\n      .catch(e => error(e))\n  }, [auth, authenticated, history])\n\n  return (\n    <Body>\n      <div\n        className={classNames(\n          'flex mx-auto',\n          'bg-white',\n          'p-2',\n          'm-4',\n          'w-5/6',\n          'md:p-9',\n          'md:mt-9',\n          'lg:w-1/2',\n          'rounded-md',\n          'flex-col'\n        )}\n      >\n        <h1 className={classNames('text-xl', 'text-black', 'border-b', 'p-2')}>\n          Sign in\n        </h1>\n        <button\n          onClick={login}\n          className={classNames(\n            'btn',\n            'uppercase',\n            'h-12',\n            'mt-3',\n            'text-white',\n            'w-full',\n            'rounded',\n            'bg-red-800',\n            'hover:bg-red-900',\n            'flex items-center justify-center',\n            {loading: busy}\n          )}\n        >\n          <FontAwesomeIcon className={'mx-4'} icon={faGoogle} />\n          <span>Sign in with Google</span>\n        </button>\n      </div>\n    </Body>\n  )\n}\n\nexport default LoginScreen\n","import {Route, HashRouter as Router, Switch} from 'react-router-dom'\n\nimport {AboutScreen} from 'screens/about'\nimport {AdminScreen} from 'screens/admin'\nimport {ApiProvider} from 'services/api'\nimport {AuthProvider} from 'services/auth'\nimport {ConfigProvider} from 'services/config'\nimport {LandingScreen} from 'screens/landing'\nimport {LoginScreen} from 'screens/login'\nimport {ProtectedRoute} from 'components/protected-route'\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ConfigProvider>\n        <Router>\n          <Switch>\n            <Route path={'/about'}>\n              <AboutScreen />\n            </Route>\n            <Route path={'/login'}>\n              <LoginScreen />\n            </Route>\n            <ProtectedRoute path={'/admin'}>\n              <ApiProvider>\n                <AdminScreen />\n              </ApiProvider>\n            </ProtectedRoute>\n            <Route path={'/'}>\n              <LandingScreen />\n            </Route>\n          </Switch>\n        </Router>\n      </ConfigProvider>\n    </AuthProvider>\n  )\n}\n\nexport default App\n","const firebaseConfig = {\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  authDomain: 'golf-sidekick.firebaseapp.com',\n  databaseURL: 'https://golf-sidekick.firebaseio.com',\n  projectId: 'golf-sidekick',\n  storageBucket: 'golf-sidekick.appspot.com',\n  messagingSenderId: '15461388252',\n  appId: '1:15461388252:web:58e9212e603b8ddff38919',\n  measurementId: 'G-7K518K72FS'\n}\n\nexport default firebaseConfig\n","import firebaseConfig from './firebaseConfig'\nimport {initializeApp} from 'firebase/app'\n\nconst app = initializeApp(firebaseConfig)\n\nconst registerFirebaseApp = () => app\n\nexport default registerFirebaseApp\n","import {ReportHandler} from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import './index.css'\n\nimport App from './App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport {registerFirebaseApp} from 'services/firebase'\nimport reportWebVitals from './reportWebVitals'\n\nregisterFirebaseApp()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}