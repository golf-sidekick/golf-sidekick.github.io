{"version":3,"sources":["screens/about/AboutScreen.tsx","state/utils/isBusy.ts","state/utils/formatAddress.ts","state/utils/useCountryDropdownSource.ts","state/utils/useTimezoneDropdownSource.ts","state/courses/COURSE_FRAGMENT.ts","state/courses/useCourseSearch.ts","state/courses/useGetCourse.ts","state/courses/useCreateCourse.ts","state/courses/useUpdateCourse.ts","components/forms/getFormData.ts","components/forms/isSet.ts","components/forms/validation/isValid.ts","components/forms/useForm.ts","services/api/generated.tsx","components/forms/text-field/TextField.tsx","components/forms/place-field/getPlace.ts","components/forms/place-field/PlaceField.tsx","components/forms/text-area-field/TextAreaField.tsx","components/forms/form-section/FormSection.tsx","components/forms/form/Form.tsx","components/forms/dropdown-field/DEFAULT_FILTER.ts","components/forms/dropdown-field/DropdownField.tsx","components/forms/validation/isEmailAddress.ts","components/forms/validation/isNumber.ts","components/forms/validation/notNullOrEmpty.ts","components/forms/validation/isFormValid.ts","components/forms/converters/numberConverter.ts","screens/add-course/AddCourseScreen.tsx","components/body/Body.tsx","screens/edit-course/EditCourseScreen.tsx","services/maps/MapsProvider.tsx","services/logging/info.ts","services/logging/error.ts","services/auth/AuthContext.ts","services/auth/AuthProvider.tsx","services/auth/useAuthContext.ts","components/protected-route/ProtectedRoute.tsx","services/config/ConfigProvider.tsx","services/config/useConfig.ts","state/media/useGetImageSource.ts","state/IMAGE_REF_FRAGMENT.ts","state/players/SELF_FRAGMENT.ts","state/players/useGetSelf.ts","screens/admin/AdminScreen.tsx","services/api/utils/paginationPolicy.ts","services/api/utils/replacePolicy.ts","services/api/utils/mergePolicy.ts","services/api/utils/paginatedGamesPolicy.ts","services/api/createClient.ts","services/api/useApiVersion.ts","services/api/ApiProvider.tsx","services/api/MIN_SUPPORTED_API_VERSION.ts","components/screen-shot/ScreenShot.tsx","components/top-menu/TopMenu.tsx","assets/apple.svg","assets/google.png","assets/screenshot-1.png","screens/landing/LandingScreen.tsx","screens/login/LoginScreen.tsx","App.tsx","services/firebase/firebaseConfig.ts","services/firebase/registerFirebaseApp.ts","reportWebVitals.ts","index.tsx"],"names":["AboutScreen","isBusy","currentStatus","busy","NetworkStatus","loading","refetch","indexOf","getCountryName","memoize","countryCode","countries","filter","c","iso","map","name","formatAddress","street","streetNumber","suburb","province","maxLength","truncate","term","join","length","useCountryDropdownSource","useMemo","country","key","value","timezones","useTimezoneDropdownSource","timezone","COURSE_FRAGMENT","gql","SEARCH_COURSES","defaultArgs","limit","useCourseSearch","args","useQuery","notifyOnNetworkStatusChange","variables","fetchPolicy","data","networkStatus","fetchMore","courses","continuationToken","GET_COURSE","useGetCourse","courseId","course","CREATE_COURSE","useCreateCourse","useMutation","execute","input","a","result","createCourse","id","useUpdateCourse","updateCourse","getFormData","form","Object","keys","reduce","fieldName","field","converter","toData","isValid","validators","validator","createForm","fields","toField","touched","createField","useForm","onChange","useState","state","setState","setValue","useCallback","touch","Array","isArray","aggregate","setValues","values","assign","entries","previousValue","clear","defaultValue","useEffect","CommunicationMethod","GamePlayerStatus","GameType","Holes","Permission","PlayerType","ReactionType","TextField","label","containerClassName","props","hasError","className","classNames","type","e","target","DIALING_CODE_REGEX","findAddressComponent","find","getTelephoneNumber","international_phone_number","replace","getDialingCode","first","match","getCountryCode","shortName","getPostCode","getProvince","longName","getStreet","getStreetNumber","getSuburb","getCity","getPlace","addressComponents","address_components","item","types","short_name","long_name","getAddressComponents","telephoneNumber","dialingCode","postCode","city","lat","geometry","location","lon","lng","website","description","PlacesField","onPlaceChanged","setTerm","autoComplete","useRef","onSetAutoComplete","current","onSelect","onLoad","FormSection","children","title","index","Form","DEFAULT_FILTER","includes","DropdownField","source","open","setOpen","hasFocus","setHasFocus","select","items","onFocus","onBlur","onMouseOver","onMouseOut","onClick","isEmailAddressRegex","isEmailAddress","test","toLowerCase","isNumber","undefined","isNaN","notNullOrEmpty","isFormValid","fieldNames","affectedFields","numberConverter","toString","AddCourseScreen","history","useHistory","emailAddress","timezoneId","submit","number","physicalAddress","coordinates","place","PlaceField","placeholder","TextAreaField","goBack","Body","style","EditCourseScreen","useParams","MapsProvider","useJsApiLoader","googleMapsApiKey","process","libraries","isLoaded","memo","info","message","console","log","error","React","createContext","authenticating","authenticated","logout","Promise","resolve","getToken","AuthProvider","auth","getAuth","userRef","tryLogout","signOut","handleLogin","user","handleLogout","onAuthStateChanged","AuthContext","Provider","getIdToken","useAuthContext","useContext","ProtectedRoute","to","ConfigProvider","ready","setReady","remoteConfig","getRemoteConfig","fetchAndActivate","init","useConfig","getString","getNumber","getBoolean","getValue","useGetImageSource","imageRef","width","config","setSource","baseUrl","token","ref","load","IMAGE_REF_FRAGMENT","GET_SELF","SELF_FRAGMENT","useGetSelf","NavBar","self","profileImageRef","tabIndex","src","alt","icon","faSignOutAlt","CourseList","push","faPlus","DashboardScreen","AdminScreen","path","policy","keyArgs","read","cachedItem","merge","prev","incoming","stableArgs","omit","isEqual","uniqBy","_","existing","createClient","url","httpLink","BatchHttpLink","uri","authLink","setContext","headers","authorization","errorLink","onError","graphQLErrors","networkError","forEach","ApolloClient","link","concat","cache","InMemoryCache","typePolicies","PostCommentOfPlayer","replies","paginationPolicy","reactions","replacePolicy","PostOfPlayer","comments","Player","playerTypes","preferredGameTypes","preferredPlayerTypes","preferredCourses","communities","gameInvitations","games","paginatedGamesPolicy","posts","PostCommentOfCommunity","PostOfCommunity","Community","admins","Game","players","invitations","PaginatedResultsOfGame","mergePolicy","Course","PhysicalAddress","keyFields","Query","chat","feed","agenda","useApiVersion","version","setVersion","fetch","then","response","json","err","ApiProvider","authContext","clientRef","currentVersion","clearStore","ApolloProvider","client","ScreenShot","TopMenu","href","Section","Break","inverse","viewBox","points","LandingScreen","google","apple","screenshot1","provider","GoogleAuthProvider","LoginScreen","setBusy","getRedirectResult","catch","signInWithRedirect","faGoogle","App","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","registerFirebaseApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAMeA,EAJK,WAClB,OAAO,yC,wBCMMC,EAPA,SACbC,GAEI,IADJC,EACG,uDADqB,CAACC,IAAcC,QAASD,IAAcE,SAE9D,OAAwC,IAAjCH,EAAKI,QAAQL,I,gBCDhBM,EAAiBC,mBACrB,SAACC,GAAD,OACEC,YAAUC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,MAAQJ,KAAaK,KAAI,SAAAF,GAAC,OAAIA,EAAEG,QAAM,MAiBnDC,EAdO,SAAC,GAGjB,IAFHC,EAEE,EAFFA,OAAQC,EAEN,EAFMA,aAAcC,EAEpB,EAFoBA,OAAQC,EAE5B,EAF4BA,SAAUX,EAEtC,EAFsCA,YACzCY,EACG,uDADiB,GAEpB,OAAOC,mBACL,CAACJ,EAAcD,EAAQE,EAAQC,EAAUb,EAAeE,IACrDE,QAAO,SAAAY,GAAI,OAAIA,KACfC,KAAK,MACR,CACEC,OAAQJ,KCHCK,EAbkB,WAU/B,OATeC,mBACb,kBACEjB,YAAUI,KAAI,SAAAc,GAAO,MAAK,CACxBC,IAAKD,EAAQf,IACbiB,MAAOF,EAAQb,WAEnB,KCREgB,EAAY,CAChB,eACA,iBACA,oBACA,oBACA,mBACA,eACA,iBACA,oBACA,eACA,oBACA,iBACA,qBACA,kBACA,gBACA,kBACA,oBACA,sBACA,kBACA,mBACA,qBACA,oBACA,mBACA,gBACA,iBACA,uBACA,kBACA,sBACA,kBACA,sBACA,kBACA,iBACA,mBACA,wBACA,iBACA,qBACA,4BACA,oBACA,iBACA,uBACA,sBACA,iBACA,sBACA,kBACA,sBACA,iCACA,8BACA,uBACA,8BACA,iBACA,oBACA,oBACA,yBACA,mBACA,kBACA,sBACA,wBACA,mBACA,oBACA,qBACA,iBACA,oBACA,qBACA,mBACA,iBACA,iBACA,0BACA,kBACA,8BACA,kBACA,kBACA,sBACA,kBACA,sBACA,mBACA,yBACA,kBACA,iBACA,iBACA,iBACA,0BACA,8BACA,6BACA,4BACA,+BACA,mBACA,qBACA,wBACA,iBACA,oBACA,eACA,sBACA,iBACA,iBACA,uBACA,oBACA,qBACA,kBACA,mBACA,wBACA,mBACA,sBACA,wBACA,kBACA,wBACA,qBACA,gBACA,mBACA,kBACA,qBACA,oBACA,qBACA,mBACA,wBACA,gBACA,qBACA,mBACA,uBACA,kBACA,kBACA,kBACA,kBACA,mBACA,oBACA,oBACA,iBACA,mBACA,iBACA,mBACA,kBACA,mBACA,4BACA,4BACA,iCACA,6BACA,6BACA,8BACA,0BACA,0BACA,4BACA,iCACA,4BACA,gBACA,mBACA,oBACA,oBACA,iBACA,gBACA,iBACA,oBACA,mBACA,kBACA,eACA,oBACA,uBACA,qBACA,mBACA,qBACA,qBACA,6BACA,kBACA,yBACA,kBACA,sBACA,uBACA,MACA,gBACA,kBACA,mBACA,cACA,kBACA,gBACA,gBACA,qBACA,kBACA,qBACA,oBACA,eACA,iBACA,gBACA,qBACA,qBACA,uBACA,gBACA,iBACA,kBACA,eACA,mBACA,kBACA,iBACA,gBACA,gBACA,eACA,eACA,mBACA,iBACA,kBACA,eACA,gBACA,gBACA,oBACA,gBACA,mBACA,eACA,iBACA,sBACA,gBACA,gBACA,cACA,mBACA,gBACA,oBACA,iBACA,mBACA,oBACA,gBACA,gBACA,kBACA,kBACA,kBACA,gBACA,eACA,oBACA,cACA,kBACA,mBACA,gBACA,gBACA,eACA,oBACA,gBACA,kBACA,gBACA,kBACA,qBACA,gBACA,oBACA,gBACA,oBACA,kBACA,kBACA,kBACA,gBACA,gBACA,kBACA,gBACA,mBACA,gBACA,kBACA,oBACA,cACA,YACA,cACA,mBACA,mBACA,eACA,gBACA,kBACA,aACA,eACA,gBACA,cACA,qBACA,iBACA,cACA,cACA,iBACA,kBACA,kBACA,iBACA,eACA,oBACA,iBACA,iBACA,gBACA,sBACA,iBACA,eACA,aACA,cACA,YACA,cACA,eACA,kBACA,iBACA,mBACA,qBACA,gBACA,iBACA,uBACA,gBACA,iBACA,sBACA,kBACA,eACA,eACA,mBACA,oBACA,gBACA,mBACA,cACA,eACA,YACA,mBACA,iBACA,mBACA,eACA,aACA,cACA,mBACA,iBACA,gBACA,cACA,aACA,iBACA,mBACA,kBACA,oBACA,eACA,gBACA,gBACA,gBACA,iBACA,aACA,cACA,YACA,cACA,qBACA,eACA,eACA,iBACA,aACA,eACA,cACA,gBACA,cACA,gBACA,eACA,YACA,oBACA,eACA,cACA,mBACA,mBACA,eACA,aACA,YACA,kBACA,eACA,iBACA,mBACA,oBACA,mBACA,mBACA,eACA,iBACA,kBACA,cACA,gBACA,gBACA,aACA,kBACA,iBACA,eACA,oBACA,eACA,cACA,iBACA,cACA,mBACA,kBACA,YACA,gBACA,aACA,aACA,gBACA,iBACA,eACA,aACA,gBACA,wBACA,qBACA,mBACA,mBACA,sBACA,qBACA,qBACA,mBACA,iBACA,eACA,gBACA,4BACA,uBACA,uBACA,gBACA,mBACA,sBACA,mBACA,qBACA,uBACA,iBACA,eACA,iBACA,kBACA,kBACA,gBACA,sBACA,gBACA,cACA,eACA,iBACA,oBACA,iBACA,gBACA,mBACA,qBACA,iBACA,mBACA,eACA,iBACA,kBACA,eACA,oBACA,kBACA,oBACA,sBAWaC,EARmB,WAKhC,OAJeL,mBACb,kBAAMI,EAAUjB,KAAI,SAAAmB,GAAQ,MAAK,CAACJ,IAAKI,EAAUH,MAAOG,QACxD,K,yDC/aSC,EAAkBC,YAAH,ieCGtBC,EAAiBD,YAAH,6RAShBD,GAGEG,EAAc,CAClBC,MAAO,IAkCMC,EA/BS,SAACC,GAA2C,IAAD,MACfC,YAE/CL,EAAgB,CACjBM,6BAA6B,EAC7BC,UAAU,2BACLN,GACAG,GAELI,YAAa,sBARRC,EAD0D,EAC1DA,KAAMC,EADoD,EACpDA,cAAezC,EADqC,EACrCA,QAAS0C,EAD4B,EAC5BA,UAsBrC,MAAO,CACLF,KAAI,iBAAEA,QAAF,IAAEA,GAAF,UAAEA,EAAMG,eAAR,aAAE,EAAeH,YAAjB,QAAyB,GAC7BC,gBACAzC,UACA0C,UAf2B,WAAO,IAAD,KAE7B,OAACF,QAAD,IAACA,GAAD,UAACA,EAAMG,eAAP,aAAC,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","file":"static/js/main.95b962d6.chunk.js","sourcesContent":["import React from 'react'\n\nconst AboutScreen = () => {\n  return <div>About</div>\n}\n\nexport default AboutScreen\n","import {NetworkStatus} from '@apollo/client'\n\nconst isBusy = (\n  currentStatus: NetworkStatus,\n  busy: NetworkStatus[] = [NetworkStatus.loading, NetworkStatus.refetch]\n) => {\n  return busy.indexOf(currentStatus) !== -1\n}\n\nexport default isBusy\n","import {memoize, truncate} from 'lodash'\n\nimport {PhysicalAddress} from 'services/api'\nimport {countries} from 'typed-countries'\n\nconst getCountryName = memoize(\n  (countryCode: string) =>\n    countries.filter(c => c.iso === countryCode).map(c => c.name)[0]\n)\n\nconst formatAddress = (\n  {street, streetNumber, suburb, province, countryCode}: PhysicalAddress,\n  maxLength: number = 60\n) => {\n  return truncate(\n    [streetNumber, street, suburb, province, getCountryName(countryCode)]\n      .filter(term => term)\n      .join(', '),\n    {\n      length: maxLength\n    }\n  )\n}\n\nexport default formatAddress\n","import {countries} from 'typed-countries'\nimport {useMemo} from 'react'\n\nconst useCountryDropdownSource = () => {\n  const source = useMemo(\n    () =>\n      countries.map(country => ({\n        key: country.iso,\n        value: country.name\n      })),\n    []\n  )\n\n  return source\n}\n\nexport default useCountryDropdownSource\n","import {useMemo} from 'react'\n\nconst timezones = [\n  'Pacific/Niue',\n  'Pacific/Midway',\n  'Pacific/Pago_Pago',\n  'Pacific/Rarotonga',\n  'Pacific/Honolulu',\n  'America/Adak',\n  'Pacific/Tahiti',\n  'Pacific/Marquesas',\n  'America/Nome',\n  'America/Anchorage',\n  'America/Juneau',\n  'America/Metlakatla',\n  'America/Yakutat',\n  'America/Sitka',\n  'Pacific/Gambier',\n  'America/Vancouver',\n  'America/Los_Angeles',\n  'America/Tijuana',\n  'Pacific/Pitcairn',\n  'America/Hermosillo',\n  'America/Chihuahua',\n  'America/Mazatlan',\n  'America/Boise',\n  'America/Denver',\n  'America/Dawson_Creek',\n  'America/Phoenix',\n  'America/Fort_Nelson',\n  'America/Ojinaga',\n  'America/Yellowknife',\n  'America/Creston',\n  'America/Inuvik',\n  'America/Edmonton',\n  'America/Cambridge_Bay',\n  'America/Dawson',\n  'America/Whitehorse',\n  'America/Indiana/Tell_City',\n  'America/Guatemala',\n  'America/Regina',\n  'America/Indiana/Knox',\n  'America/Mexico_City',\n  'America/Belize',\n  'America/El_Salvador',\n  'America/Chicago',\n  'America/Tegucigalpa',\n  'America/North_Dakota/New_Salem',\n  'America/North_Dakota/Center',\n  'America/Rankin_Inlet',\n  'America/North_Dakota/Beulah',\n  'America/Merida',\n  'America/Monterrey',\n  'America/Matamoros',\n  'America/Bahia_Banderas',\n  'America/Winnipeg',\n  'America/Managua',\n  'America/Rainy_River',\n  'America/Swift_Current',\n  'America/Resolute',\n  'America/Menominee',\n  'America/Costa_Rica',\n  'Pacific/Easter',\n  'Pacific/Galapagos',\n  'America/Rio_Branco',\n  'America/Eirunepe',\n  'America/Bogota',\n  'America/Havana',\n  'America/Indiana/Winamac',\n  'America/Detroit',\n  'America/Kentucky/Louisville',\n  'America/Toronto',\n  'America/Nipigon',\n  'America/Thunder_Bay',\n  'America/Iqaluit',\n  'America/Pangnirtung',\n  'America/Atikokan',\n  'America/Port-au-Prince',\n  'America/Jamaica',\n  'America/Panama',\n  'America/Cayman',\n  'America/Cancun',\n  'America/Indiana/Marengo',\n  'America/Kentucky/Monticello',\n  'America/Indiana/Petersburg',\n  'America/Indiana/Vincennes',\n  'America/Indiana/Indianapolis',\n  'America/New_York',\n  'America/Grand_Turk',\n  'America/Indiana/Vevay',\n  'America/Nassau',\n  'America/Guayaquil',\n  'America/Lima',\n  'America/Porto_Velho',\n  'America/Manaus',\n  'America/Cuiaba',\n  'America/Campo_Grande',\n  'America/Boa_Vista',\n  'America/Montserrat',\n  'America/Marigot',\n  'America/St_Lucia',\n  'America/Santo_Domingo',\n  'America/St_Kitts',\n  'America/Puerto_Rico',\n  'America/Port_of_Spain',\n  'America/Curacao',\n  'America/Lower_Princes',\n  'America/Guadeloupe',\n  'America/Thule',\n  'America/Dominica',\n  'America/Grenada',\n  'America/Martinique',\n  'America/Goose_Bay',\n  'America/Kralendijk',\n  'Atlantic/Bermuda',\n  'America/St_Barthelemy',\n  'America/Aruba',\n  'America/St_Vincent',\n  'America/Barbados',\n  'America/Blanc-Sablon',\n  'America/Antigua',\n  'America/Tortola',\n  'America/Moncton',\n  'America/Halifax',\n  'America/Anguilla',\n  'America/Glace_Bay',\n  'America/St_Thomas',\n  'America/La_Paz',\n  'America/Santiago',\n  'America/Guyana',\n  'America/Asuncion',\n  'America/Caracas',\n  'America/St_Johns',\n  'America/Argentina/Ushuaia',\n  'America/Argentina/Mendoza',\n  'America/Argentina/Rio_Gallegos',\n  'America/Argentina/La_Rioja',\n  'America/Argentina/San_Juan',\n  'America/Argentina/Catamarca',\n  'America/Argentina/Salta',\n  'America/Argentina/Jujuy',\n  'America/Argentina/Cordoba',\n  'America/Argentina/Buenos_Aires',\n  'America/Argentina/Tucuman',\n  'America/Belem',\n  'America/Santarem',\n  'America/Sao_Paulo',\n  'America/Fortaleza',\n  'America/Recife',\n  'America/Bahia',\n  'America/Maceio',\n  'America/Araguaina',\n  'Atlantic/Stanley',\n  'America/Cayenne',\n  'America/Nuuk',\n  'Antarctica/Palmer',\n  'America/Punta_Arenas',\n  'Antarctica/Rothera',\n  'America/Miquelon',\n  'America/Paramaribo',\n  'America/Montevideo',\n  'America/Argentina/San_Luis',\n  'America/Noronha',\n  'Atlantic/South_Georgia',\n  'Atlantic/Azores',\n  'Atlantic/Cape_Verde',\n  'America/Scoresbysund',\n  'UTC',\n  'Africa/Bamako',\n  'Africa/Monrovia',\n  'Antarctica/Troll',\n  'Africa/Lome',\n  'Africa/Freetown',\n  'Europe/London',\n  'Europe/Jersey',\n  'Atlantic/Reykjavik',\n  'Africa/Sao_Tome',\n  'Europe/Isle_of_Man',\n  'Africa/Nouakchott',\n  'Africa/Dakar',\n  'Africa/Abidjan',\n  'Africa/Bissau',\n  'Africa/Ouagadougou',\n  'Atlantic/St_Helena',\n  'America/Danmarkshavn',\n  'Africa/Banjul',\n  'Africa/Conakry',\n  'Europe/Guernsey',\n  'Africa/Accra',\n  'Atlantic/Madeira',\n  'Atlantic/Canary',\n  'Atlantic/Faroe',\n  'Europe/Lisbon',\n  'Europe/Prague',\n  'Europe/Paris',\n  'Africa/Tunis',\n  'Europe/Gibraltar',\n  'Europe/Vatican',\n  'Europe/Sarajevo',\n  'Europe/Vaduz',\n  'Europe/Tirane',\n  'Europe/Zurich',\n  'Europe/Luxembourg',\n  'Europe/Monaco',\n  'Europe/Podgorica',\n  'Europe/Malta',\n  'Europe/Andorra',\n  'Arctic/Longyearbyen',\n  'Europe/Skopje',\n  'Europe/Berlin',\n  'Europe/Oslo',\n  'Europe/Amsterdam',\n  'Europe/Warsaw',\n  'Europe/Copenhagen',\n  'Africa/Algiers',\n  'Europe/Stockholm',\n  'Europe/San_Marino',\n  'Europe/Zagreb',\n  'Europe/Vienna',\n  'Europe/Budapest',\n  'Europe/Belgrade',\n  'Europe/Brussels',\n  'Europe/Madrid',\n  'Africa/Ceuta',\n  'Europe/Bratislava',\n  'Europe/Rome',\n  'Europe/Busingen',\n  'Europe/Ljubljana',\n  'Europe/Dublin',\n  'Africa/Malabo',\n  'Africa/Lagos',\n  'Africa/Porto-Novo',\n  'Africa/Niamey',\n  'Africa/Kinshasa',\n  'Africa/Luanda',\n  'Africa/Ndjamena',\n  'Africa/Brazzaville',\n  'Africa/Douala',\n  'Africa/Libreville',\n  'Africa/Bangui',\n  'Africa/Casablanca',\n  'Africa/El_Aaiun',\n  'Africa/Blantyre',\n  'Africa/Windhoek',\n  'Africa/Kigali',\n  'Africa/Maputo',\n  'Africa/Khartoum',\n  'Africa/Harare',\n  'Africa/Bujumbura',\n  'Africa/Lusaka',\n  'Africa/Gaborone',\n  'Africa/Lubumbashi',\n  'Africa/Juba',\n  'Asia/Gaza',\n  'Asia/Hebron',\n  'Europe/Bucharest',\n  'Europe/Mariehamn',\n  'Europe/Sofia',\n  'Europe/Athens',\n  'Europe/Helsinki',\n  'Asia/Amman',\n  'Africa/Cairo',\n  'Asia/Damascus',\n  'Asia/Beirut',\n  'Europe/Kaliningrad',\n  'Europe/Vilnius',\n  'Europe/Kiev',\n  'Europe/Riga',\n  'Africa/Tripoli',\n  'Europe/Uzhgorod',\n  'Europe/Chisinau',\n  'Europe/Tallinn',\n  'Asia/Nicosia',\n  'Europe/Zaporozhye',\n  'Asia/Famagusta',\n  'Asia/Jerusalem',\n  'Africa/Maseru',\n  'Africa/Johannesburg',\n  'Africa/Mbabane',\n  'Asia/Baghdad',\n  'Asia/Qatar',\n  'Asia/Kuwait',\n  'Asia/Aden',\n  'Asia/Riyadh',\n  'Asia/Bahrain',\n  'Africa/Djibouti',\n  'Africa/Kampala',\n  'Africa/Mogadishu',\n  'Africa/Addis_Ababa',\n  'Africa/Asmara',\n  'Africa/Nairobi',\n  'Africa/Dar_es_Salaam',\n  'Indian/Comoro',\n  'Indian/Mayotte',\n  'Indian/Antananarivo',\n  'Europe/Istanbul',\n  'Europe/Kirov',\n  'Europe/Minsk',\n  'Europe/Volgograd',\n  'Europe/Simferopol',\n  'Europe/Moscow',\n  'Antarctica/Syowa',\n  'Asia/Tehran',\n  'Asia/Yerevan',\n  'Asia/Baku',\n  'Europe/Ulyanovsk',\n  'Europe/Saratov',\n  'Europe/Astrakhan',\n  'Asia/Tbilisi',\n  'Asia/Dubai',\n  'Asia/Muscat',\n  'Indian/Mauritius',\n  'Indian/Reunion',\n  'Europe/Samara',\n  'Indian/Mahe',\n  'Asia/Kabul',\n  'Asia/Qyzylorda',\n  'Indian/Kerguelen',\n  'Indian/Maldives',\n  'Antarctica/Mawson',\n  'Asia/Karachi',\n  'Asia/Dushanbe',\n  'Asia/Ashgabat',\n  'Asia/Tashkent',\n  'Asia/Samarkand',\n  'Asia/Aqtau',\n  'Asia/Atyrau',\n  'Asia/Oral',\n  'Asia/Aqtobe',\n  'Asia/Yekaterinburg',\n  'Asia/Colombo',\n  'Asia/Kolkata',\n  'Asia/Kathmandu',\n  'Asia/Dhaka',\n  'Asia/Thimphu',\n  'Asia/Almaty',\n  'Asia/Qostanay',\n  'Asia/Urumqi',\n  'Indian/Chagos',\n  'Asia/Bishkek',\n  'Asia/Omsk',\n  'Antarctica/Vostok',\n  'Indian/Cocos',\n  'Asia/Yangon',\n  'Indian/Christmas',\n  'Antarctica/Davis',\n  'Asia/Barnaul',\n  'Asia/Tomsk',\n  'Asia/Hovd',\n  'Asia/Phnom_Penh',\n  'Asia/Bangkok',\n  'Asia/Vientiane',\n  'Asia/Ho_Chi_Minh',\n  'Asia/Novokuznetsk',\n  'Asia/Krasnoyarsk',\n  'Asia/Novosibirsk',\n  'Asia/Jakarta',\n  'Asia/Pontianak',\n  'Australia/Perth',\n  'Asia/Brunei',\n  'Asia/Makassar',\n  'Asia/Shanghai',\n  'Asia/Macau',\n  'Asia/Choibalsan',\n  'Asia/Hong_Kong',\n  'Asia/Irkutsk',\n  'Asia/Kuala_Lumpur',\n  'Asia/Kuching',\n  'Asia/Manila',\n  'Asia/Singapore',\n  'Asia/Taipei',\n  'Asia/Ulaanbaatar',\n  'Australia/Eucla',\n  'Asia/Dili',\n  'Asia/Jayapura',\n  'Asia/Tokyo',\n  'Asia/Seoul',\n  'Pacific/Palau',\n  'Asia/Pyongyang',\n  'Asia/Yakutsk',\n  'Asia/Chita',\n  'Asia/Khandyga',\n  'Australia/Broken_Hill',\n  'Australia/Adelaide',\n  'Australia/Darwin',\n  'Australia/Hobart',\n  'Australia/Melbourne',\n  'Australia/Brisbane',\n  'Australia/Lindeman',\n  'Australia/Sydney',\n  'Pacific/Saipan',\n  'Pacific/Guam',\n  'Pacific/Chuuk',\n  'Antarctica/DumontDUrville',\n  'Antarctica/Macquarie',\n  'Pacific/Port_Moresby',\n  'Asia/Ust-Nera',\n  'Asia/Vladivostok',\n  'Australia/Lord_Howe',\n  'Antarctica/Casey',\n  'Asia/Srednekolymsk',\n  'Pacific/Bougainville',\n  'Pacific/Kosrae',\n  'Asia/Magadan',\n  'Pacific/Noumea',\n  'Pacific/Norfolk',\n  'Pacific/Pohnpei',\n  'Asia/Sakhalin',\n  'Pacific/Guadalcanal',\n  'Pacific/Efate',\n  'Asia/Anadyr',\n  'Pacific/Fiji',\n  'Pacific/Tarawa',\n  'Pacific/Kwajalein',\n  'Pacific/Majuro',\n  'Pacific/Nauru',\n  'Pacific/Auckland',\n  'Antarctica/McMurdo',\n  'Asia/Kamchatka',\n  'Pacific/Funafuti',\n  'Pacific/Wake',\n  'Pacific/Wallis',\n  'Pacific/Chatham',\n  'Pacific/Apia',\n  'Pacific/Enderbury',\n  'Pacific/Fakaofo',\n  'Pacific/Tongatapu',\n  'Pacific/Kiritimati'\n]\n\nconst useTimezoneDropdownSource = () => {\n  const source = useMemo(\n    () => timezones.map(timezone => ({key: timezone, value: timezone})),\n    []\n  )\n  return source\n}\n\nexport default useTimezoneDropdownSource\n","import {gql} from '@apollo/client'\n\nexport const COURSE_FRAGMENT = gql`\n  fragment CourseFragment on Course {\n    __typename\n    id\n    name\n    description\n    emailAddress\n    telephoneNumber {\n      number\n      dialingCode\n    }\n    timezone {\n      id\n      name\n      utcOffset\n    }\n    physicalAddress {\n      __typename\n      streetNumber\n      street\n      suburb\n      city\n      province\n      countryCode\n      postCode\n      coordinates {\n        lat\n        lon\n      }\n    }\n  }\n`\n","import {Maybe, PaginatedResultsOfCourse} from 'services/api'\nimport {gql, useQuery} from '@apollo/client'\n\nimport {COURSE_FRAGMENT} from './COURSE_FRAGMENT'\n\nconst SEARCH_COURSES = gql`\n  query searchCourses($limit: Int!, $continuationToken: String, $term: String) {\n    courses(limit: $limit, continuationToken: $continuationToken, term: $term) {\n      data {\n        ...CourseFragment\n      }\n      continuationToken\n    }\n  }\n  ${COURSE_FRAGMENT}\n`\n\nconst defaultArgs = {\n  limit: 50\n}\n\nconst useCourseSearch = (args: {limit?: number; term?: string}) => {\n  const {data, networkStatus, refetch, fetchMore} = useQuery<{\n    courses: Maybe<PaginatedResultsOfCourse>\n  }>(SEARCH_COURSES, {\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      ...defaultArgs,\n      ...args\n    },\n    fetchPolicy: 'cache-and-network'\n  })\n\n  const fetchMoreIfMoreExist = () => {\n    // No continuation token indicates no more results to load\n    if (!data?.courses?.continuationToken) return\n\n    fetchMore({\n      variables: {\n        continuationToken: data?.courses?.continuationToken\n      }\n    })\n  }\n\n  return {\n    data: data?.courses?.data ?? [],\n    networkStatus,\n    refetch,\n    fetchMore: fetchMoreIfMoreExist\n  }\n}\n\nexport default useCourseSearch\n","import {Course, Maybe} from 'services/api'\nimport {NetworkStatus, gql, useQuery} from '@apollo/client'\n\nimport {COURSE_FRAGMENT} from './COURSE_FRAGMENT'\n\nconst GET_COURSE = gql`\n  query GetCourse($courseId: Uuid!) {\n    course(courseId: $courseId) {\n      ...CourseFragment\n    }\n  }\n  ${COURSE_FRAGMENT}\n`\n\nconst useGetCourse = (courseId: string) => {\n  const {data, networkStatus, refetch} = useQuery<{\n    course: Maybe<Course>\n  }>(GET_COURSE, {\n    variables: {\n      courseId\n    }\n  })\n\n  const loading = networkStatus === NetworkStatus.loading\n  return {loading, data: data?.course, networkStatus, refetch}\n}\n\nexport default useGetCourse\n","import {Course, CreateCourseInput, MutationCreateCourseArgs} from 'services/api'\nimport {gql, useMutation} from '@apollo/client'\n\nimport {COURSE_FRAGMENT} from './COURSE_FRAGMENT'\n\nconst CREATE_COURSE = gql`\n  mutation CreateCourse($input: CreateCourseInput!) {\n    createCourse(input: $input) {\n      ...CourseFragment\n    }\n  }\n  ${COURSE_FRAGMENT}\n`\nconst useCreateCourse = (): [\n  (input: CreateCourseInput) => Promise<string>,\n  {loading: boolean}\n] => {\n  const [execute, {loading}] = useMutation<\n    {\n      createCourse: Course\n    },\n    MutationCreateCourseArgs\n  >(CREATE_COURSE)\n\n  const createCourse = async (input: CreateCourseInput) => {\n    const result = await execute({\n      variables: {\n        input\n      }\n    })\n    return result.data?.createCourse.id\n  }\n\n  return [createCourse, {loading}]\n}\n\nexport default useCreateCourse\n","import {Course, MutationUpdateCourseArgs, UpdateCourseInput} from 'services/api'\nimport {gql, useMutation} from '@apollo/client'\n\nimport {COURSE_FRAGMENT} from './COURSE_FRAGMENT'\n\nconst CREATE_COURSE = gql`\n  mutation UpdateCourse($input: UpdateCourseInput!) {\n    updateCourse(input: $input) {\n      ...CourseFragment\n    }\n  }\n  ${COURSE_FRAGMENT}\n`\nconst useUpdateCourse = (): [\n  (input: UpdateCourseInput) => Promise<string>,\n  {loading: boolean}\n] => {\n  const [execute, {loading}] = useMutation<\n    {\n      updateCourse: Course\n    },\n    MutationUpdateCourseArgs\n  >(CREATE_COURSE)\n\n  const updateCourse = async (input: UpdateCourseInput) => {\n    const result = await execute({\n      variables: {\n        input\n      }\n    })\n    return result.data?.updateCourse.id\n  }\n\n  return [updateCourse, {loading}]\n}\n\nexport default useUpdateCourse\n","import {Dictionary} from './Dictionary'\nimport Form from './FormDefinition'\nimport FormField from './FormField'\n\nexport default function getFormData<T>(\n  form: Form<Dictionary<FormField<any>>>\n): T {\n  return Object.keys(form[0]).reduce((data, fieldName) => {\n    const field = form[0][fieldName]\n    return {\n      ...data,\n      [fieldName]: field.converter\n        ? field.converter.toData(field.value)\n        : field.value\n    }\n  }, {}) as T\n}\n","import {FormDefinition} from '.'\n\nconst isSet = (form: FormDefinition<any>, fieldName: string) => {\n  const [state] = form\n  const field = state[fieldName]\n  return !!field.value\n}\n\nexport default isSet\n","import FormFieldValidator from '../FormFieldValidator'\n\nconst isValid = (\n  value: any,\n  validators: FormFieldValidator<any>[] | undefined\n): boolean => {\n  if (!validators) {\n    return true\n  }\n\n  return (\n    validators.filter(validator => (validator ? !validator(value) : false))\n      .length === 0\n  )\n}\n\nexport default isValid\n","import {useCallback, useEffect, useState} from 'react'\n\nimport {Dictionary} from './Dictionary'\nimport FormDefinition from './FormDefinition'\nimport FormField from './FormField'\nimport isValid from './validation/isValid'\n\nconst createForm = <TFields extends Dictionary<FormField<any>>>(\n  fields: TFields\n): TFields => {\n  return Object.keys(fields).reduce((form, key) => {\n    const field = fields[key]\n    return {\n      ...form,\n      [key]: {\n        isValid: isValid(field.value, field.validators),\n        value: field.converter\n          ? field.converter.toField(field.value)\n          : field.value,\n        touched: false,\n        converter: field.converter\n      }\n    }\n  }, {}) as TFields\n}\n\nconst createField = (field: FormField<any>, value: any, touched: boolean) => {\n  return {\n    ...field,\n    isValid: isValid(value, field.validators),\n    value: value,\n    touched: touched\n  }\n}\n\nexport default function useForm<TFields extends Dictionary<FormField<any>>>(\n  fields: TFields,\n  onChange?: (form: FormDefinition<TFields>) => void\n): FormDefinition<TFields> {\n  const [state, setState] = useState<TFields>(createForm(fields))\n\n  const setValue = useCallback(\n    (key: string, value: any) => {\n      const field = fields[key]\n      setState({\n        ...state,\n        [key]: createField(field, value, true)\n      })\n    },\n    [fields, state]\n  )\n\n  const touch = useCallback(\n    (key: string | string[]) => {\n      if (Array.isArray(key)) {\n        setState({\n          ...state,\n          ...key.reduce((aggregate, fieldName) => {\n            return {\n              ...aggregate,\n              [fieldName]: {\n                ...state[fieldName],\n                touched: true\n              }\n            }\n          }, {})\n        })\n      } else {\n        setState({\n          ...state,\n          [key]: {\n            ...state[key],\n            touched: true\n          }\n        })\n      }\n    },\n    [state]\n  )\n\n  const setValues = useCallback(\n    (values: {[key: string]: any}, touched = false) => {\n      setState(\n        Object.assign({}, state, {\n          ...Object.entries(values).reduce((previousValue, [key, value]) => {\n            const field = fields[key]\n            return {\n              ...previousValue,\n              [key]: createField(field, value, touched)\n            }\n          }, {})\n        })\n      )\n    },\n    [fields, state]\n  )\n\n  const clear = useCallback(() => {\n    setState(\n      Object.assign({}, state, {\n        ...Object.keys(state).reduce((previousValue, key) => {\n          const field = fields[key]\n          return {\n            ...previousValue,\n            [key]: createField(field, field.defaultValue, false)\n          }\n        }, {})\n      })\n    )\n  }, [fields, state])\n\n  useEffect(() => {\n    onChange && onChange([state, {setValue, touch, setValues, clear}])\n  }, [state, setValue, touch, setValues, clear, onChange])\n\n  useEffect(() => {\n    setState(() => createForm(fields))\n  }, [fields])\n\n  return [state, {setValue, touch, setValues, clear}]\n}\n","import { gql } from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `DateTime` scalar represents an ISO-8601 compliant date time type. */\n  DateTime: any;\n  /** The built-in `Decimal` scalar type. */\n  Decimal: any;\n  /** The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1. */\n  Long: any;\n  TimeSpan: any;\n  Uuid: any;\n};\n\nexport type AcceptGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type AgendaInput = {\n  communityIds?: Maybe<Array<Scalars['Uuid']>>;\n  courseIds?: Maybe<Array<Scalars['Uuid']>>;\n  month: Scalars['Int'];\n  year: Scalars['Int'];\n};\n\nexport type CancelGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type CancelGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type CancelGameTeeTimeInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type ChangeGameHostInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type Chat = {\n  __typename?: 'Chat';\n  token: Scalars['String'];\n};\n\nexport enum CommunicationMethod {\n  Email = 'EMAIL',\n  Pushnotifications = 'PUSHNOTIFICATIONS'\n}\n\nexport type Community = {\n  __typename?: 'Community';\n  admins?: Maybe<Array<Maybe<Player>>>;\n  id: Scalars['Uuid'];\n  initials?: Maybe<Scalars['String']>;\n  isMember: Scalars['Boolean'];\n  memberCount: Scalars['Long'];\n  members?: Maybe<PaginatedResultsOfCommunityMember>;\n  name: Scalars['String'];\n  postCount: Scalars['Int'];\n  posts?: Maybe<PaginatedResultsOfPostOfCommunity>;\n  profileImageRef?: Maybe<ImageRef>;\n};\n\n\nexport type CommunityMembersArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type CommunityPostsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type CommunityMember = {\n  __typename?: 'CommunityMember';\n  id: Scalars['Uuid'];\n  isAdmin: Scalars['Boolean'];\n  joinedOn: Scalars['DateTime'];\n  player?: Maybe<Player>;\n};\n\nexport type CommunityPostCommentReactionFeedEntry = IFeedEntry & {\n  __typename?: 'CommunityPostCommentReactionFeedEntry';\n  comment?: Maybe<PostCommentOfCommunity>;\n  community?: Maybe<Community>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type CommunityPostFeedEntry = IFeedEntry & {\n  __typename?: 'CommunityPostFeedEntry';\n  community?: Maybe<Community>;\n  id: Scalars['Uuid'];\n  post?: Maybe<PostOfCommunity>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type CommunityPostReactionFeedEntry = IFeedEntry & {\n  __typename?: 'CommunityPostReactionFeedEntry';\n  community?: Maybe<Community>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  post?: Maybe<PostOfCommunity>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type ConfirmGamePlayerInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type ConfirmGameTeeTimeInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type Coordinates = {\n  __typename?: 'Coordinates';\n  lat: Scalars['Decimal'];\n  lon: Scalars['Decimal'];\n};\n\nexport type CoordinatesInput = {\n  lat: Scalars['Decimal'];\n  lon: Scalars['Decimal'];\n};\n\nexport type Course = {\n  __typename?: 'Course';\n  description: Scalars['String'];\n  emailAddress?: Maybe<Scalars['String']>;\n  id: Scalars['Uuid'];\n  name: Scalars['String'];\n  physicalAddress: PhysicalAddress;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  telephoneNumber?: Maybe<TelephoneNumber>;\n  timezone?: Maybe<Timezone>;\n  website?: Maybe<Scalars['String']>;\n};\n\nexport type CreateCommunityCommentReactionInput = {\n  commentId: Scalars['Uuid'];\n  communityId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreateCommunityInput = {\n  name: Scalars['String'];\n};\n\nexport type CreateCommunityPostCommentInput = {\n  body?: Maybe<Scalars['String']>;\n  communityId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n  postId: Scalars['Uuid'];\n};\n\nexport type CreateCommunityPostCommentReplyInput = {\n  body?: Maybe<Scalars['String']>;\n  commentId: Scalars['Uuid'];\n  communityId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n};\n\nexport type CreateCommunityPostInput = {\n  body?: Maybe<Scalars['String']>;\n  communityId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n};\n\nexport type CreateCommunityPostReactionInput = {\n  communityId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreateCourseInput = {\n  description: Scalars['String'];\n  emailAddress?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  physicalAddress: PhysicalAddressInput;\n  telephoneNumber?: Maybe<TelephoneNumberInput>;\n  timezoneId: Scalars['String'];\n  website?: Maybe<Scalars['String']>;\n};\n\nexport type CreateCourseReactionInput = {\n  courseId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreateGameInput = {\n  automaticallyConfirmTeeTime?: Maybe<Scalars['Boolean']>;\n  communityIds: Array<Scalars['Uuid']>;\n  courseId: Scalars['Uuid'];\n  gameType: GameType;\n  holes: Holes;\n  isHostPlaying?: Maybe<Scalars['Boolean']>;\n  numberOfPlayers: Scalars['Int'];\n  teeTime: DateTimeInfoInput;\n};\n\nexport type CreateGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type CreateGameReactionInput = {\n  gameId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreatePlayerCommentReactionInput = {\n  commentId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreatePlayerPostCommentInput = {\n  body?: Maybe<Scalars['String']>;\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n  playerId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n};\n\nexport type CreatePlayerPostCommentReplyInput = {\n  body?: Maybe<Scalars['String']>;\n  commentId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n  playerId: Scalars['Uuid'];\n};\n\nexport type CreatePlayerPostInput = {\n  body?: Maybe<Scalars['String']>;\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n};\n\nexport type CreatePlayerPostReactionInput = {\n  playerId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type DateRangeInput = {\n  from?: Maybe<Scalars['DateTime']>;\n  to?: Maybe<Scalars['DateTime']>;\n};\n\nexport type DateTimeInfoInput = {\n  day: Scalars['Int'];\n  hour: Scalars['Int'];\n  minute: Scalars['Int'];\n  month: Scalars['Int'];\n  year: Scalars['Int'];\n};\n\nexport type DeclineGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type DeclineGamePlayerInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type DiscardPlayerGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type FollowPlayerInput = {\n  playerId: Scalars['Uuid'];\n};\n\nexport type Game = {\n  __typename?: 'Game';\n  communities?: Maybe<Array<Maybe<Community>>>;\n  course?: Maybe<Course>;\n  gameType: GameType;\n  holes: Holes;\n  host?: Maybe<Player>;\n  id: Scalars['Uuid'];\n  invitations?: Maybe<Array<Maybe<GameInvitation>>>;\n  isCancelled: Scalars['Boolean'];\n  isHost: Scalars['Boolean'];\n  isPlaying: Scalars['Boolean'];\n  myStatus?: Maybe<GamePlayerStatus>;\n  numberOfPlayers: Scalars['Int'];\n  playerCount: Scalars['Int'];\n  players?: Maybe<Array<Maybe<GamePlayer>>>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  teeTime: TeeTime;\n};\n\nexport type GameFeedEntry = IFeedEntry & {\n  __typename?: 'GameFeedEntry';\n  game?: Maybe<Game>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type GameInvitation = {\n  __typename?: 'GameInvitation';\n  createdOn: Scalars['DateTime'];\n  player?: Maybe<Player>;\n};\n\nexport type GamePlayer = {\n  __typename?: 'GamePlayer';\n  id: Scalars['Uuid'];\n  isHost: Scalars['Boolean'];\n  joinedOn: Scalars['DateTime'];\n  player?: Maybe<Player>;\n  status: GamePlayerStatus;\n};\n\nexport enum GamePlayerStatus {\n  Confirmed = 'CONFIRMED',\n  Declined = 'DECLINED',\n  Pendingconfirmation = 'PENDINGCONFIRMATION',\n  Standby = 'STANDBY'\n}\n\nexport enum GameType {\n  Competitivesingle = 'COMPETITIVESINGLE',\n  Competitiveteam = 'COMPETITIVETEAM',\n  Moneygame = 'MONEYGAME',\n  Social = 'SOCIAL',\n  Tournament = 'TOURNAMENT'\n}\n\nexport type GamesSearchInput = {\n  communityIds?: Maybe<Array<Scalars['Uuid']>>;\n  courseIds?: Maybe<Array<Scalars['Uuid']>>;\n  isAscending?: Maybe<Scalars['Boolean']>;\n  teeTime?: Maybe<DateRangeInput>;\n  term?: Maybe<Scalars['String']>;\n};\n\nexport enum Holes {\n  Eighteenholes = 'EIGHTEENHOLES',\n  Nineholes = 'NINEHOLES'\n}\n\nexport type IFeedEntry = {\n  id: Scalars['Uuid'];\n  timestamp: Scalars['DateTime'];\n};\n\nexport type ImageRef = {\n  __typename?: 'ImageRef';\n  height: Scalars['Int'];\n  ref?: Maybe<Scalars['String']>;\n  width: Scalars['Int'];\n};\n\nexport type ImageRefInput = {\n  filename?: Maybe<Scalars['String']>;\n  height: Scalars['Int'];\n  width: Scalars['Int'];\n};\n\nexport type JoinCommunityInput = {\n  communityId: Scalars['Uuid'];\n};\n\nexport type JoinGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type LeaveCommunityInput = {\n  communityId: Scalars['Uuid'];\n};\n\nexport type LeaveGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  acceptGameInvitation?: Maybe<Player>;\n  cancelGame?: Maybe<Game>;\n  cancelGameInvitation?: Maybe<Game>;\n  cancelGameTeeTime?: Maybe<Game>;\n  changeGameHost?: Maybe<Game>;\n  confirmGamePlayer?: Maybe<Game>;\n  confirmGameTeeTime?: Maybe<Game>;\n  createCommunity?: Maybe<Community>;\n  createCommunityCommentReaction?: Maybe<PostCommentOfCommunity>;\n  createCommunityPost?: Maybe<PostOfCommunity>;\n  createCommunityPostComment?: Maybe<PostOfCommunity>;\n  createCommunityPostCommentReply?: Maybe<PostCommentOfCommunity>;\n  createCommunityPostReaction?: Maybe<PostOfCommunity>;\n  createCourse?: Maybe<Course>;\n  createCourseReaction?: Maybe<Course>;\n  createGame?: Maybe<Game>;\n  createGameInvitation?: Maybe<Game>;\n  createGameReaction?: Maybe<Game>;\n  createPlayerCommentReaction?: Maybe<PostCommentOfPlayer>;\n  createPlayerPost?: Maybe<PostOfPlayer>;\n  createPlayerPostComment?: Maybe<PostOfPlayer>;\n  createPlayerPostCommentReply?: Maybe<PostCommentOfPlayer>;\n  createPlayerPostReaction?: Maybe<PostOfPlayer>;\n  declineGameInvitation?: Maybe<Player>;\n  declineGamePlayer?: Maybe<Game>;\n  discardPlayerGame?: Maybe<Player>;\n  followPlayer?: Maybe<Player>;\n  joinCommunity?: Maybe<Player>;\n  joinGame?: Maybe<Game>;\n  leaveCommunity?: Maybe<Player>;\n  leaveGame?: Maybe<Game>;\n  registerPlayer?: Maybe<Player>;\n  registerPlayerFcmToken?: Maybe<Player>;\n  removeCourseReaction?: Maybe<Course>;\n  removeGameReaction?: Maybe<Game>;\n  reportAbuse?: Maybe<Player>;\n  setCommunityAdmins?: Maybe<Community>;\n  setCommunityProfileImageRef?: Maybe<Community>;\n  setNotificationPreferences?: Maybe<Player>;\n  setPlayerProfileImageRef?: Maybe<Player>;\n  unfollowPlayer?: Maybe<Player>;\n  updateCommunity?: Maybe<Community>;\n  updateCourse?: Maybe<Course>;\n  updateGame?: Maybe<Game>;\n  updatePlayer?: Maybe<Player>;\n  updatePlayerCoursePreferences?: Maybe<Player>;\n  updatePlayerGamePreferences?: Maybe<Player>;\n  updatePlayerHandicap?: Maybe<Player>;\n  updatePlayerPreferences?: Maybe<Player>;\n};\n\n\nexport type MutationAcceptGameInvitationArgs = {\n  input?: Maybe<AcceptGameInvitationInput>;\n};\n\n\nexport type MutationCancelGameArgs = {\n  input?: Maybe<CancelGameInput>;\n};\n\n\nexport type MutationCancelGameInvitationArgs = {\n  input?: Maybe<CancelGameInvitationInput>;\n};\n\n\nexport type MutationCancelGameTeeTimeArgs = {\n  input?: Maybe<CancelGameTeeTimeInput>;\n};\n\n\nexport type MutationChangeGameHostArgs = {\n  input?: Maybe<ChangeGameHostInput>;\n};\n\n\nexport type MutationConfirmGamePlayerArgs = {\n  input?: Maybe<ConfirmGamePlayerInput>;\n};\n\n\nexport type MutationConfirmGameTeeTimeArgs = {\n  input?: Maybe<ConfirmGameTeeTimeInput>;\n};\n\n\nexport type MutationCreateCommunityArgs = {\n  input?: Maybe<CreateCommunityInput>;\n};\n\n\nexport type MutationCreateCommunityCommentReactionArgs = {\n  input?: Maybe<CreateCommunityCommentReactionInput>;\n};\n\n\nexport type MutationCreateCommunityPostArgs = {\n  input?: Maybe<CreateCommunityPostInput>;\n};\n\n\nexport type MutationCreateCommunityPostCommentArgs = {\n  input?: Maybe<CreateCommunityPostCommentInput>;\n};\n\n\nexport type MutationCreateCommunityPostCommentReplyArgs = {\n  input?: Maybe<CreateCommunityPostCommentReplyInput>;\n};\n\n\nexport type MutationCreateCommunityPostReactionArgs = {\n  input?: Maybe<CreateCommunityPostReactionInput>;\n};\n\n\nexport type MutationCreateCourseArgs = {\n  input?: Maybe<CreateCourseInput>;\n};\n\n\nexport type MutationCreateCourseReactionArgs = {\n  input?: Maybe<CreateCourseReactionInput>;\n};\n\n\nexport type MutationCreateGameArgs = {\n  input?: Maybe<CreateGameInput>;\n};\n\n\nexport type MutationCreateGameInvitationArgs = {\n  input?: Maybe<CreateGameInvitationInput>;\n};\n\n\nexport type MutationCreateGameReactionArgs = {\n  input?: Maybe<CreateGameReactionInput>;\n};\n\n\nexport type MutationCreatePlayerCommentReactionArgs = {\n  input?: Maybe<CreatePlayerCommentReactionInput>;\n};\n\n\nexport type MutationCreatePlayerPostArgs = {\n  input?: Maybe<CreatePlayerPostInput>;\n};\n\n\nexport type MutationCreatePlayerPostCommentArgs = {\n  input?: Maybe<CreatePlayerPostCommentInput>;\n};\n\n\nexport type MutationCreatePlayerPostCommentReplyArgs = {\n  input?: Maybe<CreatePlayerPostCommentReplyInput>;\n};\n\n\nexport type MutationCreatePlayerPostReactionArgs = {\n  input?: Maybe<CreatePlayerPostReactionInput>;\n};\n\n\nexport type MutationDeclineGameInvitationArgs = {\n  input?: Maybe<DeclineGameInvitationInput>;\n};\n\n\nexport type MutationDeclineGamePlayerArgs = {\n  input?: Maybe<DeclineGamePlayerInput>;\n};\n\n\nexport type MutationDiscardPlayerGameArgs = {\n  input?: Maybe<DiscardPlayerGameInput>;\n};\n\n\nexport type MutationFollowPlayerArgs = {\n  input?: Maybe<FollowPlayerInput>;\n};\n\n\nexport type MutationJoinCommunityArgs = {\n  input?: Maybe<JoinCommunityInput>;\n};\n\n\nexport type MutationJoinGameArgs = {\n  input?: Maybe<JoinGameInput>;\n};\n\n\nexport type MutationLeaveCommunityArgs = {\n  input?: Maybe<LeaveCommunityInput>;\n};\n\n\nexport type MutationLeaveGameArgs = {\n  input?: Maybe<LeaveGameInput>;\n};\n\n\nexport type MutationRegisterPlayerArgs = {\n  input?: Maybe<RegisterPlayerInput>;\n};\n\n\nexport type MutationRegisterPlayerFcmTokenArgs = {\n  input?: Maybe<RegisterPlayerFcmTokenInput>;\n};\n\n\nexport type MutationRemoveCourseReactionArgs = {\n  input?: Maybe<RemoveReactionInput>;\n};\n\n\nexport type MutationRemoveGameReactionArgs = {\n  input?: Maybe<RemoveReactionInput>;\n};\n\n\nexport type MutationReportAbuseArgs = {\n  input?: Maybe<ReportAbuseInput>;\n};\n\n\nexport type MutationSetCommunityAdminsArgs = {\n  input?: Maybe<SetCommunityAdminsInput>;\n};\n\n\nexport type MutationSetCommunityProfileImageRefArgs = {\n  input?: Maybe<SetCommunityProfileImageRefInput>;\n};\n\n\nexport type MutationSetNotificationPreferencesArgs = {\n  input?: Maybe<SetNotificationPreferencesInput>;\n};\n\n\nexport type MutationSetPlayerProfileImageRefArgs = {\n  input?: Maybe<ImageRefInput>;\n};\n\n\nexport type MutationUnfollowPlayerArgs = {\n  input?: Maybe<UnfollowPlayerInput>;\n};\n\n\nexport type MutationUpdateCommunityArgs = {\n  input?: Maybe<UpdateCommunityInput>;\n};\n\n\nexport type MutationUpdateCourseArgs = {\n  input?: Maybe<UpdateCourseInput>;\n};\n\n\nexport type MutationUpdateGameArgs = {\n  input?: Maybe<UpdateGameInput>;\n};\n\n\nexport type MutationUpdatePlayerArgs = {\n  input?: Maybe<UpdatePlayerInput>;\n};\n\n\nexport type MutationUpdatePlayerCoursePreferencesArgs = {\n  input?: Maybe<UpdatePlayerCoursePreferencesInput>;\n};\n\n\nexport type MutationUpdatePlayerGamePreferencesArgs = {\n  input?: Maybe<UpdatePlayerGamePreferencesInput>;\n};\n\n\nexport type MutationUpdatePlayerHandicapArgs = {\n  input?: Maybe<UpdatePlayerHandicapInput>;\n};\n\n\nexport type MutationUpdatePlayerPreferencesArgs = {\n  input?: Maybe<UpdatePlayerPreferencesInput>;\n};\n\nexport type NotificationPreference = {\n  __typename?: 'NotificationPreference';\n  communicationMethods: Array<CommunicationMethod>;\n  eventType: Scalars['String'];\n};\n\nexport type NotificationPreferenceInput = {\n  communicationMethods: Array<CommunicationMethod>;\n  eventType: Scalars['String'];\n};\n\nexport type PaginatedResultsOfCommunity = {\n  __typename?: 'PaginatedResultsOfCommunity';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Community>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfCommunityMember = {\n  __typename?: 'PaginatedResultsOfCommunityMember';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<CommunityMember>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfCourse = {\n  __typename?: 'PaginatedResultsOfCourse';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Course>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfGame = {\n  __typename?: 'PaginatedResultsOfGame';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Game>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfIFeedEntry = {\n  __typename?: 'PaginatedResultsOfIFeedEntry';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<IFeedEntry>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPlayer = {\n  __typename?: 'PaginatedResultsOfPlayer';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Player>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostCommentOfCommunity = {\n  __typename?: 'PaginatedResultsOfPostCommentOfCommunity';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostCommentOfCommunity>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostCommentOfPlayer = {\n  __typename?: 'PaginatedResultsOfPostCommentOfPlayer';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostCommentOfPlayer>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostOfCommunity = {\n  __typename?: 'PaginatedResultsOfPostOfCommunity';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostOfCommunity>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostOfPlayer = {\n  __typename?: 'PaginatedResultsOfPostOfPlayer';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostOfPlayer>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfReactionDetail = {\n  __typename?: 'PaginatedResultsOfReactionDetail';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<ReactionDetail>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport enum Permission {\n  Createcommunity = 'CREATECOMMUNITY',\n  Creategame = 'CREATEGAME',\n  Createpost = 'CREATEPOST',\n  Createpostcomment = 'CREATEPOSTCOMMENT',\n  Upsertcourse = 'UPSERTCOURSE'\n}\n\nexport type PhysicalAddress = {\n  __typename?: 'PhysicalAddress';\n  city: Scalars['String'];\n  coordinates: Coordinates;\n  countryCode: Scalars['String'];\n  postCode: Scalars['String'];\n  province: Scalars['String'];\n  street: Scalars['String'];\n  streetNumber: Scalars['String'];\n  suburb: Scalars['String'];\n};\n\nexport type PhysicalAddressInput = {\n  city: Scalars['String'];\n  coordinates: CoordinatesInput;\n  countryCode: Scalars['String'];\n  postCode: Scalars['String'];\n  province: Scalars['String'];\n  street: Scalars['String'];\n  streetNumber: Scalars['String'];\n  suburb: Scalars['String'];\n};\n\nexport type Player = {\n  __typename?: 'Player';\n  communities?: Maybe<Array<Maybe<Community>>>;\n  countryCode?: Maybe<Scalars['String']>;\n  followers?: Maybe<PaginatedResultsOfPlayer>;\n  followersCount: Scalars['Int'];\n  following?: Maybe<PaginatedResultsOfPlayer>;\n  followingCount: Scalars['Int'];\n  gameInvitations?: Maybe<Array<Maybe<PlayerGameInvitation>>>;\n  games?: Maybe<PaginatedResultsOfGame>;\n  handicap: Scalars['Int'];\n  id: Scalars['Uuid'];\n  initials?: Maybe<Scalars['String']>;\n  isFollower: Scalars['Boolean'];\n  isFollowing: Scalars['Boolean'];\n  isRegistered: Scalars['Boolean'];\n  isSelf: Scalars['Boolean'];\n  name?: Maybe<Scalars['String']>;\n  notificationPreferences?: Maybe<Array<Maybe<NotificationPreference>>>;\n  permissions?: Maybe<Array<Permission>>;\n  playerTypes: Array<PlayerType>;\n  postCount: Scalars['Int'];\n  posts?: Maybe<PaginatedResultsOfPostOfPlayer>;\n  preferredCourses?: Maybe<Array<Maybe<Course>>>;\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n  profileImageRef?: Maybe<ImageRef>;\n};\n\n\nexport type PlayerFollowersArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PlayerFollowingArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PlayerGamesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  input?: Maybe<GamesSearchInput>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PlayerPostsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PlayerGameInvitation = {\n  __typename?: 'PlayerGameInvitation';\n  createdBy?: Maybe<Player>;\n  createdOn: Scalars['DateTime'];\n  game?: Maybe<Game>;\n};\n\nexport type PlayerPostCommentReactionFeedEntry = IFeedEntry & {\n  __typename?: 'PlayerPostCommentReactionFeedEntry';\n  comment?: Maybe<PostCommentOfPlayer>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type PlayerPostFeedEntry = IFeedEntry & {\n  __typename?: 'PlayerPostFeedEntry';\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  post?: Maybe<PostOfPlayer>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type PlayerPostReactionFeedEntry = IFeedEntry & {\n  __typename?: 'PlayerPostReactionFeedEntry';\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  post?: Maybe<PostOfPlayer>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport enum PlayerType {\n  Beginner = 'BEGINNER',\n  Matchplay = 'MATCHPLAY',\n  Relaxed = 'RELAXED',\n  Social = 'SOCIAL'\n}\n\nexport type PlayersSearchInput = {\n  term?: Maybe<Scalars['String']>;\n};\n\nexport type PostCommentOfCommunity = {\n  __typename?: 'PostCommentOfCommunity';\n  author?: Maybe<Player>;\n  body?: Maybe<Scalars['String']>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  replies?: Maybe<PaginatedResultsOfPostCommentOfCommunity>;\n  replyCount: Scalars['Int'];\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostCommentOfCommunityReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostCommentOfCommunityRepliesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PostCommentOfPlayer = {\n  __typename?: 'PostCommentOfPlayer';\n  author?: Maybe<Player>;\n  body?: Maybe<Scalars['String']>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  replies?: Maybe<PaginatedResultsOfPostCommentOfPlayer>;\n  replyCount: Scalars['Int'];\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostCommentOfPlayerReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostCommentOfPlayerRepliesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PostOfCommunity = {\n  __typename?: 'PostOfCommunity';\n  author?: Maybe<Community>;\n  body?: Maybe<Scalars['String']>;\n  commentCount: Scalars['Int'];\n  comments?: Maybe<PaginatedResultsOfPostCommentOfCommunity>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostOfCommunityCommentsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostOfCommunityReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PostOfPlayer = {\n  __typename?: 'PostOfPlayer';\n  author?: Maybe<Player>;\n  body?: Maybe<Scalars['String']>;\n  commentCount: Scalars['Int'];\n  comments?: Maybe<PaginatedResultsOfPostCommentOfPlayer>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostOfPlayerCommentsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostOfPlayerReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  agenda?: Maybe<Array<Maybe<Game>>>;\n  chat?: Maybe<Chat>;\n  communities?: Maybe<PaginatedResultsOfCommunity>;\n  community?: Maybe<Community>;\n  communityPost?: Maybe<PostOfCommunity>;\n  communityPostComment?: Maybe<PostCommentOfCommunity>;\n  course?: Maybe<Course>;\n  courses?: Maybe<PaginatedResultsOfCourse>;\n  feed?: Maybe<PaginatedResultsOfIFeedEntry>;\n  game?: Maybe<Game>;\n  games?: Maybe<PaginatedResultsOfGame>;\n  player?: Maybe<Player>;\n  playerPost?: Maybe<PostOfPlayer>;\n  playerPostComment?: Maybe<PostCommentOfPlayer>;\n  players?: Maybe<PaginatedResultsOfPlayer>;\n};\n\n\nexport type QueryAgendaArgs = {\n  input?: Maybe<AgendaInput>;\n};\n\n\nexport type QueryChatArgs = {\n  platform?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCommunitiesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n  term?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCommunityArgs = {\n  communityId: Scalars['Uuid'];\n};\n\n\nexport type QueryCommunityPostArgs = {\n  communityId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n};\n\n\nexport type QueryCommunityPostCommentArgs = {\n  commentId: Scalars['Uuid'];\n  communityId: Scalars['Uuid'];\n};\n\n\nexport type QueryCourseArgs = {\n  courseId: Scalars['Uuid'];\n};\n\n\nexport type QueryCoursesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n  term?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeedArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type QueryGameArgs = {\n  gameId: Scalars['Uuid'];\n};\n\n\nexport type QueryGamesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  input?: Maybe<GamesSearchInput>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type QueryPlayerArgs = {\n  id?: Maybe<Scalars['Uuid']>;\n};\n\n\nexport type QueryPlayerPostArgs = {\n  playerId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n};\n\n\nexport type QueryPlayerPostCommentArgs = {\n  commentId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\n\nexport type QueryPlayersArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  input?: Maybe<PlayersSearchInput>;\n  limit?: Scalars['Int'];\n};\n\nexport type Reaction = {\n  __typename?: 'Reaction';\n  count: Scalars['Int'];\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionType: ReactionType;\n};\n\nexport type ReactionDetail = {\n  __typename?: 'ReactionDetail';\n  id?: Maybe<Scalars['String']>;\n  player?: Maybe<Player>;\n  reactionType: ReactionType;\n  timestamp: Scalars['DateTime'];\n};\n\nexport enum ReactionType {\n  Angry = 'ANGRY',\n  Happy = 'HAPPY',\n  Like = 'LIKE',\n  Love = 'LOVE',\n  Sad = 'SAD',\n  Surprised = 'SURPRISED'\n}\n\nexport type RegisterPlayerFcmTokenInput = {\n  token: Scalars['String'];\n};\n\nexport type RegisterPlayerInput = {\n  countryCode: Scalars['String'];\n  handicap: Scalars['Int'];\n  name: Scalars['String'];\n  playerTypes: Array<PlayerType>;\n  preferredCourseIds: Array<Scalars['Uuid']>;\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n};\n\nexport type RemoveReactionInput = {\n  id: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type ReportAbuseInput = {\n  description: Scalars['String'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type SetCommunityAdminsInput = {\n  communityId: Scalars['Uuid'];\n  playerIds: Array<Scalars['Uuid']>;\n};\n\nexport type SetCommunityProfileImageRefInput = {\n  communityId: Scalars['Uuid'];\n  filename?: Maybe<Scalars['String']>;\n  height: Scalars['Int'];\n  width: Scalars['Int'];\n};\n\nexport type SetNotificationPreferencesInput = {\n  options: Array<NotificationPreferenceInput>;\n};\n\nexport type TeeTime = {\n  __typename?: 'TeeTime';\n  dateAndTime: Scalars['DateTime'];\n  isConfirmed: Scalars['Boolean'];\n};\n\nexport type TelephoneNumber = {\n  __typename?: 'TelephoneNumber';\n  dialingCode: Scalars['String'];\n  number: Scalars['String'];\n};\n\nexport type TelephoneNumberInput = {\n  dialingCode: Scalars['String'];\n  number: Scalars['String'];\n};\n\nexport type Timezone = {\n  __typename?: 'Timezone';\n  id?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  utcOffset: Scalars['TimeSpan'];\n  utcOffsetInMinutes: Scalars['Float'];\n};\n\nexport type UnfollowPlayerInput = {\n  playerId: Scalars['Uuid'];\n};\n\nexport type UpdateCommunityInput = {\n  communityId: Scalars['Uuid'];\n  name: Scalars['String'];\n};\n\nexport type UpdateCourseInput = {\n  courseId: Scalars['Uuid'];\n  description: Scalars['String'];\n  emailAddress?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  physicalAddress: PhysicalAddressInput;\n  telephoneNumber?: Maybe<TelephoneNumberInput>;\n  timezoneId: Scalars['String'];\n  website?: Maybe<Scalars['String']>;\n};\n\nexport type UpdateGameInput = {\n  communityIds: Array<Scalars['Uuid']>;\n  courseId: Scalars['Uuid'];\n  gameId: Scalars['Uuid'];\n  gameType: GameType;\n  holes: Holes;\n  numberOfPlayers: Scalars['Int'];\n  teeTime: Scalars['DateTime'];\n};\n\nexport type UpdatePlayerCoursePreferencesInput = {\n  preferredCourseIds: Array<Scalars['Uuid']>;\n};\n\nexport type UpdatePlayerGamePreferencesInput = {\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n};\n\nexport type UpdatePlayerHandicapInput = {\n  handicap: Scalars['Int'];\n};\n\nexport type UpdatePlayerInput = {\n  countryCode: Scalars['String'];\n  name: Scalars['String'];\n  playerTypes: Array<PlayerType>;\n  preferredCourseIds: Array<Scalars['Uuid']>;\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n};\n\nexport type UpdatePlayerPreferencesInput = {\n  countryCode: Scalars['String'];\n  name: Scalars['String'];\n  playerTypes: Array<PlayerType>;\n};\n","import {ChangeEvent} from 'react'\nimport {TextFieldProps} from './TextFieldProps'\nimport classNames from 'classnames'\n\nconst TextField = ({\n  label,\n  form,\n  fieldName,\n  containerClassName,\n  ...props\n}: TextFieldProps) => {\n  const [state, {setValue}] = form\n  const field = state[fieldName]\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setValue(fieldName, e.target.value)\n  const hasError = field.touched && !field.isValid\n\n  return (\n    <div\n      className={classNames(\n        'form-control',\n        'w-full',\n        'md:w-1/2',\n        containerClassName\n      )}\n    >\n      {label && (\n        <label className=\"label\">\n          <span className=\"label-text\">{label}</span>\n        </label>\n      )}\n      <input\n        {...props}\n        type=\"text\"\n        className={classNames('input', 'input-bordered', {\n          'input-error': hasError\n        })}\n        value={field.value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default TextField\n","import {PlaceProps} from './PlaceProps'\nimport {first} from 'lodash'\n\ntype AddressCommponent = {\n  key: string\n  longName: string\n  shortName: string\n}\n\nconst DIALING_CODE_REGEX = /^\\+?(\\d+)/\n\nconst getAddressComponents = (result: google.maps.places.PlaceResult) => {\n  return (\n    result.address_components?.reduce<AddressCommponent[]>((result, item) => {\n      return [\n        ...result,\n        ...item.types.map(type => ({\n          key: type,\n          shortName: item.short_name,\n          longName: item.long_name\n        }))\n      ]\n    }, []) ?? []\n  )\n}\n\nconst findAddressComponent = (result: AddressCommponent[], type: string) =>\n  result.find(({key}) => key === type)\n\nconst getTelephoneNumber = (result: google.maps.places.PlaceResult) =>\n  result.international_phone_number?.replace(DIALING_CODE_REGEX, '')\n\nconst getDialingCode = (result: google.maps.places.PlaceResult) =>\n  first(result.international_phone_number?.match(DIALING_CODE_REGEX) ?? [])\n\nconst getCountryCode = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'country')?.shortName ?? ''\n\nconst getPostCode = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'postal_code')?.shortName ?? ''\n\nconst getProvince = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'administrative_area_level_1')?.longName ?? ''\n\nconst getStreet = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'route')?.longName ?? ''\n\nconst getStreetNumber = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'street_number')?.shortName ?? ''\n\nconst getSuburb = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'locality')?.longName ?? ''\n\nconst getCity = (result: AddressCommponent[]) =>\n  findAddressComponent(result, 'administrative_area_level_2')?.longName ?? ''\n\nconst getPlace = (result: google.maps.places.PlaceResult): PlaceProps => {\n  const addressComponents = getAddressComponents(result)\n\n  return {\n    telephoneNumber: getTelephoneNumber(result),\n    dialingCode: getDialingCode(result),\n    countryCode: getCountryCode(addressComponents),\n    postCode: getPostCode(addressComponents),\n    province: getProvince(addressComponents),\n    street: getStreet(addressComponents),\n    streetNumber: getStreetNumber(addressComponents),\n    suburb: getSuburb(addressComponents),\n    city: getCity(addressComponents),\n    lat: result.geometry?.location?.lat(),\n    lon: result.geometry?.location?.lng(),\n    website: result.website,\n    description: result.name,\n    name: result.name\n  }\n}\n\nexport default getPlace\n","import {ChangeEvent, useCallback, useEffect, useRef, useState} from 'react'\n\nimport {Autocomplete} from '@react-google-maps/api'\nimport {PlaceFieldProps} from './PlaceFieldProps'\nimport classNames from 'classnames'\nimport getPlace from './getPlace'\n\nconst PlacesField = ({\n  label,\n  form,\n  fieldName,\n  containerClassName,\n  onPlaceChanged,\n  ...props\n}: PlaceFieldProps) => {\n  const [state, {setValue}] = form\n  const field = state[fieldName]\n  const [term, setTerm] = useState(field.value)\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setTerm(e.target.value)\n    setValue(fieldName, e.target.value)\n  }\n  const hasError = field.touched && !field.isValid\n  const autoComplete = useRef<google.maps.places.Autocomplete | undefined>()\n\n  const onSetAutoComplete = useCallback(\n    (e: google.maps.places.Autocomplete) => {\n      autoComplete.current = e\n    },\n    []\n  )\n\n  const onSelect = useCallback(() => {\n    if (!autoComplete.current) return\n    const result = autoComplete.current.getPlace()\n    setValue(fieldName, result.name)\n    onPlaceChanged && onPlaceChanged(getPlace(result))\n  }, [onPlaceChanged, setValue, fieldName])\n\n  useEffect(() => {\n    setTerm(field.value)\n  }, [field])\n\n  return (\n    <Autocomplete onLoad={onSetAutoComplete} onPlaceChanged={onSelect}>\n      <div\n        className={classNames(\n          'form-control',\n          'w-full',\n          'md:w-1/2',\n          containerClassName\n        )}>\n        {label && (\n          <label className=\"label\">\n            <span className=\"label-text\">{label}</span>\n          </label>\n        )}\n        <input\n          {...props}\n          type=\"text\"\n          className={classNames('input', 'input-bordered', {\n            'input-error': hasError\n          })}\n          value={term}\n          onChange={onChange}\n        />\n      </div>\n    </Autocomplete>\n  )\n}\n\nexport default PlacesField\n","import {ChangeEvent} from 'react'\nimport {TextAreaFieldProps} from './TextAreaFieldProps'\nimport classNames from 'classnames'\n\nconst TextField = ({label, form, fieldName, ...props}: TextAreaFieldProps) => {\n  const [state, {setValue}] = form\n  const field = state[fieldName]\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setValue(fieldName, e.target.value)\n  const hasError = field.touched && !field.isValid\n\n  return (\n    <div className={classNames('form-control', 'w-full', 'md:w-1/2')}>\n      {label && (\n        <label className=\"label\">\n          <span className=\"label-text\">{label}</span>\n        </label>\n      )}\n      <input\n        {...props}\n        type=\"text\"\n        className={classNames('textarea', 'textarea-bordered', 'h-24', {\n          'textarea-error': hasError\n        })}\n        value={field.value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default TextField\n","import {FormSectionProps} from './FormSectionProps'\nimport classNames from 'classnames'\n\nconst FormSection = ({children, title, index = '-'}: FormSectionProps) => {\n  return (\n    <div className={classNames('mt-5')}>\n      <h2 className={classNames('p-2', 'flex', 'flex-row', 'items-center')}>\n        <div\n          className={classNames(\n            'border',\n            'rounded-full',\n            'h-10',\n            'w-10',\n            'text-center',\n            'justify-center',\n            'items-center',\n            'flex',\n            'mr-4'\n          )}\n        >\n          {index}\n        </div>\n        <span>{title}</span>\n      </h2>\n      <div className={classNames('border-t', 'ml-16')}>{children}</div>\n    </div>\n  )\n}\n\nexport default FormSection\n","import {FormProps} from './FormProps'\nimport classNames from 'classnames'\n\nconst Form = ({children}: FormProps) => {\n  return (\n    <form\n      className={classNames(\n        'bg-white',\n        'rounded-md',\n        'm-2',\n        'p-6',\n        'w-full',\n        'lg:w-1/2',\n        'md:w-3/4'\n      )}\n    >\n      {children}\n    </form>\n  )\n}\n\nexport default Form\n","const DEFAULT_FILTER = (term: string, {value}: {value: string}) =>\n  term === '' || value.includes(term)\n\nexport default DEFAULT_FILTER\n","import {ChangeEvent, useEffect, useState} from 'react'\nimport {DropdownFieldItem, DropdownFieldProps} from './DropdownFieldProps'\n\nimport DEFAULT_FILTER from './DEFAULT_FILTER'\nimport classNames from 'classnames'\n\nconst DropdownField = ({\n  label,\n  form,\n  fieldName,\n  source,\n  containerClassName,\n  filter = DEFAULT_FILTER,\n  ...props\n}: DropdownFieldProps) => {\n  const [open, setOpen] = useState(false)\n  const [hasFocus, setHasFocus] = useState(false)\n  const [state, {setValue}] = form\n  const field = state[fieldName]\n  const hasError = field.touched && !field.isValid\n  const [term, setTerm] = useState(field.value)\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => setTerm(e.target.value)\n  const focus = () => setOpen(true)\n  const blur = () => !hasFocus && setOpen(false)\n  const over = () => setHasFocus(true)\n  const out = () => setHasFocus(false)\n  const select =\n    ({key, value}: DropdownFieldItem) =>\n    () => {\n      setValue(fieldName, key)\n      setTerm(value)\n      setOpen(false)\n    }\n  const items = source.filter(item => filter(term, item))\n\n  useEffect(() => {\n    const item = source.find(item => item.key === field.value)\n    item && setTerm(item.value)\n  }, [source, field.value])\n\n  return (\n    <div\n      className={classNames(\n        'form-control',\n        'w-full',\n        'md:w-1/2',\n        containerClassName\n      )}\n    >\n      {label && (\n        <label className=\"label\">\n          <span className=\"label-text\">{label}</span>\n        </label>\n      )}\n      <input type=\"hidden\" value=\"autocomplete hack\" />\n      <input\n        {...props}\n        type=\"text\"\n        className={classNames('input', 'input-bordered', {\n          'input-error': hasError\n        })}\n        value={term}\n        autoComplete={'off'}\n        onChange={onChange}\n        onFocus={focus}\n        onBlur={blur}\n      />\n      {open && items.length > 0 && (\n        <div className={classNames('relative')}>\n          <ul\n            onMouseOver={over}\n            onMouseOut={out}\n            className={classNames(\n              'p-2',\n              'shadow',\n              'menu',\n              'dropdown-content',\n              'bg-base-100',\n              'rounded-box',\n              'absolute',\n              'mh-64',\n              'overflow-y-auto',\n              'box-content'\n            )}\n          >\n            {items.map(item => (\n              <li key={item.key}>\n                <a onClick={select(item)}>{item.value}</a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default DropdownField\n","const isEmailAddressRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nconst isEmailAddress = (value: string) => {\n  if (!value) return true\n  return isEmailAddressRegex.test(value.toLowerCase())\n}\n\nexport default isEmailAddress\n","const isNumber = (value: string) => {\n  return value !== undefined && !isNaN(+value)\n}\n\nexport default isNumber\n","const notNullOrEmpty = (value: string) => {\n  return value !== undefined && value !== ''\n}\n\nexport default notNullOrEmpty\n","import FormDefinition from '../FormDefinition'\n\nconst isFormValid = (form: FormDefinition<any>, fieldNames?: string[]) => {\n  const {touch} = form[1]\n  const affectedFields = Object.keys(form[0]).filter(key => {\n    const field = form[0][key]\n\n    if (!fieldNames) {\n      return !field.isValid\n    }\n\n    if (fieldNames.indexOf(key) !== -1) {\n      return !field.isValid\n    }\n\n    return false\n  })\n  touch(affectedFields)\n  return affectedFields.length === 0\n}\n\nexport default isFormValid\n","const numberConverter = {\n  toField: (value: number | undefined) => (value ? value.toString() : ''),\n  toData: (value: string) => +value\n}\n\nexport default numberConverter\n","import {CourseForm, useCreateCourse} from 'state/courses'\nimport {\n  DropdownField,\n  Form,\n  FormSection,\n  PlaceField,\n  PlaceProps,\n  TextAreaField,\n  TextField,\n  getFormData,\n  isEmailAddress,\n  isFormValid,\n  isNumber,\n  notNullOrEmpty,\n  numberConverter,\n  useForm\n} from 'components/forms'\nimport {useCallback, useMemo} from 'react'\nimport {useCountryDropdownSource, useTimezoneDropdownSource} from 'state'\n\nimport classNames from 'classnames'\nimport {useHistory} from 'react-router-dom'\n\nconst AddCourseScreen = () => {\n  const history = useHistory()\n  const fields = useMemo(\n    () => ({\n      name: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      description: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      website: {\n        value: '',\n        validators: []\n      },\n      emailAddress: {\n        value: '',\n        validators: [isEmailAddress]\n      },\n      dialingCode: {\n        value: '',\n        validators: []\n      },\n      telephoneNumber: {\n        value: '',\n        validators: []\n      },\n      streetNumber: {\n        value: '',\n        validators: []\n      },\n      street: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      suburb: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      city: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      province: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      postCode: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      countryCode: {\n        value: '',\n        validators: [notNullOrEmpty]\n      },\n      lat: {\n        value: '',\n        validators: [notNullOrEmpty, isNumber],\n        converter: numberConverter\n      },\n      lon: {\n        value: '',\n        validators: [notNullOrEmpty, isNumber],\n        converter: numberConverter\n      },\n      timezoneId: {\n        value: '',\n        validators: [notNullOrEmpty]\n      }\n    }),\n    []\n  )\n  const form = useForm(fields)\n  const [, {setValues}] = form\n  const discard = () => history.goBack()\n  const [execute, {loading}] = useCreateCourse()\n  const countries = useCountryDropdownSource()\n  const timezones = useTimezoneDropdownSource()\n\n  const submit = async () => {\n    if (isFormValid(form)) {\n      const data = getFormData<CourseForm>(form)\n      await execute({\n        name: data.name,\n        description: data.description,\n        website: data.website,\n        emailAddress: data.emailAddress,\n        timezoneId: data.timezoneId,\n        telephoneNumber:\n          data.telephoneNumber && data.dialingCode\n            ? {\n                number: data.telephoneNumber,\n                dialingCode: data.dialingCode\n              }\n            : null,\n        physicalAddress: {\n          city: data.city,\n          countryCode: data.countryCode,\n          postCode: data.postCode,\n          province: data.province,\n          street: data.street,\n          streetNumber: data.streetNumber,\n          suburb: data.suburb,\n          coordinates: {\n            lat: data.lat,\n            lon: data.lon\n          }\n        }\n      })\n      history.replace('/admin')\n    }\n  }\n\n  const onPlaceChanged = useCallback(\n    (place: PlaceProps) => setValues(place),\n    [setValues]\n  )\n\n  return (\n    <div className={classNames('flex justify-center')}>\n      <Form>\n        <FormSection title={'Course info'} index={'1'}>\n          <PlaceField\n            placeholder={'Acme Country Club'}\n            form={form}\n            fieldName={'name'}\n            label={'Name'}\n            onPlaceChanged={onPlaceChanged}\n          />\n          <TextAreaField\n            placeholder={'Supply the course description'}\n            form={form}\n            fieldName={'description'}\n            label={'Description'}\n          />\n        </FormSection>\n        <FormSection title={'Contact'} index={'2'}>\n          <TextField\n            placeholder={'https://www.course.com'}\n            form={form}\n            fieldName={'website'}\n            label={'Website'}\n          />\n          <TextField\n            placeholder={'info@course.com'}\n            form={form}\n            fieldName={'emailAddress'}\n            label={'Email Address'}\n          />\n          <TextField\n            placeholder={'+27'}\n            form={form}\n            fieldName={'dialingCode'}\n            label={'Telephone Number Dialing Code'}\n          />\n          <TextField\n            placeholder={'000000000'}\n            form={form}\n            fieldName={'telephoneNumber'}\n            label={'Telephone Number'}\n          />\n        </FormSection>\n        <FormSection title={'Physical Address'} index={'3'}>\n          <TextField\n            placeholder={'1'}\n            form={form}\n            fieldName={'streetNumber'}\n            label={'Street number'}\n          />\n          <TextField\n            placeholder={'Acme St'}\n            form={form}\n            fieldName={'street'}\n            label={'Street'}\n          />\n          <TextField\n            placeholder={'Acme Hills'}\n            form={form}\n            fieldName={'suburb'}\n            label={'Suburb'}\n          />\n          <TextField\n            placeholder={'Acme City'}\n            form={form}\n            fieldName={'city'}\n            label={'City'}\n          />\n          <TextField\n            placeholder={'West Acme'}\n            form={form}\n            fieldName={'province'}\n            label={'Province'}\n          />\n          <TextField\n            placeholder={'0000'}\n            form={form}\n            fieldName={'postCode'}\n            label={'Post Code'}\n          />\n          <DropdownField\n            source={countries}\n            placeholder={'Thailand'}\n            form={form}\n            fieldName={'countryCode'}\n            label={'Country'}\n          />\n          <DropdownField\n            source={timezones}\n            placeholder={'SE Asia Standard Time'}\n            form={form}\n            fieldName={'timezoneId'}\n            label={'Timezone'}\n          />\n          <TextField\n            placeholder={'10.487812'}\n            form={form}\n            fieldName={'lat'}\n            label={'Latitude'}\n          />\n          <TextField\n            placeholder={'78.340848'}\n            form={form}\n            fieldName={'lon'}\n            label={'Longitude'}\n          />\n        </FormSection>\n        <div className={classNames('flex', 'justify-end', 'mt-2', 'p-2')}>\n          <button className={classNames('link', 'mr-4')} onClick={discard}>\n            discard\n          </button>\n          <button\n            className={classNames('btn', {loading: loading})}\n            onClick={submit}>\n            Save\n          </button>\n        </div>\n      </Form>\n    </div>\n  )\n}\n\nexport default AddCourseScreen\n","import {CSSProperties} from 'react'\nimport classNames from 'classnames'\n\nconst Body = ({\n  children,\n  className,\n  style = {}\n}: {\n  children: React.ReactNode | React.ReactNodeArray\n  className?: string\n  style?: CSSProperties\n}) => {\n  return (\n    <div\n      className={classNames(\n        'h-screen',\n        'overflow-x-auto',\n        'bg-center',\n        'bg-cover',\n        'bg-gradient-to-r from-gray-300 via-gray-100 to-gray-300',\n        className\n      )}\n      style={style}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Body\n","import {CourseForm, useGetCourse, useUpdateCourse} from 'state/courses'\nimport {\n  DropdownField,\n  Form,\n  FormSection,\n  PlaceField,\n  PlaceProps,\n  TextAreaField,\n  TextField,\n  getFormData,\n  isEmailAddress,\n  isFormValid,\n  isNumber,\n  notNullOrEmpty,\n  numberConverter,\n  useForm\n} from 'components/forms'\nimport {useCallback, useMemo} from 'react'\nimport {useCountryDropdownSource, useTimezoneDropdownSource} from 'state'\nimport {useHistory, useParams} from 'react-router-dom'\n\nimport classNames from 'classnames'\n\nconst EditCourseScreen = () => {\n  const history = useHistory()\n  let {courseId} = useParams<{courseId: string}>()\n  const {data} = useGetCourse(courseId)\n  const countries = useCountryDropdownSource()\n  const timezones = useTimezoneDropdownSource()\n\n  const fields = useMemo(\n    () => ({\n      name: {\n        value: data?.name ?? '',\n        validators: [notNullOrEmpty]\n      },\n      description: {\n        value: data?.description ?? '',\n        validators: [notNullOrEmpty]\n      },\n      website: {\n        value: '',\n        validators: []\n      },\n      emailAddress: {\n        value: data?.emailAddress ?? '',\n        validators: [isEmailAddress]\n      },\n      dialingCode: {\n        value: data?.telephoneNumber?.dialingCode ?? '',\n        validators: []\n      },\n      telephoneNumber: {\n        value: data?.telephoneNumber?.number ?? '',\n        validators: []\n      },\n      streetNumber: {\n        value: data?.physicalAddress?.streetNumber ?? '',\n        validators: []\n      },\n      street: {\n        value: data?.physicalAddress?.street ?? '',\n        validators: [notNullOrEmpty]\n      },\n      suburb: {\n        value: data?.physicalAddress?.suburb ?? '',\n        validators: [notNullOrEmpty]\n      },\n      city: {\n        value: data?.physicalAddress?.city ?? '',\n        validators: [notNullOrEmpty]\n      },\n      province: {\n        value: data?.physicalAddress?.province ?? '',\n        validators: [notNullOrEmpty]\n      },\n      postCode: {\n        value: data?.physicalAddress?.postCode ?? '',\n        validators: [notNullOrEmpty]\n      },\n      countryCode: {\n        value: data?.physicalAddress?.countryCode ?? '',\n        validators: [notNullOrEmpty]\n      },\n      lat: {\n        value: data?.physicalAddress?.coordinates?.lat ?? 0,\n        validators: [notNullOrEmpty, isNumber],\n        converter: numberConverter\n      },\n      lon: {\n        value: data?.physicalAddress?.coordinates?.lon ?? 0,\n        validators: [notNullOrEmpty, isNumber],\n        converter: numberConverter\n      },\n      timezoneId: {\n        value: data?.timezone?.id,\n        validators: [notNullOrEmpty]\n      }\n    }),\n    [data]\n  )\n\n  const form = useForm(fields)\n  const [, {setValues}] = form\n\n  const [execute, {loading}] = useUpdateCourse()\n  const discard = () => history.replace('/admin')\n  const submit = async () => {\n    if (isFormValid(form)) {\n      const data = getFormData<CourseForm>(form)\n      await execute({\n        courseId,\n        name: data.name,\n        description: data.description,\n        emailAddress: data.emailAddress,\n        website: data.website,\n        timezoneId: data.timezoneId,\n        telephoneNumber:\n          data.telephoneNumber && data.dialingCode\n            ? {\n                number: data.telephoneNumber,\n                dialingCode: data.dialingCode\n              }\n            : null,\n        physicalAddress: {\n          city: data.city,\n          countryCode: data.countryCode,\n          postCode: data.postCode,\n          province: data.province,\n          street: data.street,\n          streetNumber: data.streetNumber,\n          suburb: data.suburb,\n          coordinates: {\n            lat: data.lat,\n            lon: data.lon\n          }\n        }\n      })\n      history.replace('/admin')\n    }\n  }\n\n  const onPlaceChanged = useCallback(\n    (place: PlaceProps) => setValues(place),\n    [setValues]\n  )\n\n  return (\n    <div className={classNames('flex justify-center')}>\n      <Form>\n        <FormSection title={'Course info'} index={'1'}>\n          <PlaceField\n            placeholder={'Acme Country Club'}\n            form={form}\n            fieldName={'name'}\n            label={'Name'}\n            onPlaceChanged={onPlaceChanged}\n          />\n          <TextAreaField\n            placeholder={'Supply the course description'}\n            form={form}\n            fieldName={'description'}\n            label={'Description'}\n          />\n        </FormSection>\n        <FormSection title={'Contact'} index={'2'}>\n          <TextField\n            placeholder={'https://www.course.com'}\n            form={form}\n            fieldName={'website'}\n            label={'Website'}\n          />\n          <TextField\n            placeholder={'info@course.com'}\n            form={form}\n            fieldName={'emailAddress'}\n            label={'Email Address'}\n          />\n          <TextField\n            placeholder={'+27'}\n            form={form}\n            fieldName={'dialingCode'}\n            label={'Telephone Number Dialing Code'}\n          />\n          <TextField\n            placeholder={'000000000'}\n            form={form}\n            fieldName={'telephoneNumber'}\n            label={'Telephone Number'}\n          />\n        </FormSection>\n        <FormSection title={'Physical Address'} index={'3'}>\n          <TextField\n            placeholder={'1'}\n            form={form}\n            fieldName={'streetNumber'}\n            label={'Street number'}\n          />\n          <TextField\n            placeholder={'Acme St'}\n            form={form}\n            fieldName={'street'}\n            label={'Street'}\n          />\n          <TextField\n            placeholder={'Acme Hills'}\n            form={form}\n            fieldName={'suburb'}\n            label={'Suburb'}\n          />\n          <TextField\n            placeholder={'Acme City'}\n            form={form}\n            fieldName={'city'}\n            label={'City'}\n          />\n          <TextField\n            placeholder={'West Acme'}\n            form={form}\n            fieldName={'province'}\n            label={'Province'}\n          />\n          <TextField\n            placeholder={'0000'}\n            form={form}\n            fieldName={'postCode'}\n            label={'Post Code'}\n          />\n          <DropdownField\n            source={countries}\n            placeholder={'Thailand'}\n            form={form}\n            fieldName={'countryCode'}\n            label={'Country'}\n          />\n          <DropdownField\n            source={timezones}\n            placeholder={'SE Asia Standard Time'}\n            form={form}\n            fieldName={'timezoneId'}\n            label={'Timezone'}\n          />\n          <TextField\n            placeholder={'10.487812'}\n            form={form}\n            fieldName={'lat'}\n            label={'Latitude'}\n          />\n          <TextField\n            placeholder={'78.340848'}\n            form={form}\n            fieldName={'lon'}\n            label={'Longitude'}\n          />\n        </FormSection>\n        <div className={classNames('flex', 'justify-end', 'mt-2', 'p-2')}>\n          <button className={classNames('link', 'mr-4')} onClick={discard}>\n            discard\n          </button>\n          <button\n            className={classNames('btn', {loading: loading})}\n            onClick={submit}>\n            Save\n          </button>\n        </div>\n      </Form>\n    </div>\n  )\n}\n\nexport default EditCourseScreen\n","import {MapsProviderProps} from './MapsProviderProps'\nimport {memo} from 'react'\nimport {useJsApiLoader} from '@react-google-maps/api'\n\nconst MapsProvider = ({children}: MapsProviderProps) => {\n  const {isLoaded} = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY!,\n    libraries: ['places']\n  })\n\n  return isLoaded ? <>{children}</> : <></>\n}\n\nexport default memo(MapsProvider)\n","const info = (message: string) => {\n  console.log(message)\n}\n\nexport default info\n","const error = (error: any) => {\n  console.error(error)\n}\n\nexport default error\n","import {AuthContextProps} from './AuthContextProps'\nimport React from 'react'\n\nexport default React.createContext<AuthContextProps>({\n  authenticating: true,\n  authenticated: false,\n  logout: () => Promise.resolve(),\n  getToken: () => Promise.resolve('')\n})\n","import React, {useCallback, useEffect, useRef, useState} from 'react'\nimport {User, getAuth, signOut} from 'firebase/auth'\nimport {error, info} from 'services/logging'\n\nimport AuthContext from './AuthContext'\nimport {AuthProviderProps} from './AuthProviderProps'\n\nconst AuthProvider = ({children}: AuthProviderProps) => {\n  const auth = getAuth()\n  const userRef = useRef<User | null>(null)\n\n  const [state, setState] = useState<{\n    authenticated: boolean\n    authenticating: boolean\n  }>({\n    authenticated: false,\n    authenticating: true\n  })\n\n  const tryLogout = async () => {\n    await signOut(auth)\n\n    setState({authenticated: true, authenticating: true})\n\n    setState({\n      authenticating: false,\n      authenticated: false\n    })\n  }\n\n  const handleLogin = useCallback(async (user: User) => {\n    info('User logged in')\n\n    userRef.current = user\n\n    setState({\n      authenticating: false,\n      authenticated: true\n    })\n  }, [])\n\n  const handleLogout = useCallback(() => {\n    info('User logged out')\n    setState({\n      authenticating: false,\n      authenticated: false\n    })\n  }, [])\n\n  useEffect(() => {\n    const subscriber = auth.onAuthStateChanged(async user => {\n      try {\n        if (user) {\n          await handleLogin(user)\n        } else {\n          handleLogout()\n        }\n      } catch (e) {\n        error(e)\n      }\n    })\n    return subscriber\n  }, [auth, handleLogin, handleLogout])\n\n  return (\n    <AuthContext.Provider\n      value={{\n        ...state,\n        logout: tryLogout,\n        getToken: async () => userRef.current?.getIdToken()\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthProvider\n","import AuthContext from './AuthContext'\nimport {useContext} from 'react'\n\nconst useAuthContext = () => {\n  return useContext(AuthContext)\n}\n\nexport default useAuthContext\n","import {Redirect, Route} from 'react-router-dom'\n\nimport {ProtectedRouteProps} from './ProtectedRouteProps'\nimport {useAuthContext} from 'services/auth'\n\nconst ProtectedRoute = ({children, ...props}: ProtectedRouteProps) => {\n  const {authenticated} = useAuthContext()\n\n  return (\n    <Route {...props}>\n      {authenticated ? <>{children}</> : <Redirect to={'/login'} />}\n    </Route>\n  )\n}\n\nexport default ProtectedRoute\n","import React, {useEffect, useState} from 'react'\nimport {fetchAndActivate, getRemoteConfig} from 'firebase/remote-config'\n\nimport {ConfigProviderProps} from './ConfigProviderProps'\n\nconst ConfigProvider = ({children}: ConfigProviderProps) => {\n  const [ready, setReady] = useState(false)\n\n  useEffect(() => {\n    const remoteConfig = getRemoteConfig()\n\n    const init = async () => {\n      await fetchAndActivate(remoteConfig)\n      setReady(true)\n    }\n\n    init()\n  }, [])\n\n  return <>{ready && children}</>\n}\n\nexport default ConfigProvider\n","import {\n  getBoolean,\n  getNumber,\n  getRemoteConfig,\n  getString,\n  getValue\n} from 'firebase/remote-config'\n\nimport {ConfigKeys} from './ConfigKeys'\n\nconst useConfig = () => {\n  const remoteConfig = getRemoteConfig()\n  return {\n    getString: (key: ConfigKeys) => getString(remoteConfig, key),\n    getNumber: (key: ConfigKeys) => getNumber(remoteConfig, key),\n    getBoolean: (key: ConfigKeys) => getBoolean(remoteConfig, key),\n    getValue: (key: ConfigKeys) => getValue(remoteConfig, key)\n  }\n}\n\nexport default useConfig\n","import {useEffect, useState} from 'react'\n\nimport {ImageRef} from 'services/api'\nimport {Maybe} from 'graphql/jsutils/Maybe'\nimport {useAuthContext} from 'services/auth'\nimport {useConfig} from 'services/config'\n\nconst useGetImageSource = (imageRef: Maybe<ImageRef>, width: number = 256) => {\n  const auth = useAuthContext()\n  const config = useConfig()\n  const [source, setSource] = useState<string>('')\n\n  useEffect(() => {\n    const baseUrl = config.getString('ApiUrl')\n    const load = async () => {\n      const token = await auth.getToken()\n      const source = `${baseUrl}${\n        imageRef!.ref\n      }?width=${width}&format=jpg&access_token=${token}`\n      setSource(source)\n    }\n    imageRef && load()\n  }, [imageRef, config, auth, width])\n\n  return source\n}\n\nexport default useGetImageSource\n","import {gql} from '@apollo/client'\n\nexport default gql`\n  fragment ImageRefFragment on ImageRef {\n    ref\n    width\n    height\n  }\n`\n","import IMAGE_REF_FRAGMENT from 'state/IMAGE_REF_FRAGMENT'\nimport {gql} from '@apollo/client'\n\nexport default gql`\n  fragment SelfFragment on Player {\n    __typename\n    id\n    initials\n    name\n    profileImageRef {\n      ...ImageRefFragment\n    }\n  }\n  ${IMAGE_REF_FRAGMENT}\n`\n","import {Maybe, Player} from 'services/api'\nimport {NetworkStatus, gql, useQuery} from '@apollo/client'\n\nimport SELF_FRAGMENT from './SELF_FRAGMENT'\n\nconst GET_SELF = gql`\n  query GetSelf {\n    self: player {\n      ...SelfFragment\n    }\n  }\n  ${SELF_FRAGMENT}\n`\n\nconst useGetSelf = () => {\n  const {data, networkStatus, refetch} = useQuery<{\n    self: Maybe<Player>\n  }>(GET_SELF, {\n    notifyOnNetworkStatusChange: true\n  })\n\n  const loading = networkStatus === NetworkStatus.loading\n  return {loading, data, networkStatus, refetch}\n}\n\nexport default useGetSelf\n","import React, {useState} from 'react'\nimport {Switch, useHistory} from 'react-router-dom'\nimport {faPlus, faSignOutAlt} from '@fortawesome/free-solid-svg-icons'\nimport {formatAddress, isBusy} from 'state'\n\nimport {AddCourseScreen} from 'screens/add-course'\nimport {Body} from 'components/body'\nimport {EditCourseScreen} from 'screens/edit-course'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {MapsProvider} from 'services/maps'\nimport {ProtectedRoute} from 'components/protected-route'\nimport classNames from 'classnames'\nimport {useAuthContext} from 'services/auth'\nimport {useCourseSearch} from 'state/courses'\nimport {useGetImageSource} from 'state/media'\nimport {useGetSelf} from 'state/players'\n\nconst NavBar = () => {\n  const {logout} = useAuthContext()\n  const {data} = useGetSelf()\n  const source = useGetImageSource(data?.self?.profileImageRef)\n  return (\n    <div className=\"m-2 navbar mb-2 shadow-lg bg-neutral text-neutral-content rounded-box\">\n      <div className=\"flex-1 hidden px-2 mx-2 lg:flex divide-x-2\">\n        <span className=\"text-md px-2\">GSK Admin Console</span>\n        <span className=\"text-lg font-bold px-2\">\n          {data?.self && data.self.name}\n        </span>\n      </div>\n      <div className=\"flex-none\">\n        <div className=\"dropdown dropdown-end text-black\">\n          <div tabIndex={0} className=\"avatar\">\n            <div className=\"rounded-full w-10 h-10 m-1\">\n              {source && <img src={source} alt={'Profile'} />}\n            </div>\n          </div>\n          <ul\n            tabIndex={0}\n            className=\"p-2 shadow menu dropdown-content bg-base-100 rounded-box w-52\">\n            <li>\n              <button\n                className={'btn btn-ghost flex flex-row justify-start gap-x-2'}\n                onClick={logout}>\n                <FontAwesomeIcon icon={faSignOutAlt} />\n                Logout\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst CourseList = () => {\n  const [term, setTerm] = useState('')\n  const {data, networkStatus} = useCourseSearch({limit: 10000, term})\n  const history = useHistory()\n  const addCourse = () => history.push('/admin/add-course')\n  const editCourse = (courseId: string) => () =>\n    history.push(`/admin/edit-course/${courseId}`)\n  const onFilter = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setTerm(e.target.value)\n\n  return (\n    <div\n      className={classNames('bg-white', 'rounded-md', 'm-2', 'p-6', 'shadow')}>\n      <div\n        className={classNames(\n          'flex',\n          'flex-row',\n          'justify-between',\n          'border-b-2',\n          'mb-3'\n        )}>\n        <h2 className={classNames('text-lg', 'text-bold', 'p-3')}>\n          Course list\n        </h2>\n        <div\n          className={classNames(\n            'flex',\n            'flex-row',\n            'items-center',\n            'space-x-3'\n          )}>\n          <div className=\"form-control\">\n            <input\n              type=\"text\"\n              placeholder=\"Filter\"\n              className=\"input input-bordered input-sm\"\n              onChange={onFilter}\n              value={term}\n            />\n          </div>\n          <button\n            onClick={addCourse}\n            className={classNames(\n              'btn',\n              'btn-sm',\n              'flex',\n              'flex-row',\n              'justify-start',\n              'gap-x-2'\n            )}>\n            Add course\n            <FontAwesomeIcon icon={faPlus} />\n          </button>\n        </div>\n      </div>\n      {!isBusy(networkStatus) && (\n        <div className={'overflow-x-auto'}>\n          <table className={'table w-full'}>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th className={'hidden xl:table-cell'}>Description</th>\n                <th className={'hidden lg:table-cell'}>Address</th>\n                <th className={'hidden xl:table-cell'}>Timezone</th>\n                <th>&nbsp;</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map(course => (\n                <tr key={course.id}>\n                  <td>{course.name}</td>\n                  <td className={'hidden xl:table-cell'}>\n                    {course.description}\n                  </td>\n                  <td className={'hidden lg:table-cell'}>\n                    {formatAddress(course.physicalAddress)}\n                  </td>\n                  <td className={'hidden xl:table-cell'}>\n                    {course.timezone?.name}\n                  </td>\n                  <td>\n                    <button\n                      className={classNames('btn btn-xs')}\n                      onClick={editCourse(course.id)}>\n                      Edit\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst DashboardScreen = () => {\n  return <CourseList />\n}\n\nconst AdminScreen = () => {\n  return (\n    <MapsProvider>\n      <Body>\n        <NavBar />\n        <Switch>\n          <ProtectedRoute path={'/admin/add-course'}>\n            <AddCourseScreen />\n          </ProtectedRoute>\n          <ProtectedRoute path={'/admin/edit-course/:courseId'}>\n            <EditCourseScreen />\n          </ProtectedRoute>\n          <ProtectedRoute path={'/'}>\n            <DashboardScreen />\n          </ProtectedRoute>\n        </Switch>\n      </Body>\n    </MapsProvider>\n  )\n}\n\nexport default AdminScreen\n","import {isEqual, omit, uniqBy} from 'lodash'\n\nimport {FieldPolicy} from '@apollo/client'\n\nconst policy: FieldPolicy<any, any, any> = {\n  keyArgs: false,\n  read: ({cachedItem} = {}) => {\n    return cachedItem\n  },\n  merge: (prev = {}, incoming, {args}) => {\n    const stableArgs = omit(args, ['continuationToken'])\n\n    if (!args?.continuationToken || !isEqual(prev.args, stableArgs)) {\n      return {args: stableArgs, cachedItem: incoming}\n    }\n\n    return {\n      args: stableArgs,\n      cachedItem: {\n        ...incoming,\n        data: uniqBy(\n          [...(prev?.cachedItem?.data ?? []), ...incoming.data],\n          '__ref'\n        )\n      }\n    }\n  }\n}\n\nexport default policy\n","import {FieldPolicy} from '@apollo/client'\n\nconst policy: FieldPolicy<any, any, any> = {\n  merge(_, incoming) {\n    return incoming\n  }\n}\n\nexport default policy\n","import {FieldPolicy} from '@apollo/client'\nimport {uniqBy} from 'lodash'\n\nconst policy: FieldPolicy<any, any, any> = {\n  merge(existing = [], incoming) {\n    return uniqBy([...existing, ...incoming], '__ref')\n  }\n}\n\nexport default policy\n","import {FieldPolicy} from '@apollo/client'\n\nconst policy: FieldPolicy<any, any, any> = {\n  keyArgs: [\n    'input',\n    [\n      'term',\n      'courseIds',\n      'isAscending',\n      'teeTime',\n      ['from', 'to'],\n      'communityIds'\n    ]\n  ]\n}\n\nexport default policy\n","import {ApolloClient, InMemoryCache} from '@apollo/client'\nimport {\n  mergePolicy,\n  paginatedGamesPolicy,\n  paginationPolicy,\n  replacePolicy\n} from './utils'\n\nimport {BatchHttpLink} from '@apollo/client/link/batch-http'\nimport {error} from 'services/logging'\nimport {onError} from '@apollo/client/link/error'\nimport {setContext} from '@apollo/client/link/context'\nimport {uniqBy} from 'lodash'\n\nconst createClient = (\n  url: string,\n  getToken: () => Promise<string | undefined>\n) => {\n  const httpLink = new BatchHttpLink({\n    uri: url\n  })\n\n  const authLink = setContext(async (_, {headers}) => {\n    const token = await getToken()\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    }\n  })\n\n  const errorLink = onError(({graphQLErrors, networkError}) => {\n    if (graphQLErrors) graphQLErrors.forEach(e => error(e))\n    if (networkError) error(networkError)\n  })\n\n  const client = new ApolloClient({\n    link: errorLink.concat(authLink).concat(httpLink),\n    cache: new InMemoryCache({\n      typePolicies: {\n        PostCommentOfPlayer: {\n          fields: {\n            replies: paginationPolicy,\n            reactions: replacePolicy\n          }\n        },\n        PostOfPlayer: {\n          fields: {\n            comments: paginationPolicy,\n            reactions: replacePolicy\n          }\n        },\n        Player: {\n          fields: {\n            playerTypes: replacePolicy,\n            preferredGameTypes: replacePolicy,\n            preferredPlayerTypes: replacePolicy,\n            preferredCourses: replacePolicy,\n            communities: replacePolicy,\n            gameInvitations: replacePolicy,\n            games: paginatedGamesPolicy,\n            posts: paginationPolicy\n          }\n        },\n        PostCommentOfCommunity: {\n          fields: {\n            replies: paginationPolicy,\n            reactions: replacePolicy\n          }\n        },\n        PostOfCommunity: {\n          fields: {\n            comments: paginationPolicy,\n            reactions: replacePolicy\n          }\n        },\n        Community: {\n          fields: {\n            posts: paginationPolicy,\n            admins: replacePolicy\n          }\n        },\n        Game: {\n          fields: {\n            players: replacePolicy,\n            invitations: replacePolicy\n          }\n        },\n        PaginatedResultsOfGame: {\n          fields: {\n            data: mergePolicy\n          }\n        },\n        Course: {\n          fields: {\n            physicalAddress: replacePolicy\n          }\n        },\n        PhysicalAddress: {\n          keyFields: [\n            'countryCode',\n            'postCode',\n            'province',\n            'street',\n            'streetNumber',\n            'suburb'\n          ]\n        },\n        Query: {\n          fields: {\n            communities: paginationPolicy,\n            games: paginatedGamesPolicy,\n            courses: replacePolicy,\n            chat: replacePolicy,\n            feed: paginationPolicy,\n            // Ensures that all agenda items are merged into one big array\n            // i.e. We never overwrite records\n            agenda: {\n              keyArgs: false,\n              merge(existing = [], incoming) {\n                return uniqBy([...existing, ...incoming], '__ref')\n              }\n            }\n          }\n        }\n      }\n    })\n  })\n  return client\n}\n\nexport default createClient\n","import {useEffect, useState} from 'react'\n\nimport {useConfig} from 'services/config'\n\nconst useApiVersion = () => {\n  const config = useConfig()\n  const [version, setVersion] = useState<number | undefined>()\n\n  useEffect(() => {\n    fetch(`${config.getString('ApiUrl')}health`)\n      .then(\n        response => response.json(),\n        err => {\n          console.error(err)\n        }\n      )\n      .then(data => setVersion(data.version))\n  }, [config])\n  return version\n}\n\nexport default useApiVersion\n","import {\n  ApolloClient,\n  ApolloProvider,\n  NormalizedCacheObject\n} from '@apollo/client'\nimport {useEffect, useRef, useState} from 'react'\n\nimport {ApiProviderProps} from './ApiProviderProps'\nimport MIN_SUPPORTED_API_VERSION from './MIN_SUPPORTED_API_VERSION'\nimport createClient from './createClient'\nimport useApiVersion from './useApiVersion'\nimport {useAuthContext} from 'services/auth'\nimport {useConfig} from 'services/config'\n\nconst ApiProvider = ({children}: ApiProviderProps) => {\n  const authContext = useAuthContext()\n  const clientRef = useRef<ApolloClient<NormalizedCacheObject>>()\n  const [ready, setReady] = useState(false)\n  const config = useConfig()\n  const currentVersion = useApiVersion()\n\n  useEffect(() => {\n    setReady(false)\n    if (authContext.authenticated) {\n      clientRef.current = createClient(\n        config.getString('ApiUrl'),\n        authContext.getToken\n      )\n      setReady(true)\n    } else if (clientRef.current) {\n      clientRef.current.clearStore()\n    }\n  }, [authContext, currentVersion, clientRef, config])\n\n  if (currentVersion && MIN_SUPPORTED_API_VERSION < currentVersion) {\n    return <></>\n  } else if (ready) {\n    return (\n      <ApolloProvider client={clientRef.current!}>{children}</ApolloProvider>\n    )\n  } else {\n    return <></>\n  }\n}\n\nexport default ApiProvider\n","const MIN_SUPPORTED_API_VERSION = 1\nexport default MIN_SUPPORTED_API_VERSION\n","import React from 'react'\nimport {ScreenShotProps} from './ScreenShotProps'\n\nconst ScreenShot = ({src}: ScreenShotProps) => {\n  return (\n    <img\n      className={'object-fill bg-center bg-contain bg-clip-content'}\n      src={src}\n      alt={'Screenshot'}\n    />\n  )\n}\n\nexport default ScreenShot\n","const TopMenu = () => {\n  return (\n    <div className={'flex w-full h-20 items-center text-white'}>\n      <div className={'container mx-auto flex justify-end items-center'}>\n        <ul className={'mr-9 divide-x'}>\n          <li className={'float-left px-4'}>\n            <a href={'https://golfsidekick.com/'}>About</a>\n          </li>\n          <li className={'float-left px-4'}>\n            <a href={'https://golfsidekick.com/'}>Contact</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default TopMenu\n","export default __webpack_public_path__ + \"static/media/apple.8c4986ee.svg\";","export default __webpack_public_path__ + \"static/media/google.f902960a.png\";","export default __webpack_public_path__ + \"static/media/screenshot-1.80287c61.png\";","import {Body} from 'components/body'\nimport React from 'react'\nimport {ScreenShot} from 'components/screen-shot'\nimport {TopMenu} from 'components/top-menu'\nimport apple from 'assets/apple.svg'\nimport classNames from 'classnames'\nimport google from 'assets/google.png'\nimport screenshot1 from 'assets/screenshot-1.png'\n\nconst googleLink =\n  'https://play.google.com/store/apps/details?id=com.golfsidekick'\nconst appleLink = 'https://testflight.apple.com/join/t6ys2guf'\n\nconst Section = ({\n  children,\n  className\n}: {\n  children: React.ReactNode | React.ReactNodeArray\n  className?: string\n}) => {\n  return (\n    <div\n      className={classNames(\n        'flex',\n        'flex-col',\n        'md:flex-row',\n        'flex-wrap',\n        'justify-center',\n        'items-center',\n        'py-9',\n        className\n      )}>\n      {children}\n    </div>\n  )\n}\n\nconst Break = ({inverse = false}: {inverse?: boolean}) => {\n  return (\n    <svg className={'fill-current text-white'} viewBox={'0 0 100 5'}>\n      {inverse ? (\n        <polygon points=\"100,0 0,0 0,5\" />\n      ) : (\n        <polygon points=\"100,0 100,5 0,5\" />\n      )}\n    </svg>\n  )\n}\n\nconst LandingScreen = () => {\n  return (\n    <Body>\n      <TopMenu />\n      <Section>\n        <div className={'flex flex-col items-center text-white'}>\n          <div className={'w-7/12 text-center'}>\n            <h1 className={'text-6xl lg:text-8xl font-black mb-6 text-shadow'}>\n              Welcome Playa!\n            </h1>\n            <h2 className={'text-lg font-normal mb-12 text-shadow'}>\n              Plan golf games with like minded strangers to build a community of\n              new friends.\n            </h2>\n            <div className={'flex flex-row justify-center items-endmt-4'}>\n              <a href={googleLink}>\n                <img\n                  className={'object-contain max-h-16'}\n                  src={google}\n                  alt={'Google Play Store'}\n                />\n              </a>\n              <a href={appleLink}>\n                <img\n                  className={'object-contain max-h-16 p-3'}\n                  src={apple}\n                  alt={'Apple App Store'}\n                />\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className={'pt-9 lg:pt-0 flex items-center justify-center'}>\n          <div className={'max-w-xs'}>\n            <ScreenShot src={screenshot1} />\n          </div>\n        </div>\n      </Section>\n      <Break />\n      <footer className=\"p-10 footer footer-center bg-white\">\n        <div>\n          <span className=\"footer-title\">Company</span>\n          <a className=\"link link-hover\" href={'https://golfsidekick.com/'}>\n            About us\n          </a>\n          <a className=\"link link-hover\" href={'https://golfsidekick.com/'}>\n            Contact\n          </a>\n        </div>\n        <div>\n          <span className=\"footer-title\">Legal</span>\n          <a className=\"link link-hover\" href={'eula.html'}>\n            End-User License Agreement\n          </a>\n          <a className=\"link link-hover\" href={'privacy-policy.html'}>\n            Privacy policy\n          </a>\n        </div>\n      </footer>\n    </Body>\n  )\n}\n\nexport default LandingScreen\n","import {\n  GoogleAuthProvider,\n  getAuth,\n  getRedirectResult,\n  signInWithRedirect\n} from 'firebase/auth'\nimport React, {useEffect, useState} from 'react'\n\nimport {Body} from 'components/body'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport classNames from 'classnames'\nimport {error} from 'services/logging'\nimport {faGoogle} from '@fortawesome/free-brands-svg-icons'\nimport {useAuthContext} from 'services/auth'\nimport {useHistory} from 'react-router'\n\nconst provider = new GoogleAuthProvider()\n\nconst LoginScreen = () => {\n  const auth = getAuth()\n  const history = useHistory()\n  const [busy, setBusy] = useState(true)\n  const {authenticated} = useAuthContext()\n  const login = () => !busy && signInWithRedirect(auth, provider)\n\n  useEffect(() => {\n    getRedirectResult(auth)\n      .then(() => {\n        setBusy(false)\n\n        if (authenticated) {\n          history.push('/admin')\n        }\n      })\n      .catch(e => error(e))\n  }, [auth, authenticated, history])\n\n  return (\n    <Body>\n      <div\n        className={classNames(\n          'flex mx-auto',\n          'bg-white',\n          'p-2',\n          'm-4',\n          'w-5/6',\n          'md:p-9',\n          'md:mt-9',\n          'lg:w-1/2',\n          'rounded-md',\n          'flex-col'\n        )}\n      >\n        <h1 className={classNames('text-xl', 'text-black', 'border-b', 'p-2')}>\n          Sign in\n        </h1>\n        <button\n          onClick={login}\n          className={classNames(\n            'btn',\n            'uppercase',\n            'h-12',\n            'mt-3',\n            'text-white',\n            'w-full',\n            'rounded',\n            'bg-red-800',\n            'hover:bg-red-900',\n            'flex items-center justify-center',\n            {loading: busy}\n          )}\n        >\n          <FontAwesomeIcon className={'mx-4'} icon={faGoogle} />\n          <span>Sign in with Google</span>\n        </button>\n      </div>\n    </Body>\n  )\n}\n\nexport default LoginScreen\n","import {Route, HashRouter as Router, Switch} from 'react-router-dom'\n\nimport {AboutScreen} from 'screens/about'\nimport {AdminScreen} from 'screens/admin'\nimport {ApiProvider} from 'services/api'\nimport {AuthProvider} from 'services/auth'\nimport {ConfigProvider} from 'services/config'\nimport {LandingScreen} from 'screens/landing'\nimport {LoginScreen} from 'screens/login'\nimport {ProtectedRoute} from 'components/protected-route'\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ConfigProvider>\n        <Router>\n          <Switch>\n            <Route path={'/about'}>\n              <AboutScreen />\n            </Route>\n            <Route path={'/login'}>\n              <LoginScreen />\n            </Route>\n            <ProtectedRoute path={'/admin'}>\n              <ApiProvider>\n                <AdminScreen />\n              </ApiProvider>\n            </ProtectedRoute>\n            <Route path={'/'}>\n              <LandingScreen />\n            </Route>\n          </Switch>\n        </Router>\n      </ConfigProvider>\n    </AuthProvider>\n  )\n}\n\nexport default App\n","const firebaseConfig = {\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  authDomain: 'golf-sidekick.firebaseapp.com',\n  databaseURL: 'https://golf-sidekick.firebaseio.com',\n  projectId: 'golf-sidekick',\n  storageBucket: 'golf-sidekick.appspot.com',\n  messagingSenderId: '15461388252',\n  appId: '1:15461388252:web:58e9212e603b8ddff38919',\n  measurementId: 'G-7K518K72FS'\n}\n\nexport default firebaseConfig\n","import firebaseConfig from './firebaseConfig'\nimport {initializeApp} from 'firebase/app'\n\nconst app = initializeApp(firebaseConfig)\n\nconst registerFirebaseApp = () => app\n\nexport default registerFirebaseApp\n","import {ReportHandler} from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import './index.css'\n\nimport App from './App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport {registerFirebaseApp} from 'services/firebase'\nimport reportWebVitals from './reportWebVitals'\n\nregisterFirebaseApp()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}