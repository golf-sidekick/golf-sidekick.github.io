{"version":3,"sources":["services/api/generated.tsx","screens/about/AboutScreen.tsx","components/body/Body.tsx","services/logging/info.ts","services/logging/error.ts","services/auth/AuthContext.ts","services/auth/AuthProvider.tsx","services/auth/useAuthContext.ts","services/config/ConfigProvider.tsx","services/config/useConfig.ts","state/media/useGetImageSource.ts","state/IMAGE_REF_FRAGMENT.ts","state/players/SELF_FRAGMENT.ts","state/players/useGetSelf.ts","screens/admin/AdminScreen.tsx","services/api/utils/paginationPolicy.ts","services/api/utils/replacePolicy.ts","services/api/utils/mergePolicy.ts","services/api/utils/paginatedGamesPolicy.ts","services/api/createClient.ts","services/api/useApiVersion.ts","services/api/ApiProvider.tsx","services/api/MIN_SUPPORTED_API_VERSION.ts","components/screen-shot/ScreenShot.tsx","components/top-menu/TopMenu.tsx","assets/apple.svg","assets/google.png","assets/screenshot-1.png","screens/landing/LandingScreen.tsx","screens/login/LoginScreen.tsx","components/protected-route/ProtectedRoute.tsx","App.tsx","services/firebase/firebaseConfig.ts","services/firebase/registerFirebaseApp.ts","reportWebVitals.ts","index.tsx"],"names":["CommunicationMethod","GamePlayerStatus","GameType","Holes","Permission","PlayerType","ReactionType","AboutScreen","Body","children","className","style","classNames","info","message","console","log","error","React","createContext","authenticating","authenticated","logout","Promise","resolve","getToken","AuthProvider","auth","getAuth","userRef","useRef","useState","state","setState","tryLogout","a","signOut","handleLogin","useCallback","user","current","handleLogout","useEffect","onAuthStateChanged","AuthContext","Provider","value","getIdToken","useAuthContext","useContext","ConfigProvider","ready","setReady","remoteConfig","getRemoteConfig","fetchAndActivate","init","useConfig","getString","key","getNumber","getBoolean","getValue","useGetImageSource","imageRef","width","config","source","setSource","baseUrl","token","fetch","ref","headers","Authorization","response","blob","arrayBuffer","base64","btoa","String","fromCharCode","Uint8Array","data","get","load","gql","IMAGE_REF_FRAGMENT","GET_SELF","SELF_FRAGMENT","useGetSelf","useQuery","notifyOnNetworkStatusChange","networkStatus","refetch","loading","NetworkStatus","AdminScreen","self","profileImageRef","xmlns","fill","viewBox","stroke-linecap","stroke-linejoin","stroke-width","d","name","type","placeholder","src","alt","onClick","policy","keyArgs","read","cachedItem","merge","prev","incoming","args","stableArgs","omit","continuationToken","isEqual","uniqBy","_","existing","createClient","url","httpLink","BatchHttpLink","uri","authLink","setContext","authorization","errorLink","onError","graphQLErrors","networkError","forEach","e","ApolloClient","link","concat","cache","InMemoryCache","typePolicies","PostCommentOfPlayer","fields","replies","paginationPolicy","reactions","replacePolicy","PostOfPlayer","comments","Player","playerTypes","preferredGameTypes","preferredPlayerTypes","preferredCourses","communities","gameInvitations","games","paginatedGamesPolicy","posts","PostCommentOfCommunity","PostOfCommunity","Community","admins","Game","players","invitations","PaginatedResultsOfGame","mergePolicy","Course","physicalAddress","PhysicalAddress","keyFields","Query","courses","chat","feed","agenda","useApiVersion","version","setVersion","then","json","err","ApiProvider","authContext","clientRef","currentVersion","clearStore","ApolloProvider","client","ScreenShot","TopMenu","href","Section","Break","inverse","points","LandingScreen","google","apple","screenshot1","provider","GoogleAuthProvider","LoginScreen","history","useHistory","busy","setBusy","getRedirectResult","push","catch","signInWithRedirect","icon","faGoogle","ProtectedRoute","props","to","App","path","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","registerFirebaseApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de1825cf.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `DateTime` scalar represents an ISO-8601 compliant date time type. */\n  DateTime: any;\n  /** The built-in `Decimal` scalar type. */\n  Decimal: any;\n  /** The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1. */\n  Long: any;\n  TimeSpan: any;\n  Uuid: any;\n};\n\nexport type AcceptGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type AgendaInput = {\n  communityIds?: Maybe<Array<Scalars['Uuid']>>;\n  courseIds?: Maybe<Array<Scalars['Uuid']>>;\n  month: Scalars['Int'];\n  year: Scalars['Int'];\n};\n\nexport type CancelGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type CancelGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type CancelGameTeeTimeInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type ChangeGameHostInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type Chat = {\n  __typename?: 'Chat';\n  token: Scalars['String'];\n};\n\nexport enum CommunicationMethod {\n  Email = 'EMAIL',\n  Pushnotifications = 'PUSHNOTIFICATIONS'\n}\n\nexport type Community = {\n  __typename?: 'Community';\n  admins?: Maybe<Array<Maybe<Player>>>;\n  id: Scalars['Uuid'];\n  initials?: Maybe<Scalars['String']>;\n  isMember: Scalars['Boolean'];\n  memberCount: Scalars['Long'];\n  members?: Maybe<PaginatedResultsOfCommunityMember>;\n  name: Scalars['String'];\n  postCount: Scalars['Int'];\n  posts?: Maybe<PaginatedResultsOfPostOfCommunity>;\n  profileImageRef?: Maybe<ImageRef>;\n};\n\n\nexport type CommunityMembersArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type CommunityPostsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type CommunityMember = {\n  __typename?: 'CommunityMember';\n  id: Scalars['Uuid'];\n  isAdmin: Scalars['Boolean'];\n  joinedOn: Scalars['DateTime'];\n  player?: Maybe<Player>;\n};\n\nexport type CommunityPostCommentReactionFeedEntry = IFeedEntry & {\n  __typename?: 'CommunityPostCommentReactionFeedEntry';\n  comment?: Maybe<PostCommentOfCommunity>;\n  community?: Maybe<Community>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type CommunityPostFeedEntry = IFeedEntry & {\n  __typename?: 'CommunityPostFeedEntry';\n  community?: Maybe<Community>;\n  id: Scalars['Uuid'];\n  post?: Maybe<PostOfCommunity>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type CommunityPostReactionFeedEntry = IFeedEntry & {\n  __typename?: 'CommunityPostReactionFeedEntry';\n  community?: Maybe<Community>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  post?: Maybe<PostOfCommunity>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type ConfirmGamePlayerInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type ConfirmGameTeeTimeInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type Coordinates = {\n  __typename?: 'Coordinates';\n  lat: Scalars['Decimal'];\n  lon: Scalars['Decimal'];\n};\n\nexport type CoordinatesInput = {\n  lat: Scalars['Decimal'];\n  lon: Scalars['Decimal'];\n};\n\nexport type Course = {\n  __typename?: 'Course';\n  description: Scalars['String'];\n  emailAddress: Scalars['String'];\n  id: Scalars['Uuid'];\n  name: Scalars['String'];\n  physicalAddress: PhysicalAddress;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  telephoneNumber: TelephoneNumber;\n  timezone?: Maybe<Timezone>;\n};\n\nexport type CreateCommunityCommentReactionInput = {\n  commentId: Scalars['Uuid'];\n  communityId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreateCommunityInput = {\n  name: Scalars['String'];\n};\n\nexport type CreateCommunityPostCommentInput = {\n  body?: Maybe<Scalars['String']>;\n  communityId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n  postId: Scalars['Uuid'];\n};\n\nexport type CreateCommunityPostCommentReplyInput = {\n  body?: Maybe<Scalars['String']>;\n  commentId: Scalars['Uuid'];\n  communityId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n};\n\nexport type CreateCommunityPostInput = {\n  body?: Maybe<Scalars['String']>;\n  communityId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n};\n\nexport type CreateCommunityPostReactionInput = {\n  communityId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreateCourseReactionInput = {\n  courseId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreateGameInput = {\n  automaticallyConfirmTeeTime?: Maybe<Scalars['Boolean']>;\n  communityIds: Array<Scalars['Uuid']>;\n  courseId: Scalars['Uuid'];\n  gameType: GameType;\n  holes: Holes;\n  isHostPlaying?: Maybe<Scalars['Boolean']>;\n  numberOfPlayers: Scalars['Int'];\n  teeTime: DateTimeInfoInput;\n};\n\nexport type CreateGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type CreateGameReactionInput = {\n  gameId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreatePlayerCommentReactionInput = {\n  commentId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type CreatePlayerPostCommentInput = {\n  body?: Maybe<Scalars['String']>;\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n  playerId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n};\n\nexport type CreatePlayerPostCommentReplyInput = {\n  body?: Maybe<Scalars['String']>;\n  commentId: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n  playerId: Scalars['Uuid'];\n};\n\nexport type CreatePlayerPostInput = {\n  body?: Maybe<Scalars['String']>;\n  imageRefs?: Maybe<Array<Maybe<ImageRefInput>>>;\n};\n\nexport type CreatePlayerPostReactionInput = {\n  playerId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type DateRangeInput = {\n  from?: Maybe<Scalars['DateTime']>;\n  to?: Maybe<Scalars['DateTime']>;\n};\n\nexport type DateTimeInfoInput = {\n  day: Scalars['Int'];\n  hour: Scalars['Int'];\n  minute: Scalars['Int'];\n  month: Scalars['Int'];\n  year: Scalars['Int'];\n};\n\nexport type DeclineGameInvitationInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type DeclineGamePlayerInput = {\n  gameId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type DiscardPlayerGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type FollowPlayerInput = {\n  playerId: Scalars['Uuid'];\n};\n\nexport type Game = {\n  __typename?: 'Game';\n  communities?: Maybe<Array<Maybe<Community>>>;\n  course?: Maybe<Course>;\n  gameType: GameType;\n  holes: Holes;\n  host?: Maybe<Player>;\n  id: Scalars['Uuid'];\n  invitations?: Maybe<Array<Maybe<GameInvitation>>>;\n  isCancelled: Scalars['Boolean'];\n  isHost: Scalars['Boolean'];\n  isPlaying: Scalars['Boolean'];\n  myStatus?: Maybe<GamePlayerStatus>;\n  numberOfPlayers: Scalars['Int'];\n  playerCount: Scalars['Int'];\n  players?: Maybe<Array<Maybe<GamePlayer>>>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  teeTime: TeeTime;\n};\n\nexport type GameFeedEntry = IFeedEntry & {\n  __typename?: 'GameFeedEntry';\n  game?: Maybe<Game>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type GameInvitation = {\n  __typename?: 'GameInvitation';\n  createdOn: Scalars['DateTime'];\n  player?: Maybe<Player>;\n};\n\nexport type GamePlayer = {\n  __typename?: 'GamePlayer';\n  id: Scalars['Uuid'];\n  isHost: Scalars['Boolean'];\n  joinedOn: Scalars['DateTime'];\n  player?: Maybe<Player>;\n  status: GamePlayerStatus;\n};\n\nexport enum GamePlayerStatus {\n  Confirmed = 'CONFIRMED',\n  Declined = 'DECLINED',\n  Pendingconfirmation = 'PENDINGCONFIRMATION',\n  Standby = 'STANDBY'\n}\n\nexport enum GameType {\n  Competitivesingle = 'COMPETITIVESINGLE',\n  Competitiveteam = 'COMPETITIVETEAM',\n  Moneygame = 'MONEYGAME',\n  Social = 'SOCIAL',\n  Tournament = 'TOURNAMENT'\n}\n\nexport type GamesSearchInput = {\n  communityIds?: Maybe<Array<Scalars['Uuid']>>;\n  courseIds?: Maybe<Array<Scalars['Uuid']>>;\n  isAscending?: Maybe<Scalars['Boolean']>;\n  teeTime?: Maybe<DateRangeInput>;\n  term?: Maybe<Scalars['String']>;\n};\n\nexport enum Holes {\n  Eighteenholes = 'EIGHTEENHOLES',\n  Nineholes = 'NINEHOLES'\n}\n\nexport type IFeedEntry = {\n  id: Scalars['Uuid'];\n  timestamp: Scalars['DateTime'];\n};\n\nexport type ImageRef = {\n  __typename?: 'ImageRef';\n  height: Scalars['Int'];\n  ref?: Maybe<Scalars['String']>;\n  width: Scalars['Int'];\n};\n\nexport type ImageRefInput = {\n  filename?: Maybe<Scalars['String']>;\n  height: Scalars['Int'];\n  width: Scalars['Int'];\n};\n\nexport type JoinCommunityInput = {\n  communityId: Scalars['Uuid'];\n};\n\nexport type JoinGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type LeaveCommunityInput = {\n  communityId: Scalars['Uuid'];\n};\n\nexport type LeaveGameInput = {\n  gameId: Scalars['Uuid'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  acceptGameInvitation?: Maybe<Player>;\n  cancelGame?: Maybe<Game>;\n  cancelGameInvitation?: Maybe<Game>;\n  cancelGameTeeTime?: Maybe<Game>;\n  changeGameHost?: Maybe<Game>;\n  confirmGamePlayer?: Maybe<Game>;\n  confirmGameTeeTime?: Maybe<Game>;\n  createCommunity?: Maybe<Community>;\n  createCommunityCommentReaction?: Maybe<PostCommentOfCommunity>;\n  createCommunityPost?: Maybe<PostOfCommunity>;\n  createCommunityPostComment?: Maybe<PostOfCommunity>;\n  createCommunityPostCommentReply?: Maybe<PostCommentOfCommunity>;\n  createCommunityPostReaction?: Maybe<PostOfCommunity>;\n  createCourse?: Maybe<Course>;\n  createCourseReaction?: Maybe<Course>;\n  createGame?: Maybe<Game>;\n  createGameInvitation?: Maybe<Game>;\n  createGameReaction?: Maybe<Game>;\n  createPlayerCommentReaction?: Maybe<PostCommentOfPlayer>;\n  createPlayerPost?: Maybe<PostOfPlayer>;\n  createPlayerPostComment?: Maybe<PostOfPlayer>;\n  createPlayerPostCommentReply?: Maybe<PostCommentOfPlayer>;\n  createPlayerPostReaction?: Maybe<PostOfPlayer>;\n  declineGameInvitation?: Maybe<Player>;\n  declineGamePlayer?: Maybe<Game>;\n  discardPlayerGame?: Maybe<Player>;\n  followPlayer?: Maybe<Player>;\n  joinCommunity?: Maybe<Player>;\n  joinGame?: Maybe<Game>;\n  leaveCommunity?: Maybe<Player>;\n  leaveGame?: Maybe<Game>;\n  registerPlayer?: Maybe<Player>;\n  registerPlayerFcmToken?: Maybe<Player>;\n  removeCourseReaction?: Maybe<Course>;\n  removeGameReaction?: Maybe<Game>;\n  reportAbuse?: Maybe<Player>;\n  setCommunityAdmins?: Maybe<Community>;\n  setCommunityProfileImageRef?: Maybe<Community>;\n  setNotificationPreferences?: Maybe<Player>;\n  setPlayerProfileImageRef?: Maybe<Player>;\n  unfollowPlayer?: Maybe<Player>;\n  updateCommunity?: Maybe<Community>;\n  updateGame?: Maybe<Game>;\n  updatePlayer?: Maybe<Player>;\n  updatePlayerCoursePreferences?: Maybe<Player>;\n  updatePlayerGamePreferences?: Maybe<Player>;\n  updatePlayerHandicap?: Maybe<Player>;\n  updatePlayerPreferences?: Maybe<Player>;\n};\n\n\nexport type MutationAcceptGameInvitationArgs = {\n  input?: Maybe<AcceptGameInvitationInput>;\n};\n\n\nexport type MutationCancelGameArgs = {\n  input?: Maybe<CancelGameInput>;\n};\n\n\nexport type MutationCancelGameInvitationArgs = {\n  input?: Maybe<CancelGameInvitationInput>;\n};\n\n\nexport type MutationCancelGameTeeTimeArgs = {\n  input?: Maybe<CancelGameTeeTimeInput>;\n};\n\n\nexport type MutationChangeGameHostArgs = {\n  input?: Maybe<ChangeGameHostInput>;\n};\n\n\nexport type MutationConfirmGamePlayerArgs = {\n  input?: Maybe<ConfirmGamePlayerInput>;\n};\n\n\nexport type MutationConfirmGameTeeTimeArgs = {\n  input?: Maybe<ConfirmGameTeeTimeInput>;\n};\n\n\nexport type MutationCreateCommunityArgs = {\n  input?: Maybe<CreateCommunityInput>;\n};\n\n\nexport type MutationCreateCommunityCommentReactionArgs = {\n  input?: Maybe<CreateCommunityCommentReactionInput>;\n};\n\n\nexport type MutationCreateCommunityPostArgs = {\n  input?: Maybe<CreateCommunityPostInput>;\n};\n\n\nexport type MutationCreateCommunityPostCommentArgs = {\n  input?: Maybe<CreateCommunityPostCommentInput>;\n};\n\n\nexport type MutationCreateCommunityPostCommentReplyArgs = {\n  input?: Maybe<CreateCommunityPostCommentReplyInput>;\n};\n\n\nexport type MutationCreateCommunityPostReactionArgs = {\n  input?: Maybe<CreateCommunityPostReactionInput>;\n};\n\n\nexport type MutationCreateCourseArgs = {\n  input?: Maybe<UpsertCourseInput>;\n};\n\n\nexport type MutationCreateCourseReactionArgs = {\n  input?: Maybe<CreateCourseReactionInput>;\n};\n\n\nexport type MutationCreateGameArgs = {\n  input?: Maybe<CreateGameInput>;\n};\n\n\nexport type MutationCreateGameInvitationArgs = {\n  input?: Maybe<CreateGameInvitationInput>;\n};\n\n\nexport type MutationCreateGameReactionArgs = {\n  input?: Maybe<CreateGameReactionInput>;\n};\n\n\nexport type MutationCreatePlayerCommentReactionArgs = {\n  input?: Maybe<CreatePlayerCommentReactionInput>;\n};\n\n\nexport type MutationCreatePlayerPostArgs = {\n  input?: Maybe<CreatePlayerPostInput>;\n};\n\n\nexport type MutationCreatePlayerPostCommentArgs = {\n  input?: Maybe<CreatePlayerPostCommentInput>;\n};\n\n\nexport type MutationCreatePlayerPostCommentReplyArgs = {\n  input?: Maybe<CreatePlayerPostCommentReplyInput>;\n};\n\n\nexport type MutationCreatePlayerPostReactionArgs = {\n  input?: Maybe<CreatePlayerPostReactionInput>;\n};\n\n\nexport type MutationDeclineGameInvitationArgs = {\n  input?: Maybe<DeclineGameInvitationInput>;\n};\n\n\nexport type MutationDeclineGamePlayerArgs = {\n  input?: Maybe<DeclineGamePlayerInput>;\n};\n\n\nexport type MutationDiscardPlayerGameArgs = {\n  input?: Maybe<DiscardPlayerGameInput>;\n};\n\n\nexport type MutationFollowPlayerArgs = {\n  input?: Maybe<FollowPlayerInput>;\n};\n\n\nexport type MutationJoinCommunityArgs = {\n  input?: Maybe<JoinCommunityInput>;\n};\n\n\nexport type MutationJoinGameArgs = {\n  input?: Maybe<JoinGameInput>;\n};\n\n\nexport type MutationLeaveCommunityArgs = {\n  input?: Maybe<LeaveCommunityInput>;\n};\n\n\nexport type MutationLeaveGameArgs = {\n  input?: Maybe<LeaveGameInput>;\n};\n\n\nexport type MutationRegisterPlayerArgs = {\n  input?: Maybe<RegisterPlayerInput>;\n};\n\n\nexport type MutationRegisterPlayerFcmTokenArgs = {\n  input?: Maybe<RegisterPlayerFcmTokenInput>;\n};\n\n\nexport type MutationRemoveCourseReactionArgs = {\n  input?: Maybe<RemoveReactionInput>;\n};\n\n\nexport type MutationRemoveGameReactionArgs = {\n  input?: Maybe<RemoveReactionInput>;\n};\n\n\nexport type MutationReportAbuseArgs = {\n  input?: Maybe<ReportAbuseInput>;\n};\n\n\nexport type MutationSetCommunityAdminsArgs = {\n  input?: Maybe<SetCommunityAdminsInput>;\n};\n\n\nexport type MutationSetCommunityProfileImageRefArgs = {\n  input?: Maybe<SetCommunityProfileImageRefInput>;\n};\n\n\nexport type MutationSetNotificationPreferencesArgs = {\n  input?: Maybe<SetNotificationPreferencesInput>;\n};\n\n\nexport type MutationSetPlayerProfileImageRefArgs = {\n  input?: Maybe<ImageRefInput>;\n};\n\n\nexport type MutationUnfollowPlayerArgs = {\n  input?: Maybe<UnfollowPlayerInput>;\n};\n\n\nexport type MutationUpdateCommunityArgs = {\n  input?: Maybe<UpdateCommunityInput>;\n};\n\n\nexport type MutationUpdateGameArgs = {\n  input?: Maybe<UpdateGameInput>;\n};\n\n\nexport type MutationUpdatePlayerArgs = {\n  input?: Maybe<UpdatePlayerInput>;\n};\n\n\nexport type MutationUpdatePlayerCoursePreferencesArgs = {\n  input?: Maybe<UpdatePlayerCoursePreferencesInput>;\n};\n\n\nexport type MutationUpdatePlayerGamePreferencesArgs = {\n  input?: Maybe<UpdatePlayerGamePreferencesInput>;\n};\n\n\nexport type MutationUpdatePlayerHandicapArgs = {\n  input?: Maybe<UpdatePlayerHandicapInput>;\n};\n\n\nexport type MutationUpdatePlayerPreferencesArgs = {\n  input?: Maybe<UpdatePlayerPreferencesInput>;\n};\n\nexport type NotificationPreference = {\n  __typename?: 'NotificationPreference';\n  communicationMethods: Array<CommunicationMethod>;\n  eventType: Scalars['String'];\n};\n\nexport type NotificationPreferenceInput = {\n  communicationMethods: Array<CommunicationMethod>;\n  eventType: Scalars['String'];\n};\n\nexport type PaginatedResultsOfCommunity = {\n  __typename?: 'PaginatedResultsOfCommunity';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Community>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfCommunityMember = {\n  __typename?: 'PaginatedResultsOfCommunityMember';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<CommunityMember>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfCourse = {\n  __typename?: 'PaginatedResultsOfCourse';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Course>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfGame = {\n  __typename?: 'PaginatedResultsOfGame';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Game>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfIFeedEntry = {\n  __typename?: 'PaginatedResultsOfIFeedEntry';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<IFeedEntry>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPlayer = {\n  __typename?: 'PaginatedResultsOfPlayer';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<Player>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostCommentOfCommunity = {\n  __typename?: 'PaginatedResultsOfPostCommentOfCommunity';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostCommentOfCommunity>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostCommentOfPlayer = {\n  __typename?: 'PaginatedResultsOfPostCommentOfPlayer';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostCommentOfPlayer>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostOfCommunity = {\n  __typename?: 'PaginatedResultsOfPostOfCommunity';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostOfCommunity>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfPostOfPlayer = {\n  __typename?: 'PaginatedResultsOfPostOfPlayer';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<PostOfPlayer>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport type PaginatedResultsOfReactionDetail = {\n  __typename?: 'PaginatedResultsOfReactionDetail';\n  continuationToken?: Maybe<Scalars['String']>;\n  data: Array<ReactionDetail>;\n  total?: Maybe<Scalars['Long']>;\n};\n\nexport enum Permission {\n  Createcommunity = 'CREATECOMMUNITY',\n  Creategame = 'CREATEGAME',\n  Createpost = 'CREATEPOST',\n  Createpostcomment = 'CREATEPOSTCOMMENT'\n}\n\nexport type PhysicalAddress = {\n  __typename?: 'PhysicalAddress';\n  coordinates: Coordinates;\n  countryCode: Scalars['String'];\n  postCode: Scalars['String'];\n  province: Scalars['String'];\n  street: Scalars['String'];\n  streetNumber: Scalars['String'];\n  suburb: Scalars['String'];\n};\n\nexport type PhysicalAddressInput = {\n  coordinates: CoordinatesInput;\n  countryCode: Scalars['String'];\n  postCode: Scalars['String'];\n  province: Scalars['String'];\n  street: Scalars['String'];\n  streetNumber: Scalars['String'];\n  suburb: Scalars['String'];\n};\n\nexport type Player = {\n  __typename?: 'Player';\n  communities?: Maybe<Array<Maybe<Community>>>;\n  countryCode?: Maybe<Scalars['String']>;\n  followers?: Maybe<PaginatedResultsOfPlayer>;\n  followersCount: Scalars['Int'];\n  following?: Maybe<PaginatedResultsOfPlayer>;\n  followingCount: Scalars['Int'];\n  gameInvitations?: Maybe<Array<Maybe<PlayerGameInvitation>>>;\n  games?: Maybe<PaginatedResultsOfGame>;\n  handicap: Scalars['Int'];\n  id: Scalars['Uuid'];\n  initials?: Maybe<Scalars['String']>;\n  isFollower: Scalars['Boolean'];\n  isFollowing: Scalars['Boolean'];\n  isRegistered: Scalars['Boolean'];\n  isSelf: Scalars['Boolean'];\n  name?: Maybe<Scalars['String']>;\n  notificationPreferences?: Maybe<Array<Maybe<NotificationPreference>>>;\n  permissions?: Maybe<Array<Permission>>;\n  playerTypes: Array<PlayerType>;\n  postCount: Scalars['Int'];\n  posts?: Maybe<PaginatedResultsOfPostOfPlayer>;\n  preferredCourses?: Maybe<Array<Maybe<Course>>>;\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n  profileImageRef?: Maybe<ImageRef>;\n};\n\n\nexport type PlayerFollowersArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PlayerFollowingArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PlayerGamesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  input?: Maybe<GamesSearchInput>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PlayerPostsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PlayerGameInvitation = {\n  __typename?: 'PlayerGameInvitation';\n  createdBy?: Maybe<Player>;\n  createdOn: Scalars['DateTime'];\n  game?: Maybe<Game>;\n};\n\nexport type PlayerPostCommentReactionFeedEntry = IFeedEntry & {\n  __typename?: 'PlayerPostCommentReactionFeedEntry';\n  comment?: Maybe<PostCommentOfPlayer>;\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type PlayerPostFeedEntry = IFeedEntry & {\n  __typename?: 'PlayerPostFeedEntry';\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  post?: Maybe<PostOfPlayer>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport type PlayerPostReactionFeedEntry = IFeedEntry & {\n  __typename?: 'PlayerPostReactionFeedEntry';\n  id: Scalars['Uuid'];\n  player?: Maybe<Player>;\n  post?: Maybe<PostOfPlayer>;\n  timestamp: Scalars['DateTime'];\n};\n\nexport enum PlayerType {\n  Beginner = 'BEGINNER',\n  Matchplay = 'MATCHPLAY',\n  Relaxed = 'RELAXED',\n  Social = 'SOCIAL'\n}\n\nexport type PlayersSearchInput = {\n  term?: Maybe<Scalars['String']>;\n};\n\nexport type PostCommentOfCommunity = {\n  __typename?: 'PostCommentOfCommunity';\n  author?: Maybe<Player>;\n  body?: Maybe<Scalars['String']>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  replies?: Maybe<PaginatedResultsOfPostCommentOfCommunity>;\n  replyCount: Scalars['Int'];\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostCommentOfCommunityReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostCommentOfCommunityRepliesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PostCommentOfPlayer = {\n  __typename?: 'PostCommentOfPlayer';\n  author?: Maybe<Player>;\n  body?: Maybe<Scalars['String']>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  replies?: Maybe<PaginatedResultsOfPostCommentOfPlayer>;\n  replyCount: Scalars['Int'];\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostCommentOfPlayerReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostCommentOfPlayerRepliesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PostOfCommunity = {\n  __typename?: 'PostOfCommunity';\n  author?: Maybe<Community>;\n  body?: Maybe<Scalars['String']>;\n  commentCount: Scalars['Int'];\n  comments?: Maybe<PaginatedResultsOfPostCommentOfCommunity>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostOfCommunityCommentsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostOfCommunityReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type PostOfPlayer = {\n  __typename?: 'PostOfPlayer';\n  author?: Maybe<Player>;\n  body?: Maybe<Scalars['String']>;\n  commentCount: Scalars['Int'];\n  comments?: Maybe<PaginatedResultsOfPostCommentOfPlayer>;\n  id: Scalars['Uuid'];\n  imageRefs?: Maybe<Array<Maybe<ImageRef>>>;\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionDetails?: Maybe<PaginatedResultsOfReactionDetail>;\n  reactions?: Maybe<Array<Maybe<Reaction>>>;\n  timestamp: Scalars['DateTime'];\n};\n\n\nexport type PostOfPlayerCommentsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type PostOfPlayerReactionDetailsArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  agenda?: Maybe<Array<Maybe<Game>>>;\n  chat?: Maybe<Chat>;\n  communities?: Maybe<PaginatedResultsOfCommunity>;\n  community?: Maybe<Community>;\n  communityPost?: Maybe<PostOfCommunity>;\n  communityPostComment?: Maybe<PostCommentOfCommunity>;\n  course?: Maybe<Course>;\n  courses?: Maybe<PaginatedResultsOfCourse>;\n  feed?: Maybe<PaginatedResultsOfIFeedEntry>;\n  game?: Maybe<Game>;\n  games?: Maybe<PaginatedResultsOfGame>;\n  player?: Maybe<Player>;\n  playerPost?: Maybe<PostOfPlayer>;\n  playerPostComment?: Maybe<PostCommentOfPlayer>;\n  players?: Maybe<PaginatedResultsOfPlayer>;\n};\n\n\nexport type QueryAgendaArgs = {\n  input?: Maybe<AgendaInput>;\n};\n\n\nexport type QueryChatArgs = {\n  platform?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCommunitiesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n  term?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCommunityArgs = {\n  communityId: Scalars['Uuid'];\n};\n\n\nexport type QueryCommunityPostArgs = {\n  communityId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n};\n\n\nexport type QueryCommunityPostCommentArgs = {\n  commentId: Scalars['Uuid'];\n  communityId: Scalars['Uuid'];\n};\n\n\nexport type QueryCourseArgs = {\n  courseId: Scalars['Uuid'];\n};\n\n\nexport type QueryCoursesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n  term?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeedArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type QueryGameArgs = {\n  gameId: Scalars['Uuid'];\n};\n\n\nexport type QueryGamesArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  input?: Maybe<GamesSearchInput>;\n  limit?: Scalars['Int'];\n};\n\n\nexport type QueryPlayerArgs = {\n  id?: Maybe<Scalars['Uuid']>;\n};\n\n\nexport type QueryPlayerPostArgs = {\n  playerId: Scalars['Uuid'];\n  postId: Scalars['Uuid'];\n};\n\n\nexport type QueryPlayerPostCommentArgs = {\n  commentId: Scalars['Uuid'];\n  playerId: Scalars['Uuid'];\n};\n\n\nexport type QueryPlayersArgs = {\n  continuationToken?: Maybe<Scalars['String']>;\n  input?: Maybe<PlayersSearchInput>;\n  limit?: Scalars['Int'];\n};\n\nexport type Reaction = {\n  __typename?: 'Reaction';\n  count: Scalars['Int'];\n  partitionKey?: Maybe<Scalars['String']>;\n  reactionType: ReactionType;\n};\n\nexport type ReactionDetail = {\n  __typename?: 'ReactionDetail';\n  id?: Maybe<Scalars['String']>;\n  player?: Maybe<Player>;\n  reactionType: ReactionType;\n  timestamp: Scalars['DateTime'];\n};\n\nexport enum ReactionType {\n  Angry = 'ANGRY',\n  Happy = 'HAPPY',\n  Like = 'LIKE',\n  Love = 'LOVE',\n  Sad = 'SAD',\n  Surprised = 'SURPRISED'\n}\n\nexport type RegisterPlayerFcmTokenInput = {\n  token: Scalars['String'];\n};\n\nexport type RegisterPlayerInput = {\n  countryCode: Scalars['String'];\n  handicap: Scalars['Int'];\n  name: Scalars['String'];\n  playerTypes: Array<PlayerType>;\n  preferredCourseIds: Array<Scalars['Uuid']>;\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n};\n\nexport type RemoveReactionInput = {\n  id: Scalars['Uuid'];\n  reactionType: ReactionType;\n};\n\nexport type ReportAbuseInput = {\n  description: Scalars['String'];\n  playerId: Scalars['Uuid'];\n};\n\nexport type SetCommunityAdminsInput = {\n  communityId: Scalars['Uuid'];\n  playerIds: Array<Scalars['Uuid']>;\n};\n\nexport type SetCommunityProfileImageRefInput = {\n  communityId: Scalars['Uuid'];\n  filename?: Maybe<Scalars['String']>;\n  height: Scalars['Int'];\n  width: Scalars['Int'];\n};\n\nexport type SetNotificationPreferencesInput = {\n  options: Array<NotificationPreferenceInput>;\n};\n\nexport type TeeTime = {\n  __typename?: 'TeeTime';\n  dateAndTime: Scalars['DateTime'];\n  isConfirmed: Scalars['Boolean'];\n};\n\nexport type TelephoneNumber = {\n  __typename?: 'TelephoneNumber';\n  dialingCode: Scalars['String'];\n  number: Scalars['String'];\n};\n\nexport type TelephoneNumberInput = {\n  dialingCode: Scalars['String'];\n  number: Scalars['String'];\n};\n\nexport type Timezone = {\n  __typename?: 'Timezone';\n  id?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  utcOffset: Scalars['TimeSpan'];\n  utcOffsetInMinutes: Scalars['Float'];\n};\n\nexport type UnfollowPlayerInput = {\n  playerId: Scalars['Uuid'];\n};\n\nexport type UpdateCommunityInput = {\n  communityId: Scalars['Uuid'];\n  name: Scalars['String'];\n};\n\nexport type UpdateGameInput = {\n  communityIds: Array<Scalars['Uuid']>;\n  courseId: Scalars['Uuid'];\n  gameId: Scalars['Uuid'];\n  gameType: GameType;\n  holes: Holes;\n  numberOfPlayers: Scalars['Int'];\n  teeTime: Scalars['DateTime'];\n};\n\nexport type UpdatePlayerCoursePreferencesInput = {\n  preferredCourseIds: Array<Scalars['Uuid']>;\n};\n\nexport type UpdatePlayerGamePreferencesInput = {\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n};\n\nexport type UpdatePlayerHandicapInput = {\n  handicap: Scalars['Int'];\n};\n\nexport type UpdatePlayerInput = {\n  countryCode: Scalars['String'];\n  name: Scalars['String'];\n  playerTypes: Array<PlayerType>;\n  preferredCourseIds: Array<Scalars['Uuid']>;\n  preferredGameTypes: Array<GameType>;\n  preferredPlayerTypes: Array<PlayerType>;\n};\n\nexport type UpdatePlayerPreferencesInput = {\n  countryCode: Scalars['String'];\n  name: Scalars['String'];\n  playerTypes: Array<PlayerType>;\n};\n\nexport type UpsertCourseInput = {\n  description: Scalars['String'];\n  emailAddress: Scalars['String'];\n  name: Scalars['String'];\n  physicalAddress: PhysicalAddressInput;\n  telephoneNumber: TelephoneNumberInput;\n};\n","import React from 'react'\n\nconst AboutScreen = () => {\n\treturn <div>About</div>\n}\n\nexport default AboutScreen\n","import { CSSProperties } from 'react'\nimport classNames from 'classnames'\n\nconst Body = ({\n\tchildren,\n\tclassName,\n\tstyle = {}\n}: {\n\tchildren: React.ReactNode | React.ReactNodeArray\n\tclassName?: string\n\tstyle?: CSSProperties\n}) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\t'h-screen',\n\t\t\t\t'overflow-x-auto',\n\t\t\t\t'bg-center',\n\t\t\t\t'bg-cover',\n\t\t\t\t'bg-gradient-to-r from-gray-300 via-gray-100 to-gray-300',\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\tstyle={style}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n\nexport default Body\n","const info = (message: string) => {\n\tconsole.log(message)\n}\n\nexport default info\n","const error = (error: any) => {\n\tconsole.error(error)\n}\n\nexport default error\n","import { AuthContextProps } from './AuthContextProps'\nimport React from 'react'\n\nexport default React.createContext<AuthContextProps>({\n\tauthenticating: true,\n\tauthenticated: false,\n\tlogout: () => Promise.resolve(),\n\tgetToken: () => Promise.resolve('')\n})\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { User, getAuth, signOut } from 'firebase/auth'\nimport { error, info } from 'services/logging'\n\nimport AuthContext from './AuthContext'\nimport { AuthProviderProps } from './AuthProviderProps'\n\nconst AuthProvider = ({ children }: AuthProviderProps) => {\n\tconst auth = getAuth()\n\tconst userRef = useRef<User | null>(null)\n\n\tconst [state, setState] = useState<{\n\t\tauthenticated: boolean\n\t\tauthenticating: boolean\n\t}>({\n\t\tauthenticated: false,\n\t\tauthenticating: true\n\t})\n\n\tconst tryLogout = async () => {\n\t\tawait signOut(auth)\n\n\t\tsetState({ authenticated: true, authenticating: true })\n\n\t\tsetState({\n\t\t\tauthenticating: false,\n\t\t\tauthenticated: false\n\t\t})\n\t}\n\n\tconst handleLogin = useCallback(async (user: User) => {\n\t\tinfo('User logged in')\n\n\t\tuserRef.current = user\n\n\t\tsetState({\n\t\t\tauthenticating: false,\n\t\t\tauthenticated: true\n\t\t})\n\t}, [])\n\n\tconst handleLogout = useCallback(() => {\n\t\tinfo('User logged out')\n\t\tsetState({\n\t\t\tauthenticating: false,\n\t\t\tauthenticated: false\n\t\t})\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst subscriber = auth.onAuthStateChanged(async (user) => {\n\t\t\ttry {\n\t\t\t\tif (user) {\n\t\t\t\t\tawait handleLogin(user)\n\t\t\t\t} else {\n\t\t\t\t\thandleLogout()\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror(e)\n\t\t\t}\n\t\t})\n\t\treturn subscriber\n\t}, [auth, handleLogin, handleLogout])\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{\n\t\t\t\t...state,\n\t\t\t\tlogout: tryLogout,\n\t\t\t\tgetToken: async () => userRef.current?.getIdToken()\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t)\n}\n\nexport default AuthProvider\n","import AuthContext from './AuthContext'\nimport { useContext } from 'react'\n\nconst useAuthContext = () => {\n\treturn useContext(AuthContext)\n}\n\nexport default useAuthContext\n","import React, { useEffect, useState } from 'react'\nimport { fetchAndActivate, getRemoteConfig } from 'firebase/remote-config'\n\nimport { ConfigProviderProps } from './ConfigProviderProps'\n\nconst ConfigProvider = ({ children }: ConfigProviderProps) => {\n\tconst [ready, setReady] = useState(false)\n\n\tuseEffect(() => {\n\t\tconst remoteConfig = getRemoteConfig()\n\n\t\tconst init = async () => {\n\t\t\tawait fetchAndActivate(remoteConfig)\n\t\t\tsetReady(true)\n\t\t}\n\n\t\tinit()\n\t}, [])\n\n\treturn <>{ready && children}</>\n}\n\nexport default ConfigProvider\n","import {\n\tgetBoolean,\n\tgetNumber,\n\tgetRemoteConfig,\n\tgetString,\n\tgetValue\n} from 'firebase/remote-config'\n\nimport { ConfigKeys } from './ConfigKeys'\n\nconst useConfig = () => {\n\tconst remoteConfig = getRemoteConfig()\n\treturn {\n\t\tgetString: (key: ConfigKeys) => getString(remoteConfig, key),\n\t\tgetNumber: (key: ConfigKeys) => getNumber(remoteConfig, key),\n\t\tgetBoolean: (key: ConfigKeys) => getBoolean(remoteConfig, key),\n\t\tgetValue: (key: ConfigKeys) => getValue(remoteConfig, key)\n\t}\n}\n\nexport default useConfig\n","import { useEffect, useState } from 'react'\n\nimport { ImageRef } from 'services/api'\nimport { Maybe } from 'graphql/jsutils/Maybe'\nimport { useAuthContext } from 'services/auth'\nimport { useConfig } from 'services/config'\n\nconst useGetImageSource = (imageRef: Maybe<ImageRef>, width: number = 256) => {\n\tconst auth = useAuthContext()\n\tconst config = useConfig()\n\tconst [source, setSource] = useState<string>('')\n\n\tuseEffect(() => {\n\t\tconst baseUrl = config.getString('ApiUrl')\n\t\tconst load = async () => {\n\t\t\tconst token = await auth.getToken()\n\n\t\t\tconst response = await fetch(\n\t\t\t\t`${baseUrl}${imageRef!.ref}?width=${width}&format=jpg`,\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tconst blob = await response.blob()\n\t\t\tvar arrayBuffer = await blob.arrayBuffer()\n\t\t\tconst base64 = btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)))\n\t\t\tconst data = `data:${response.headers.get(\n\t\t\t\t'content-type'\n\t\t\t)};base64,${base64}`\n\t\t\tsetSource(data)\n\t\t}\n\t\timageRef && load()\n\t}, [imageRef, config, auth, width])\n\n\treturn source\n}\n\nexport default useGetImageSource\n","import {gql} from '@apollo/client'\n\nexport default gql`\n  fragment ImageRefFragment on ImageRef {\n    ref\n    width\n    height\n  }\n`\n","import IMAGE_REF_FRAGMENT from 'state/IMAGE_REF_FRAGMENT'\nimport { gql } from '@apollo/client'\n\nexport default gql`\n\tfragment SelfFragment on Player {\n\t\t__typename\n\t\tid\n\t\tinitials\n\t\tname\n\t\tprofileImageRef {\n\t\t\t...ImageRefFragment\n\t\t}\n\t}\n\t${IMAGE_REF_FRAGMENT}\n`\n","import { Maybe, Player } from 'services/api'\nimport { NetworkStatus, gql, useQuery } from '@apollo/client'\n\nimport SELF_FRAGMENT from './SELF_FRAGMENT'\n\nconst GET_SELF = gql`\n\tquery GetSelf {\n\t\tself: player {\n\t\t\t...SelfFragment\n\t\t}\n\t}\n\t${SELF_FRAGMENT}\n`\n\nconst useGetSelf = () => {\n\tconst { data, networkStatus, refetch } = useQuery<{\n\t\tself: Maybe<Player>\n\t}>(GET_SELF, {\n\t\tnotifyOnNetworkStatusChange: true\n\t})\n\n\tconst loading = networkStatus === NetworkStatus.loading\n\treturn { loading, data, networkStatus, refetch }\n}\n\nexport default useGetSelf\n","import { Body } from 'components/body'\nimport { useAuthContext } from 'services/auth'\nimport { useGetImageSource } from 'state/media'\nimport { useGetSelf } from 'state/players'\n\nconst AdminScreen = () => {\n\tconst { logout } = useAuthContext()\n\tconst { data } = useGetSelf()\n\tconst source = useGetImageSource(data?.self?.profileImageRef)\n\treturn (\n\t\t<Body>\n\t\t\t<div className=\"m-2 navbar mb-2 shadow-lg bg-neutral text-neutral-content rounded-box\">\n\t\t\t\t<div className=\"flex-none hidden lg:flex\">\n\t\t\t\t\t<button className=\"btn btn-square btn-ghost\">\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tclassName=\"inline-block w-6 h-6 stroke-current\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\t\td=\"M4 6h16M4 12h16M4 18h16\"\n\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-1 hidden px-2 mx-2 lg:flex\">\n\t\t\t\t\t<span className=\"text-lg font-bold\">\n\t\t\t\t\t\t{data?.self && data.self.name}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-1 lg:flex-none\">\n\t\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\t\tclassName=\"input input-ghost\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-none\">\n\t\t\t\t\t<button className=\"btn btn-square btn-ghost\">\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tclassName=\"inline-block w-6 h-6 stroke-current\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\t\td=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-none\">\n\t\t\t\t\t<button className=\"btn btn-square btn-ghost\">\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tclassName=\"inline-block w-6 h-6 stroke-current\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\t\td=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\n\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-none\">\n\t\t\t\t\t<div className=\"avatar\">\n\t\t\t\t\t\t<div className=\"rounded-full w-10 h-10 m-1\">\n\t\t\t\t\t\t\t{data?.self?.profileImageRef?.ref && (\n\t\t\t\t\t\t\t\t<img src={source} alt={'Profile'} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={'btn'} onClick={logout}>\n\t\t\t\tLogout\n\t\t\t</div>\n\t\t</Body>\n\t)\n}\n\nexport default AdminScreen\n","import {isEqual, omit, uniqBy} from 'lodash'\n\nimport {FieldPolicy} from '@apollo/client'\n\nconst policy: FieldPolicy<any, any, any> = {\n  keyArgs: false,\n  read: ({cachedItem} = {}) => {\n    return cachedItem\n  },\n  merge: (prev = {}, incoming, {args}) => {\n    const stableArgs = omit(args, ['continuationToken'])\n\n    if (!args?.continuationToken || !isEqual(prev.args, stableArgs)) {\n      return {args: stableArgs, cachedItem: incoming}\n    }\n\n    return {\n      args: stableArgs,\n      cachedItem: {\n        ...incoming,\n        data: uniqBy(\n          [...(prev?.cachedItem?.data ?? []), ...incoming.data],\n          '__ref'\n        )\n      }\n    }\n  }\n}\n\nexport default policy\n","import {FieldPolicy} from '@apollo/client'\n\nconst policy: FieldPolicy<any, any, any> = {\n  merge(_, incoming) {\n    return incoming\n  }\n}\n\nexport default policy\n","import {FieldPolicy} from '@apollo/client'\nimport {uniqBy} from 'lodash'\n\nconst policy: FieldPolicy<any, any, any> = {\n  merge(existing = [], incoming) {\n    return uniqBy([...existing, ...incoming], '__ref')\n  }\n}\n\nexport default policy\n","import { FieldPolicy } from '@apollo/client'\n\nconst policy: FieldPolicy<any, any, any> = {\n\tkeyArgs: [\n\t\t'input',\n\t\t[\n\t\t\t'term',\n\t\t\t'courseIds',\n\t\t\t'isAscending',\n\t\t\t'teeTime',\n\t\t\t['from', 'to'],\n\t\t\t'communityIds'\n\t\t]\n\t]\n}\n\nexport default policy\n","import { ApolloClient, InMemoryCache } from '@apollo/client'\nimport {\n\tmergePolicy,\n\tpaginatedGamesPolicy,\n\tpaginationPolicy,\n\treplacePolicy\n} from './utils'\n\nimport { BatchHttpLink } from '@apollo/client/link/batch-http'\nimport { error } from 'services/logging'\nimport { onError } from '@apollo/client/link/error'\nimport { setContext } from '@apollo/client/link/context'\nimport { uniqBy } from 'lodash'\n\nconst createClient = (\n\turl: string,\n\tgetToken: () => Promise<string | undefined>\n) => {\n\tconst httpLink = new BatchHttpLink({\n\t\turi: url\n\t})\n\n\tconst authLink = setContext(async (_, { headers }) => {\n\t\tconst token = await getToken()\n\t\treturn {\n\t\t\theaders: {\n\t\t\t\t...headers,\n\t\t\t\tauthorization: token ? `Bearer ${token}` : ''\n\t\t\t}\n\t\t}\n\t})\n\n\tconst errorLink = onError(({ graphQLErrors, networkError }) => {\n\t\tif (graphQLErrors) graphQLErrors.forEach((e) => error(e))\n\t\tif (networkError) error(networkError)\n\t})\n\n\tconst client = new ApolloClient({\n\t\tlink: errorLink.concat(authLink).concat(httpLink),\n\t\tcache: new InMemoryCache({\n\t\t\ttypePolicies: {\n\t\t\t\tPostCommentOfPlayer: {\n\t\t\t\t\tfields: {\n\t\t\t\t\t\treplies: paginationPolicy,\n\t\t\t\t\t\treactions: replacePolicy\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tPostOfPlayer: {\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tcomments: paginationPolicy,\n\t\t\t\t\t\treactions: replacePolicy\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tPlayer: {\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tplayerTypes: replacePolicy,\n\t\t\t\t\t\tpreferredGameTypes: replacePolicy,\n\t\t\t\t\t\tpreferredPlayerTypes: replacePolicy,\n\t\t\t\t\t\tpreferredCourses: replacePolicy,\n\t\t\t\t\t\tcommunities: replacePolicy,\n\t\t\t\t\t\tgameInvitations: replacePolicy,\n\t\t\t\t\t\tgames: paginatedGamesPolicy,\n\t\t\t\t\t\tposts: paginationPolicy\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tPostCommentOfCommunity: {\n\t\t\t\t\tfields: {\n\t\t\t\t\t\treplies: paginationPolicy,\n\t\t\t\t\t\treactions: replacePolicy\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tPostOfCommunity: {\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tcomments: paginationPolicy,\n\t\t\t\t\t\treactions: replacePolicy\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tCommunity: {\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tposts: paginationPolicy,\n\t\t\t\t\t\tadmins: replacePolicy\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tGame: {\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tplayers: replacePolicy,\n\t\t\t\t\t\tinvitations: replacePolicy\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tPaginatedResultsOfGame: {\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tdata: mergePolicy\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tCourse: {\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tphysicalAddress: replacePolicy\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tPhysicalAddress: {\n\t\t\t\t\tkeyFields: [\n\t\t\t\t\t\t'countryCode',\n\t\t\t\t\t\t'postCode',\n\t\t\t\t\t\t'province',\n\t\t\t\t\t\t'street',\n\t\t\t\t\t\t'streetNumber',\n\t\t\t\t\t\t'suburb'\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tQuery: {\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tcommunities: paginationPolicy,\n\t\t\t\t\t\tgames: paginatedGamesPolicy,\n\t\t\t\t\t\tcourses: paginationPolicy,\n\t\t\t\t\t\tchat: replacePolicy,\n\t\t\t\t\t\tfeed: paginationPolicy,\n\t\t\t\t\t\t// Ensures that all agenda items are merged into one big array\n\t\t\t\t\t\t// i.e. We never overwrite records\n\t\t\t\t\t\tagenda: {\n\t\t\t\t\t\t\tkeyArgs: false,\n\t\t\t\t\t\t\tmerge(existing = [], incoming) {\n\t\t\t\t\t\t\t\treturn uniqBy([...existing, ...incoming], '__ref')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t})\n\treturn client\n}\n\nexport default createClient\n","import { useEffect, useState } from 'react'\n\nimport { useConfig } from 'services/config'\n\nconst useApiVersion = () => {\n\tconst config = useConfig()\n\tconst [version, setVersion] = useState<number | undefined>()\n\n\tuseEffect(() => {\n\t\tfetch(`${config.getString('ApiUrl')}health`)\n\t\t\t.then(\n\t\t\t\t(response) => response.json(),\n\t\t\t\t(err) => {\n\t\t\t\t\tconsole.error(err)\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((data) => setVersion(data.version))\n\t}, [config])\n\treturn version\n}\n\nexport default useApiVersion\n","import {\n\tApolloClient,\n\tApolloProvider,\n\tNormalizedCacheObject\n} from '@apollo/client'\nimport { useEffect, useRef, useState } from 'react'\n\nimport { ApiProviderProps } from './ApiProviderProps'\nimport MIN_SUPPORTED_API_VERSION from './MIN_SUPPORTED_API_VERSION'\nimport createClient from './createClient'\nimport useApiVersion from './useApiVersion'\nimport { useAuthContext } from 'services/auth'\nimport { useConfig } from 'services/config'\n\nconst ApiProvider = ({ children }: ApiProviderProps) => {\n\tconst authContext = useAuthContext()\n\tconst clientRef = useRef<ApolloClient<NormalizedCacheObject>>()\n\tconst [ready, setReady] = useState(false)\n\tconst config = useConfig()\n\tconst currentVersion = useApiVersion()\n\n\tuseEffect(() => {\n\t\tsetReady(false)\n\t\tif (authContext.authenticated) {\n\t\t\tclientRef.current = createClient(\n\t\t\t\tconfig.getString('ApiUrl'),\n\t\t\t\tauthContext.getToken\n\t\t\t)\n\t\t\tsetReady(true)\n\t\t} else if (clientRef.current) {\n\t\t\tclientRef.current.clearStore()\n\t\t}\n\t}, [authContext, currentVersion, clientRef, config])\n\n\tif (currentVersion && MIN_SUPPORTED_API_VERSION < currentVersion) {\n\t\treturn <></>\n\t} else if (ready) {\n\t\treturn (\n\t\t\t<ApolloProvider client={clientRef.current!}>{children}</ApolloProvider>\n\t\t)\n\t} else {\n\t\treturn <></>\n\t}\n}\n\nexport default ApiProvider\n","const MIN_SUPPORTED_API_VERSION = 1\nexport default MIN_SUPPORTED_API_VERSION\n","import React from 'react'\nimport { ScreenShotProps } from './ScreenShotProps'\n\nconst ScreenShot = ({ src }: ScreenShotProps) => {\n\treturn (\n\t\t<img\n\t\t\tclassName={'object-fill bg-center bg-contain bg-clip-content'}\n\t\t\tsrc={src}\n\t\t\talt={'Screenshot'}\n\t\t/>\n\t)\n}\n\nexport default ScreenShot\n","const TopMenu = () => {\n\treturn (\n\t\t<div className={'flex w-full h-20 items-center text-white'}>\n\t\t\t<div className={'container mx-auto flex justify-end items-center'}>\n\t\t\t\t<ul className={'mr-9 divide-x'}>\n\t\t\t\t\t<li className={'float-left px-4'}>\n\t\t\t\t\t\t<a href={'/'}>About</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className={'float-left px-4'}>\n\t\t\t\t\t\t<a href={'/'}>Contact</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default TopMenu\n","export default __webpack_public_path__ + \"static/media/apple.8c4986ee.svg\";","export default __webpack_public_path__ + \"static/media/google.f902960a.png\";","export default __webpack_public_path__ + \"static/media/screenshot-1.80287c61.png\";","import { Body } from 'components/body'\nimport React from 'react'\nimport { ScreenShot } from 'components/screen-shot'\nimport { TopMenu } from 'components/top-menu'\nimport apple from 'assets/apple.svg'\nimport classNames from 'classnames'\nimport google from 'assets/google.png'\nimport screenshot1 from 'assets/screenshot-1.png'\n\nconst googleLink =\n\t'https://play.google.com/store/apps/details?id=com.golfsidekick'\nconst appleLink = 'https://testflight.apple.com/join/t6ys2guf'\n\nconst Section = ({\n\tchildren,\n\tclassName\n}: {\n\tchildren: React.ReactNode | React.ReactNodeArray\n\tclassName?: string\n}) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\t'flex',\n\t\t\t\t'flex-col',\n\t\t\t\t'md:flex-row',\n\t\t\t\t'flex-wrap',\n\t\t\t\t'justify-center',\n\t\t\t\t'items-center',\n\t\t\t\t'py-9',\n\t\t\t\tclassName\n\t\t\t)}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n\nconst Break = ({ inverse = false }: { inverse?: boolean }) => {\n\treturn (\n\t\t<svg className={'fill-current text-white'} viewBox={'0 0 100 5'}>\n\t\t\t{inverse ? (\n\t\t\t\t<polygon points=\"100,0 0,0 0,5\" />\n\t\t\t) : (\n\t\t\t\t<polygon points=\"100,0 100,5 0,5\" />\n\t\t\t)}\n\t\t</svg>\n\t)\n}\n\nconst LandingScreen = () => {\n\treturn (\n\t\t<Body>\n\t\t\t<TopMenu />\n\t\t\t<Section>\n\t\t\t\t<div className={'flex flex-col items-center text-white'}>\n\t\t\t\t\t<div className={'w-7/12 text-center'}>\n\t\t\t\t\t\t<h1 className={'text-6xl lg:text-8xl font-black mb-6 text-shadow'}>\n\t\t\t\t\t\t\tWelcome Playa!\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<h2 className={'text-lg font-normal mb-12 text-shadow'}>\n\t\t\t\t\t\t\tPlan golf games with like minded strangers to build a community of\n\t\t\t\t\t\t\tnew friends.\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div className={'flex flex-row justify-center items-endmt-4'}>\n\t\t\t\t\t\t\t<a href={googleLink}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName={'object-contain max-h-16'}\n\t\t\t\t\t\t\t\t\tsrc={google}\n\t\t\t\t\t\t\t\t\talt={'Google Play Store'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href={appleLink}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName={'object-contain max-h-16 p-3'}\n\t\t\t\t\t\t\t\t\tsrc={apple}\n\t\t\t\t\t\t\t\t\talt={'Apple App Store'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={'pt-9 lg:pt-0 flex items-center justify-center'}>\n\t\t\t\t\t<div className={'max-w-xs'}>\n\t\t\t\t\t\t<ScreenShot src={screenshot1} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Section>\n\t\t\t<Break />\n\t\t\t<Section className={'bg-white'}>\n\t\t\t\t<div className={'flex items-center justify-center'}>\n\t\t\t\t\t<div className={'max-w-xs'}>\n\t\t\t\t\t\t<ScreenShot src={screenshot1} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={'pt-9 lg:pt-0 flex flex-col items-center text-black'}>\n\t\t\t\t\t<div className={'w-7/12 text-center'}>\n\t\t\t\t\t\t<h1 className={'text-4xl font-bold mb-6'}>Game calendar</h1>\n\t\t\t\t\t\t<h2 className={'text-lg font-normal mb-12'}>\n\t\t\t\t\t\t\tManage games via the game calendar.\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Section>\n\t\t\t<Break inverse />\n\t\t\t<Section>\n\t\t\t\t<div className={'flex flex-col items-center text-white'}>\n\t\t\t\t\t<div className={'w-7/12 text-center'}>\n\t\t\t\t\t\t<h1 className={'text-4xl font-bold mb-6 text-shadow'}>Game chat</h1>\n\t\t\t\t\t\t<h2 className={'text-lg font-normal mb-12 text-shadow'}>\n\t\t\t\t\t\t\tKeep in touch and coordinate games via the game chat.\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={'pt-9 lg:pt-0 flex items-center justify-center'}>\n\t\t\t\t\t<div className={'max-w-xs'}>\n\t\t\t\t\t\t<ScreenShot src={screenshot1} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Section>\n\t\t\t<Break />\n\t\t\t<footer className=\"p-10 footer footer-center bg-white\">\n\t\t\t\t<div>\n\t\t\t\t\t<span className=\"footer-title\">Company</span>\n\t\t\t\t\t<a className=\"link link-hover\" href={'/about'}>\n\t\t\t\t\t\tAbout us\n\t\t\t\t\t</a>\n\t\t\t\t\t<a className=\"link link-hover\" href={'/contact'}>\n\t\t\t\t\t\tContact\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span className=\"footer-title\">Legal</span>\n\t\t\t\t\t<a className=\"link link-hover\" href={'eula.html'}>\n\t\t\t\t\t\tEnd-User License Agreement\n\t\t\t\t\t</a>\n\t\t\t\t\t<a className=\"link link-hover\" href={'privacy-policy.html'}>\n\t\t\t\t\t\tPrivacy policy\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t</Body>\n\t)\n}\n\nexport default LandingScreen\n","import {\n\tGoogleAuthProvider,\n\tgetAuth,\n\tgetRedirectResult,\n\tsignInWithRedirect\n} from 'firebase/auth'\nimport React, { useEffect, useState } from 'react'\n\nimport { Body } from 'components/body'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport classNames from 'classnames'\nimport { error } from 'services/logging'\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons'\nimport { useAuthContext } from 'services/auth'\nimport { useHistory } from 'react-router'\n\nconst provider = new GoogleAuthProvider()\n\nconst LoginScreen = () => {\n\tconst auth = getAuth()\n\tconst history = useHistory()\n\tconst [busy, setBusy] = useState(true)\n\tconst { authenticated } = useAuthContext()\n\tconst login = () => !busy && signInWithRedirect(auth, provider)\n\n\tuseEffect(() => {\n\t\tgetRedirectResult(auth)\n\t\t\t.then(() => {\n\t\t\t\tsetBusy(false)\n\n\t\t\t\tif (authenticated) {\n\t\t\t\t\thistory.push('/admin')\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => error(e))\n\t}, [auth, authenticated, history])\n\n\treturn (\n\t\t<Body>\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'flex mx-auto',\n\t\t\t\t\t'bg-white',\n\t\t\t\t\t'p-9',\n\t\t\t\t\t'mt-9',\n\t\t\t\t\t'w-1/2',\n\t\t\t\t\t'rounded-md',\n\t\t\t\t\t'flex-col'\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<h1 className={classNames('text-xl', 'text-black', 'border-b', 'p-2')}>\n\t\t\t\t\tSign in\n\t\t\t\t</h1>\n\t\t\t\t<button\n\t\t\t\t\tonClick={login}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'btn',\n\t\t\t\t\t\t'uppercase',\n\t\t\t\t\t\t'h-12',\n\t\t\t\t\t\t'mt-3',\n\t\t\t\t\t\t'text-white',\n\t\t\t\t\t\t'w-full',\n\t\t\t\t\t\t'rounded',\n\t\t\t\t\t\t'bg-red-800',\n\t\t\t\t\t\t'hover:bg-red-900',\n\t\t\t\t\t\t'flex items-center justify-center',\n\t\t\t\t\t\t{ loading: busy }\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<FontAwesomeIcon className={'mx-4'} icon={faGoogle} />\n\t\t\t\t\t<span>Sign in with Google</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Body>\n\t)\n}\n\nexport default LoginScreen\n","import { Redirect, Route } from 'react-router-dom'\n\nimport { ProtectedRouteProps } from './ProtectedRouteProps'\nimport { useAuthContext } from 'services/auth'\n\nconst ProtectedRoute = ({ children, ...props }: ProtectedRouteProps) => {\n\tconst { authenticated } = useAuthContext()\n\n\treturn (\n\t\t<Route {...props}>\n\t\t\t{authenticated ? <>{children}</> : <Redirect to={'/login'} />}\n\t\t</Route>\n\t)\n}\n\nexport default ProtectedRoute\n","import { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\n\nimport { AboutScreen } from 'screens/about'\nimport { AdminScreen } from 'screens/admin'\nimport { ApiProvider } from 'services/api'\nimport { AuthProvider } from 'services/auth'\nimport { ConfigProvider } from 'services/config'\nimport { LandingScreen } from 'screens/landing'\nimport { LoginScreen } from 'screens/login'\nimport { ProtectedRoute } from 'components/protected-route'\n\nfunction App() {\n\treturn (\n\t\t<AuthProvider>\n\t\t\t<ConfigProvider>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={'/about'}>\n\t\t\t\t\t\t\t<AboutScreen />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path={'/login'}>\n\t\t\t\t\t\t\t<LoginScreen />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<ProtectedRoute path={'/admin'}>\n\t\t\t\t\t\t\t<ApiProvider>\n\t\t\t\t\t\t\t\t<AdminScreen />\n\t\t\t\t\t\t\t</ApiProvider>\n\t\t\t\t\t\t</ProtectedRoute>\n\t\t\t\t\t\t<Route path={'/'}>\n\t\t\t\t\t\t\t<LandingScreen />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</ConfigProvider>\n\t\t</AuthProvider>\n\t)\n}\n\nexport default App\n","const firebaseConfig = {\n\tapiKey: 'AIzaSyBCk5rap0Tdlqj_pernFpnqlId79mM0Xxc',\n\tauthDomain: 'golf-sidekick.firebaseapp.com',\n\tdatabaseURL: 'https://golf-sidekick.firebaseio.com',\n\tprojectId: 'golf-sidekick',\n\tstorageBucket: 'golf-sidekick.appspot.com',\n\tmessagingSenderId: '15461388252',\n\tappId: '1:15461388252:web:58e9212e603b8ddff38919',\n\tmeasurementId: 'G-7K518K72FS'\n}\n\nexport default firebaseConfig\n","import firebaseConfig from './firebaseConfig'\nimport { initializeApp } from 'firebase/app'\n\nconst app = initializeApp(firebaseConfig)\n\nconst registerFirebaseApp = () => app\n\nexport default registerFirebaseApp\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css'\n\nimport App from './App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { registerFirebaseApp } from 'services/firebase'\nimport reportWebVitals from './reportWebVitals'\n\nregisterFirebaseApp()\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}